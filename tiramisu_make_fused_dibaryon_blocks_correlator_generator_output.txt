Lowering after final simplification:
assert((reinterpret(uint64, buf_C_r.buffer) != (uint64)0), halide_error_buffer_argument_is_null("buf_C_r"))
assert((reinterpret(uint64, buf_C_i.buffer) != (uint64)0), halide_error_buffer_argument_is_null("buf_C_i"))
assert((reinterpret(uint64, _src_weights_b26.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_weights_b26"))
assert((reinterpret(uint64, _src_spins_b20.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_spins_b20"))
assert((reinterpret(uint64, _src_spin_weights_b25.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_spin_weights_b25"))
assert((reinterpret(uint64, _src_spin_block_weights_b21.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_spin_block_weights_b21"))
assert((reinterpret(uint64, _src_psi_B2_r_b8.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_psi_B2_r_b8"))
assert((reinterpret(uint64, _src_psi_B2_i_b9.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_psi_B2_i_b9"))
assert((reinterpret(uint64, _src_psi_B1_r_b6.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_psi_B1_r_b6"))
assert((reinterpret(uint64, _src_psi_B1_i_b7.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_psi_B1_i_b7"))
assert((reinterpret(uint64, _src_color_weights_b24.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_src_color_weights_b24"))
assert((reinterpret(uint64, _snk_weights_b29.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_weights_b29"))
assert((reinterpret(uint64, _snk_spin_weights_b28.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_spin_weights_b28"))
assert((reinterpret(uint64, _snk_psi_r_b18.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_psi_r_b18"))
assert((reinterpret(uint64, _snk_psi_i_b19.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_psi_i_b19"))
assert((reinterpret(uint64, _snk_psi_B2_r_b12.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_psi_B2_r_b12"))
assert((reinterpret(uint64, _snk_psi_B2_i_b13.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_psi_B2_i_b13"))
assert((reinterpret(uint64, _snk_psi_B1_r_b10.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_psi_B1_r_b10"))
assert((reinterpret(uint64, _snk_psi_B1_i_b11.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_psi_B1_i_b11"))
assert((reinterpret(uint64, _snk_color_weights_b27.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_color_weights_b27"))
assert((reinterpret(uint64, _snk_b_b23.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_snk_b_b23"))
assert((reinterpret(uint64, _sigs_b22.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_sigs_b22"))
assert((reinterpret(uint64, _hex_src_psi_r_b14.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_src_psi_r_b14"))
assert((reinterpret(uint64, _hex_src_psi_i_b15.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_src_psi_i_b15"))
assert((reinterpret(uint64, _hex_snk_weights_b32.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_snk_weights_b32"))
assert((reinterpret(uint64, _hex_snk_spin_weights_b31.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_snk_spin_weights_b31"))
assert((reinterpret(uint64, _hex_snk_psi_r_b16.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_snk_psi_r_b16"))
assert((reinterpret(uint64, _hex_snk_psi_i_b17.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_snk_psi_i_b17"))
assert((reinterpret(uint64, _hex_snk_color_weights_b30.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_hex_snk_color_weights_b30"))
assert((reinterpret(uint64, _B2_prop_r_b4.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_B2_prop_r_b4"))
assert((reinterpret(uint64, _B2_prop_i_b5.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_B2_prop_i_b5"))
assert((reinterpret(uint64, _B1_prop_r_b2.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_B1_prop_r_b2"))
assert((reinterpret(uint64, _B1_prop_i_b3.buffer) != (uint64)0), halide_error_buffer_argument_is_null("_B1_prop_i_b3"))
let _B1_prop_i_b3 = _halide_buffer_get_host(_B1_prop_i_b3.buffer)
let _B1_prop_r_b2 = _halide_buffer_get_host(_B1_prop_r_b2.buffer)
let _B2_prop_i_b5 = _halide_buffer_get_host(_B2_prop_i_b5.buffer)
let _B2_prop_r_b4 = _halide_buffer_get_host(_B2_prop_r_b4.buffer)
let _hex_snk_color_weights_b30 = _halide_buffer_get_host(_hex_snk_color_weights_b30.buffer)
let _hex_snk_psi_i_b17 = _halide_buffer_get_host(_hex_snk_psi_i_b17.buffer)
let _hex_snk_psi_r_b16 = _halide_buffer_get_host(_hex_snk_psi_r_b16.buffer)
let _hex_snk_spin_weights_b31 = _halide_buffer_get_host(_hex_snk_spin_weights_b31.buffer)
let _hex_snk_weights_b32 = _halide_buffer_get_host(_hex_snk_weights_b32.buffer)
let _hex_src_psi_i_b15 = _halide_buffer_get_host(_hex_src_psi_i_b15.buffer)
let _hex_src_psi_r_b14 = _halide_buffer_get_host(_hex_src_psi_r_b14.buffer)
let _sigs_b22 = _halide_buffer_get_host(_sigs_b22.buffer)
let _snk_b_b23 = _halide_buffer_get_host(_snk_b_b23.buffer)
let _snk_color_weights_b27 = _halide_buffer_get_host(_snk_color_weights_b27.buffer)
let _snk_psi_B1_i_b11 = _halide_buffer_get_host(_snk_psi_B1_i_b11.buffer)
let _snk_psi_B1_r_b10 = _halide_buffer_get_host(_snk_psi_B1_r_b10.buffer)
let _snk_psi_B2_i_b13 = _halide_buffer_get_host(_snk_psi_B2_i_b13.buffer)
let _snk_psi_B2_r_b12 = _halide_buffer_get_host(_snk_psi_B2_r_b12.buffer)
let _snk_psi_i_b19 = _halide_buffer_get_host(_snk_psi_i_b19.buffer)
let _snk_psi_r_b18 = _halide_buffer_get_host(_snk_psi_r_b18.buffer)
let _snk_spin_weights_b28 = _halide_buffer_get_host(_snk_spin_weights_b28.buffer)
let _snk_weights_b29 = _halide_buffer_get_host(_snk_weights_b29.buffer)
let _src_color_weights_b24 = _halide_buffer_get_host(_src_color_weights_b24.buffer)
let _src_psi_B1_i_b7 = _halide_buffer_get_host(_src_psi_B1_i_b7.buffer)
let _src_psi_B1_r_b6 = _halide_buffer_get_host(_src_psi_B1_r_b6.buffer)
let _src_psi_B2_i_b9 = _halide_buffer_get_host(_src_psi_B2_i_b9.buffer)
let _src_psi_B2_r_b8 = _halide_buffer_get_host(_src_psi_B2_r_b8.buffer)
let _src_spin_block_weights_b21 = _halide_buffer_get_host(_src_spin_block_weights_b21.buffer)
let _src_spin_weights_b25 = _halide_buffer_get_host(_src_spin_weights_b25.buffer)
let _src_spins_b20 = _halide_buffer_get_host(_src_spins_b20.buffer)
let _src_weights_b26 = _halide_buffer_get_host(_src_weights_b26.buffer)
let buf_C_i = _halide_buffer_get_host(buf_C_i.buffer)
let buf_C_r = _halide_buffer_get_host(buf_C_r.buffer)
produce  {
  allocate buf_src_B2_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B2_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B2_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B2_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B2_Blocal_props_r2_r[float64 * 2 * 3]
  allocate buf_src_B2_Blocal_props_r2_i[float64 * 2 * 3]
  allocate buf_src_B2_Blocal_props_r1_r[float64 * 2 * 3]
  allocate buf_src_B2_Blocal_props_r1_i[float64 * 2 * 3]
  allocate buf_src_B2_Blocal_diquark_r2_r[float64 * 1]
  allocate buf_src_B2_Blocal_diquark_r2_i[float64 * 1]
  allocate buf_src_B2_Blocal_diquark_r1_r[float64 * 1]
  allocate buf_src_B2_Blocal_diquark_r1_i[float64 * 1]
  allocate buf_src_B1_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B1_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B1_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B1_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_src_B1_Blocal_props_r2_r[float64 * 2 * 3]
  allocate buf_src_B1_Blocal_props_r2_i[float64 * 2 * 3]
  allocate buf_src_B1_Blocal_props_r1_r[float64 * 2 * 3]
  allocate buf_src_B1_Blocal_props_r1_i[float64 * 2 * 3]
  allocate buf_src_B1_Blocal_diquark_r2_r[float64 * 1]
  allocate buf_src_B1_Blocal_diquark_r2_i[float64 * 1]
  allocate buf_src_B1_Blocal_diquark_r1_r[float64 * 1]
  allocate buf_src_B1_Blocal_diquark_r1_i[float64 * 1]
  allocate buf_snk_B2_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B2_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B2_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B2_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B2_Blocal_props_r2_r[float64 * 2 * 3]
  allocate buf_snk_B2_Blocal_props_r2_i[float64 * 2 * 3]
  allocate buf_snk_B2_Blocal_props_r1_r[float64 * 2 * 3]
  allocate buf_snk_B2_Blocal_props_r1_i[float64 * 2 * 3]
  allocate buf_snk_B2_Blocal_diquark_r2_r[float64 * 1]
  allocate buf_snk_B2_Blocal_diquark_r2_i[float64 * 1]
  allocate buf_snk_B2_Blocal_diquark_r1_r[float64 * 1]
  allocate buf_snk_B2_Blocal_diquark_r1_i[float64 * 1]
  allocate buf_snk_B1_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B1_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B1_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B1_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_snk_B1_Blocal_props_r2_r[float64 * 2 * 3]
  allocate buf_snk_B1_Blocal_props_r2_i[float64 * 2 * 3]
  allocate buf_snk_B1_Blocal_props_r1_r[float64 * 2 * 3]
  allocate buf_snk_B1_Blocal_props_r1_i[float64 * 2 * 3]
  allocate buf_snk_B1_Blocal_diquark_r2_r[float64 * 1]
  allocate buf_snk_B1_Blocal_diquark_r2_i[float64 * 1]
  allocate buf_snk_B1_Blocal_diquark_r1_r[float64 * 1]
  allocate buf_snk_B1_Blocal_diquark_r1_i[float64 * 1]
  allocate buf_flip_src_B2_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B2_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B2_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B2_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B1_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B1_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B1_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_src_B1_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B2_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B2_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B2_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B2_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B1_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B1_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B1_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_snk_B1_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_H_BB_new_term_b2_r[float64 * 1]
  allocate buf_flip_H_BB_new_term_b2_i[float64 * 1]
  allocate buf_flip_H_BB_new_term_b1_r[float64 * 1]
  allocate buf_flip_H_BB_new_term_b1_i[float64 * 1]
  allocate buf_flip_BB_H_new_term_b2_r[float64 * 1]
  allocate buf_flip_BB_H_new_term_b2_i[float64 * 1]
  allocate buf_flip_BB_H_new_term_b1_r[float64 * 1]
  allocate buf_flip_BB_H_new_term_b1_i[float64 * 1]
  allocate buf_flip_BB_BB_new_term_b2_r[float64 * 1]
  allocate buf_flip_BB_BB_new_term_b2_i[float64 * 1]
  allocate buf_flip_BB_BB_new_term_b1_r[float64 * 1]
  allocate buf_flip_BB_BB_new_term_b1_i[float64 * 1]
  allocate buf_flip_B2_Bthird_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bthird_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bthird_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bthird_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bsecond_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bsecond_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bsecond_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bsecond_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bfirst_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bfirst_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bfirst_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B2_Bfirst_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bthird_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bthird_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bthird_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bthird_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bsecond_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bsecond_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bsecond_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bsecond_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bfirst_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bfirst_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bfirst_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_flip_B1_Bfirst_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_H_BB_new_term_b2_r[float64 * 1]
  allocate buf_H_BB_new_term_b2_i[float64 * 1]
  allocate buf_H_BB_new_term_b1_r[float64 * 1]
  allocate buf_H_BB_new_term_b1_i[float64 * 1]
  allocate buf_C_H_H_prop_r[float64 * 1]
  allocate buf_C_H_H_prop_i[float64 * 1]
  allocate buf_C_H_BB_prop_r[float64 * 1]
  allocate buf_C_H_BB_prop_i[float64 * 1]
  allocate buf_C_BB_H_prop_r[float64 * 1]
  allocate buf_C_BB_H_prop_i[float64 * 1]
  allocate buf_C_BB_BB_prop_r[float64 * 1]
  allocate buf_C_BB_BB_prop_i[float64 * 1]
  allocate buf_BB_H_new_term_b2_r[float64 * 1]
  allocate buf_BB_H_new_term_b2_i[float64 * 1]
  allocate buf_BB_H_new_term_b1_r[float64 * 1]
  allocate buf_BB_H_new_term_b1_i[float64 * 1]
  allocate buf_BB_BB_new_term_b2_r[float64 * 1]
  allocate buf_BB_BB_new_term_b2_i[float64 * 1]
  allocate buf_BB_BB_new_term_b1_r[float64 * 1]
  allocate buf_BB_BB_new_term_b1_i[float64 * 1]
  allocate buf_B2_Bthird_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bthird_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bthird_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bthird_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bthird_props_r2_r[float64 * 2 * 3]
  allocate buf_B2_Bthird_props_r2_i[float64 * 2 * 3]
  allocate buf_B2_Bthird_props_r1_r[float64 * 2 * 3]
  allocate buf_B2_Bthird_props_r1_i[float64 * 2 * 3]
  allocate buf_B2_Bthird_diquark_r2_r[float64 * 1]
  allocate buf_B2_Bthird_diquark_r2_i[float64 * 1]
  allocate buf_B2_Bthird_diquark_r1_r[float64 * 1]
  allocate buf_B2_Bthird_diquark_r1_i[float64 * 1]
  allocate buf_B2_Bsecond_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bsecond_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bsecond_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bsecond_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bsecond_props_r2_r[float64 * 2 * 3]
  allocate buf_B2_Bsecond_props_r2_i[float64 * 2 * 3]
  allocate buf_B2_Bsecond_props_r1_r[float64 * 2 * 3]
  allocate buf_B2_Bsecond_props_r1_i[float64 * 2 * 3]
  allocate buf_B2_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Blocal_props_r2_r[float64 * 2 * 3]
  allocate buf_B2_Blocal_props_r2_i[float64 * 2 * 3]
  allocate buf_B2_Blocal_props_r1_r[float64 * 2 * 3]
  allocate buf_B2_Blocal_props_r1_i[float64 * 2 * 3]
  allocate buf_B2_Blocal_diquark_r2_r[float64 * 1]
  allocate buf_B2_Blocal_diquark_r2_i[float64 * 1]
  allocate buf_B2_Blocal_diquark_r1_r[float64 * 1]
  allocate buf_B2_Blocal_diquark_r1_i[float64 * 1]
  allocate buf_B2_Bfirst_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bfirst_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bfirst_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bfirst_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B2_Bfirst_props_r2_r[float64 * 2 * 3]
  allocate buf_B2_Bfirst_props_r2_i[float64 * 2 * 3]
  allocate buf_B2_Bfirst_props_r1_r[float64 * 2 * 3]
  allocate buf_B2_Bfirst_props_r1_i[float64 * 2 * 3]
  allocate buf_B2_Bfirst_diquark_r2_r[float64 * 1]
  allocate buf_B2_Bfirst_diquark_r2_i[float64 * 1]
  allocate buf_B2_Bfirst_diquark_r1_r[float64 * 1]
  allocate buf_B2_Bfirst_diquark_r1_i[float64 * 1]
  allocate buf_B1_Bthird_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bthird_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bthird_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bthird_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bthird_props_r2_r[float64 * 2 * 3]
  allocate buf_B1_Bthird_props_r2_i[float64 * 2 * 3]
  allocate buf_B1_Bthird_props_r1_r[float64 * 2 * 3]
  allocate buf_B1_Bthird_props_r1_i[float64 * 2 * 3]
  allocate buf_B1_Bthird_diquark_r2_r[float64 * 1]
  allocate buf_B1_Bthird_diquark_r2_i[float64 * 1]
  allocate buf_B1_Bthird_diquark_r1_r[float64 * 1]
  allocate buf_B1_Bthird_diquark_r1_i[float64 * 1]
  allocate buf_B1_Bsecond_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bsecond_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bsecond_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bsecond_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bsecond_props_r2_r[float64 * 2 * 3]
  allocate buf_B1_Bsecond_props_r2_i[float64 * 2 * 3]
  allocate buf_B1_Bsecond_props_r1_r[float64 * 2 * 3]
  allocate buf_B1_Bsecond_props_r1_i[float64 * 2 * 3]
  allocate buf_B1_Blocal_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Blocal_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Blocal_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Blocal_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Blocal_props_r2_r[float64 * 2 * 3]
  allocate buf_B1_Blocal_props_r2_i[float64 * 2 * 3]
  allocate buf_B1_Blocal_props_r1_r[float64 * 2 * 3]
  allocate buf_B1_Blocal_props_r1_i[float64 * 2 * 3]
  allocate buf_B1_Blocal_diquark_r2_r[float64 * 1]
  allocate buf_B1_Blocal_diquark_r2_i[float64 * 1]
  allocate buf_B1_Blocal_diquark_r1_r[float64 * 1]
  allocate buf_B1_Blocal_diquark_r1_i[float64 * 1]
  allocate buf_B1_Bfirst_r2_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bfirst_r2_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bfirst_r1_r[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bfirst_r1_i[float64 * 44 * 2 * 3 * 2 * 3 * 2 * 3]
  allocate buf_B1_Bfirst_props_r2_r[float64 * 2 * 3]
  allocate buf_B1_Bfirst_props_r2_i[float64 * 2 * 3]
  allocate buf_B1_Bfirst_props_r1_r[float64 * 2 * 3]
  allocate buf_B1_Bfirst_props_r1_i[float64 * 2 * 3]
  allocate buf_B1_Bfirst_diquark_r2_r[float64 * 1]
  allocate buf_B1_Bfirst_diquark_r2_i[float64 * 1]
  allocate buf_B1_Bfirst_diquark_r1_r[float64 * 1]
  allocate buf_B1_Bfirst_diquark_r1_i[float64 * 1]
  for (c3, 0, 2) {
    for (c5, 0, 4) {
      for (c7, 0, 45) {
        for (c9, 0, 4) {
          for (c11, 0, 45) {
            buf_C_r[((((c11 + int32((int64(c9)*(int64)45))) + int32((int64(c7)*(int64)180))) + int32((int64(c5)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] = 0.000000
            buf_C_i[((((c11 + int32((int64(c9)*(int64)45))) + int32((int64(c7)*(int64)180))) + int32((int64(c5)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] = 0.000000
          }
        }
      }
    }
  }
  parallel (c3, 0, 2) {
    for (c5, 0, 2) {
      for (c7, 0, 4) {
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bfirst_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bfirst_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bsecond_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bsecond_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bthird_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bthird_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bfirst_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bfirst_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bsecond_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bsecond_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bthird_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bthird_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 4) {
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      buf_B1_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bfirst_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bfirst_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bsecond_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bsecond_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bthird_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bthird_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                    }
                  }
                  for (c19, 0, 12) {
                    let t444 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t443 = _src_color_weights_b24[((c19*3) + 2)]
                    let t442 = _src_spin_weights_b25[(c19*3)]
                    let t441 = _src_color_weights_b24[(c19*3)]
                    let t440 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t439 = _src_color_weights_b24[((c19*3) + 2)]
                    let t438 = _src_spin_weights_b25[(c19*3)]
                    let t437 = _src_color_weights_b24[(c19*3)]
                    buf_B1_Blocal_diquark_r1_r[0] = (let t96 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t96 + (t438*16)) + (t437*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t96 + (t440*16)) + (t439*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B1_prop_i_b3[((((t96 + (t442*16)) + (t441*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t96 + (t444*16)) + (t443*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19]))
                    let t463 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t462 = _src_color_weights_b24[((c19*3) + 2)]
                    let t461 = _src_spin_weights_b25[(c19*3)]
                    let t460 = _src_color_weights_b24[(c19*3)]
                    let t459 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t458 = _src_color_weights_b24[((c19*3) + 2)]
                    let t457 = _src_spin_weights_b25[(c19*3)]
                    let t456 = _src_color_weights_b24[(c19*3)]
                    buf_B1_Blocal_diquark_r1_i[0] = (let t97 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t97 + (t457*16)) + (t456*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t97 + (t459*16)) + (t458*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B1_prop_i_b3[((((t97 + (t461*16)) + (t460*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t97 + (t463*16)) + (t462*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19]))
                    let t482 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t481 = _src_color_weights_b24[((c19*3) + 2)]
                    let t480 = _src_spin_weights_b25[(c19*3)]
                    let t479 = _src_color_weights_b24[(c19*3)]
                    let t478 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t477 = _src_color_weights_b24[((c19*3) + 2)]
                    let t476 = _src_spin_weights_b25[(c19*3)]
                    let t475 = _src_color_weights_b24[(c19*3)]
                    buf_B1_Bfirst_diquark_r1_r[0] = (let t98 = (c17 + (c7*4)) in (let t99 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t98 + (t476*16)) + (t475*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t99 + (t478*16)) + (t477*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B1_prop_i_b3[((((t98 + (t480*16)) + (t479*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t99 + (t482*16)) + (t481*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    let t501 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t500 = _src_color_weights_b24[((c19*3) + 2)]
                    let t499 = _src_spin_weights_b25[(c19*3)]
                    let t498 = _src_color_weights_b24[(c19*3)]
                    let t497 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t496 = _src_color_weights_b24[((c19*3) + 2)]
                    let t495 = _src_spin_weights_b25[(c19*3)]
                    let t494 = _src_color_weights_b24[(c19*3)]
                    buf_B1_Bfirst_diquark_r1_i[0] = (let t100 = (c17 + (c7*4)) in (let t101 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t100 + (t495*16)) + (t494*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t101 + (t497*16)) + (t496*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B1_prop_i_b3[((((t100 + (t499*16)) + (t498*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t101 + (t501*16)) + (t500*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    let t520 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t519 = _src_color_weights_b24[((c19*3) + 2)]
                    let t518 = _src_spin_weights_b25[(c19*3)]
                    let t517 = _src_color_weights_b24[(c19*3)]
                    let t516 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t515 = _src_color_weights_b24[((c19*3) + 2)]
                    let t514 = _src_spin_weights_b25[(c19*3)]
                    let t513 = _src_color_weights_b24[(c19*3)]
                    buf_B1_Bthird_diquark_r1_r[0] = (let t102 = (c17 + (((c3*2) + c5)*4)) in (let t103 = (c17 + (c7*4)) in (((_B1_prop_r_b2[((((t102 + (t514*16)) + (t513*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t103 + (t516*16)) + (t515*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B1_prop_i_b3[((((t102 + (t518*16)) + (t517*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t103 + (t520*16)) + (t519*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    let t539 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t538 = _src_color_weights_b24[((c19*3) + 2)]
                    let t537 = _src_spin_weights_b25[(c19*3)]
                    let t536 = _src_color_weights_b24[(c19*3)]
                    let t535 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t534 = _src_color_weights_b24[((c19*3) + 2)]
                    let t533 = _src_spin_weights_b25[(c19*3)]
                    let t532 = _src_color_weights_b24[(c19*3)]
                    buf_B1_Bthird_diquark_r1_i[0] = (let t104 = (c17 + (((c3*2) + c5)*4)) in (let t105 = (c17 + (c7*4)) in (((_B1_prop_r_b2[((((t104 + (t533*16)) + (t532*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t105 + (t535*16)) + (t534*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B1_prop_i_b3[((((t104 + (t537*16)) + (t536*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t105 + (t539*16)) + (t538*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    for (c21, 0, 3) {
                      for (c23, 0, 2) {
                        let t554 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t553 = _src_color_weights_b24[((c19*3) + 1)]
                        let t552 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t551 = _src_color_weights_b24[((c19*3) + 1)]
                        buf_B1_Blocal_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t106 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Blocal_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t106 + (t552*16)) + (t551*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_r[0]) - (_B1_prop_i_b3[(((((t106 + (t554*16)) + (t553*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_i[0]))))
                        let t23 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t22 = _src_color_weights_b24[((c19*3) + 1)]
                        let t21 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t20 = _src_color_weights_b24[((c19*3) + 1)]
                        buf_B1_Blocal_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t107 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Blocal_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t107 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_i[0]) + (_B1_prop_i_b3[(((((t107 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_r[0]))))
                        buf_B1_Bfirst_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t108 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bfirst_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t108 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r1_r[0]) - (_B1_prop_i_b3[(((((t108 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r1_i[0]))))
                        buf_B1_Bfirst_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t109 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bfirst_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t109 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r1_i[0]) + (_B1_prop_i_b3[(((((t109 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r1_r[0]))))
                        buf_B1_Bsecond_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t110 = (c17 + (c7*4)) in (buf_B1_Bsecond_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t110 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_r[0]) - (_B1_prop_i_b3[(((((t110 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_i[0]))))
                        buf_B1_Bsecond_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t111 = (c17 + (c7*4)) in (buf_B1_Bsecond_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t111 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_i[0]) + (_B1_prop_i_b3[(((((t111 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r1_r[0]))))
                        buf_B1_Bthird_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t112 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bthird_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t112 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r1_r[0]) - (_B1_prop_i_b3[(((((t112 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r1_i[0]))))
                        buf_B1_Bthird_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t113 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bthird_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t113 + (t21*16)) + (t20*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r1_i[0]) + (_B1_prop_i_b3[(((((t113 + (t23*16)) + (t22*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r1_r[0]))))
                      }
                    }
                  }
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      for (c23, 0, 44) {
                        buf_B1_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t114 = (c23 + (c17*44)) in (let t115 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t114]*buf_B1_Blocal_props_r1_r[t115]) - (_src_psi_B1_i_b7[t114]*buf_B1_Blocal_props_r1_i[t115])))))
                        buf_B1_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t116 = (c23 + (c17*44)) in (let t117 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t116]*buf_B1_Blocal_props_r1_i[t117]) + (_src_psi_B1_i_b7[t116]*buf_B1_Blocal_props_r1_r[t117])))))
                        buf_B1_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t118 = (c23 + (c17*44)) in (let t119 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t118]*buf_B1_Bfirst_props_r1_r[t119]) - (_src_psi_B1_i_b7[t118]*buf_B1_Bfirst_props_r1_i[t119])))))
                        buf_B1_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t120 = (c23 + (c17*44)) in (let t121 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t120]*buf_B1_Bfirst_props_r1_i[t121]) + (_src_psi_B1_i_b7[t120]*buf_B1_Bfirst_props_r1_r[t121])))))
                        buf_B1_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t122 = (c23 + (c17*44)) in (let t123 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t122]*buf_B1_Bsecond_props_r1_r[t123]) - (_src_psi_B1_i_b7[t122]*buf_B1_Bsecond_props_r1_i[t123])))))
                        buf_B1_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t124 = (c23 + (c17*44)) in (let t125 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t124]*buf_B1_Bsecond_props_r1_i[t125]) + (_src_psi_B1_i_b7[t124]*buf_B1_Bsecond_props_r1_r[t125])))))
                        buf_B1_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t126 = (c23 + (c17*44)) in (let t127 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t126]*buf_B1_Bthird_props_r1_r[t127]) - (_src_psi_B1_i_b7[t126]*buf_B1_Bthird_props_r1_i[t127])))))
                        buf_B1_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t128 = (c23 + (c17*44)) in (let t129 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t128]*buf_B1_Bthird_props_r1_i[t129]) + (_src_psi_B1_i_b7[t128]*buf_B1_Bthird_props_r1_r[t129])))))
                        buf_flip_B1_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t130 = (c23 + (c17*44)) in (let t131 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t130]*buf_B1_Blocal_props_r1_r[t131]) - (_src_psi_B2_i_b9[t130]*buf_B1_Blocal_props_r1_i[t131])))))
                        buf_flip_B1_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t132 = (c23 + (c17*44)) in (let t133 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t132]*buf_B1_Blocal_props_r1_i[t133]) + (_src_psi_B2_i_b9[t132]*buf_B1_Blocal_props_r1_r[t133])))))
                        buf_flip_B1_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t134 = (c23 + (c17*44)) in (let t135 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t134]*buf_B1_Bfirst_props_r1_r[t135]) - (_src_psi_B2_i_b9[t134]*buf_B1_Bfirst_props_r1_i[t135])))))
                        buf_flip_B1_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t136 = (c23 + (c17*44)) in (let t137 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t136]*buf_B1_Bfirst_props_r1_i[t137]) + (_src_psi_B2_i_b9[t136]*buf_B1_Bfirst_props_r1_r[t137])))))
                        buf_flip_B1_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t138 = (c23 + (c17*44)) in (let t139 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t138]*buf_B1_Bsecond_props_r1_r[t139]) - (_src_psi_B2_i_b9[t138]*buf_B1_Bsecond_props_r1_i[t139])))))
                        buf_flip_B1_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t140 = (c23 + (c17*44)) in (let t141 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t140]*buf_B1_Bsecond_props_r1_i[t141]) + (_src_psi_B2_i_b9[t140]*buf_B1_Bsecond_props_r1_r[t141])))))
                        buf_flip_B1_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t142 = (c23 + (c17*44)) in (let t143 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t142]*buf_B1_Bthird_props_r1_r[t143]) - (_src_psi_B2_i_b9[t142]*buf_B1_Bthird_props_r1_i[t143])))))
                        buf_flip_B1_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t144 = (c23 + (c17*44)) in (let t145 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t144]*buf_B1_Bthird_props_r1_i[t145]) + (_src_psi_B2_i_b9[t144]*buf_B1_Bthird_props_r1_r[t145])))))
                      }
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bfirst_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bfirst_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bsecond_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bsecond_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bthird_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B1_Bthird_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bfirst_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bfirst_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bsecond_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bsecond_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bthird_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B1_Bthird_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 4) {
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      buf_B1_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bfirst_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bfirst_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bsecond_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bsecond_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bthird_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B1_Bthird_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                    }
                  }
                  for (c19, 0, 12) {
                    let t1190 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1189 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1188 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1187 = _src_color_weights_b24[((c19*3) + 36)]
                    let t1186 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1185 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1184 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1183 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B1_Blocal_diquark_r2_r[0] = (let t146 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t146 + (t1184*16)) + (t1183*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t146 + (t1186*16)) + (t1185*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B1_prop_i_b3[((((t146 + (t1188*16)) + (t1187*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t146 + (t1190*16)) + (t1189*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)]))
                    let t1209 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1208 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1207 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1206 = _src_color_weights_b24[((c19*3) + 36)]
                    let t1205 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1204 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1203 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1202 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B1_Blocal_diquark_r2_i[0] = (let t147 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t147 + (t1203*16)) + (t1202*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t147 + (t1205*16)) + (t1204*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B1_prop_i_b3[((((t147 + (t1207*16)) + (t1206*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t147 + (t1209*16)) + (t1208*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)]))
                    let t1228 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1227 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1226 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1225 = _src_color_weights_b24[((c19*3) + 36)]
                    let t1224 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1223 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1222 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1221 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B1_Bfirst_diquark_r2_r[0] = (let t148 = (c17 + (c7*4)) in (let t149 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t148 + (t1222*16)) + (t1221*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t149 + (t1224*16)) + (t1223*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B1_prop_i_b3[((((t148 + (t1226*16)) + (t1225*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t149 + (t1228*16)) + (t1227*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    let t1247 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1246 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1245 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1244 = _src_color_weights_b24[((c19*3) + 36)]
                    let t1243 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1242 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1241 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1240 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B1_Bfirst_diquark_r2_i[0] = (let t150 = (c17 + (c7*4)) in (let t151 = (c17 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t150 + (t1241*16)) + (t1240*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t151 + (t1243*16)) + (t1242*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B1_prop_i_b3[((((t150 + (t1245*16)) + (t1244*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t151 + (t1247*16)) + (t1246*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    let t1266 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1265 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1264 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1263 = _src_color_weights_b24[((c19*3) + 36)]
                    let t1262 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1261 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1260 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1259 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B1_Bthird_diquark_r2_r[0] = (let t152 = (c17 + (((c3*2) + c5)*4)) in (let t153 = (c17 + (c7*4)) in (((_B1_prop_r_b2[((((t152 + (t1260*16)) + (t1259*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t153 + (t1262*16)) + (t1261*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B1_prop_i_b3[((((t152 + (t1264*16)) + (t1263*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t153 + (t1266*16)) + (t1265*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    let t1285 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1284 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1283 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1282 = _src_color_weights_b24[((c19*3) + 36)]
                    let t1281 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t1280 = _src_color_weights_b24[((c19*3) + 38)]
                    let t1279 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t1278 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B1_Bthird_diquark_r2_i[0] = (let t154 = (c17 + (((c3*2) + c5)*4)) in (let t155 = (c17 + (c7*4)) in (((_B1_prop_r_b2[((((t154 + (t1279*16)) + (t1278*32)) + (c11*96)) + (c9*192))]*_B1_prop_i_b3[(((((t155 + (t1281*16)) + (t1280*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B1_prop_i_b3[((((t154 + (t1283*16)) + (t1282*32)) + (c11*96)) + (c9*192))]*_B1_prop_r_b2[(((((t155 + (t1285*16)) + (t1284*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    for (c21, 0, 3) {
                      for (c23, 0, 2) {
                        let t1300 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t1299 = _src_color_weights_b24[((c19*3) + 37)]
                        let t1298 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t1297 = _src_color_weights_b24[((c19*3) + 37)]
                        buf_B1_Blocal_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t156 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Blocal_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t156 + (t1298*16)) + (t1297*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_r[0]) - (_B1_prop_i_b3[(((((t156 + (t1300*16)) + (t1299*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_i[0]))))
                        let t47 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t46 = _src_color_weights_b24[((c19*3) + 37)]
                        let t45 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t44 = _src_color_weights_b24[((c19*3) + 37)]
                        buf_B1_Blocal_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t157 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Blocal_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t157 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_i[0]) + (_B1_prop_i_b3[(((((t157 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_r[0]))))
                        buf_B1_Bfirst_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t158 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bfirst_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t158 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r2_r[0]) - (_B1_prop_i_b3[(((((t158 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r2_i[0]))))
                        buf_B1_Bfirst_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t159 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bfirst_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t159 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r2_i[0]) + (_B1_prop_i_b3[(((((t159 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bfirst_diquark_r2_r[0]))))
                        buf_B1_Bsecond_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t160 = (c17 + (c7*4)) in (buf_B1_Bsecond_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t160 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_r[0]) - (_B1_prop_i_b3[(((((t160 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_i[0]))))
                        buf_B1_Bsecond_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t161 = (c17 + (c7*4)) in (buf_B1_Bsecond_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t161 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_i[0]) + (_B1_prop_i_b3[(((((t161 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Blocal_diquark_r2_r[0]))))
                        buf_B1_Bthird_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t162 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bthird_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t162 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r2_r[0]) - (_B1_prop_i_b3[(((((t162 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r2_i[0]))))
                        buf_B1_Bthird_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t163 = (c17 + (((c3*2) + c5)*4)) in (buf_B1_Bthird_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B1_prop_r_b2[(((((t163 + (t45*16)) + (t44*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r2_i[0]) + (_B1_prop_i_b3[(((((t163 + (t47*16)) + (t46*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B1_Bthird_diquark_r2_r[0]))))
                      }
                    }
                  }
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      for (c23, 0, 44) {
                        buf_B1_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t164 = (c23 + (c17*44)) in (let t165 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t164]*buf_B1_Blocal_props_r2_r[t165]) - (_src_psi_B1_i_b7[t164]*buf_B1_Blocal_props_r2_i[t165])))))
                        buf_B1_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t166 = (c23 + (c17*44)) in (let t167 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t166]*buf_B1_Blocal_props_r2_i[t167]) + (_src_psi_B1_i_b7[t166]*buf_B1_Blocal_props_r2_r[t167])))))
                        buf_B1_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t168 = (c23 + (c17*44)) in (let t169 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t168]*buf_B1_Bfirst_props_r2_r[t169]) - (_src_psi_B1_i_b7[t168]*buf_B1_Bfirst_props_r2_i[t169])))))
                        buf_B1_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t170 = (c23 + (c17*44)) in (let t171 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t170]*buf_B1_Bfirst_props_r2_i[t171]) + (_src_psi_B1_i_b7[t170]*buf_B1_Bfirst_props_r2_r[t171])))))
                        buf_B1_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t172 = (c23 + (c17*44)) in (let t173 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t172]*buf_B1_Bsecond_props_r2_r[t173]) - (_src_psi_B1_i_b7[t172]*buf_B1_Bsecond_props_r2_i[t173])))))
                        buf_B1_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t174 = (c23 + (c17*44)) in (let t175 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t174]*buf_B1_Bsecond_props_r2_i[t175]) + (_src_psi_B1_i_b7[t174]*buf_B1_Bsecond_props_r2_r[t175])))))
                        buf_B1_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t176 = (c23 + (c17*44)) in (let t177 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t176]*buf_B1_Bthird_props_r2_r[t177]) - (_src_psi_B1_i_b7[t176]*buf_B1_Bthird_props_r2_i[t177])))))
                        buf_B1_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t178 = (c23 + (c17*44)) in (let t179 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B1_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t178]*buf_B1_Bthird_props_r2_i[t179]) + (_src_psi_B1_i_b7[t178]*buf_B1_Bthird_props_r2_r[t179])))))
                        buf_flip_B1_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t180 = (c23 + (c17*44)) in (let t181 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t180]*buf_B1_Blocal_props_r2_r[t181]) - (_src_psi_B2_i_b9[t180]*buf_B1_Blocal_props_r2_i[t181])))))
                        buf_flip_B1_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t182 = (c23 + (c17*44)) in (let t183 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t182]*buf_B1_Blocal_props_r2_i[t183]) + (_src_psi_B2_i_b9[t182]*buf_B1_Blocal_props_r2_r[t183])))))
                        buf_flip_B1_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t184 = (c23 + (c17*44)) in (let t185 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t184]*buf_B1_Bfirst_props_r2_r[t185]) - (_src_psi_B2_i_b9[t184]*buf_B1_Bfirst_props_r2_i[t185])))))
                        buf_flip_B1_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t186 = (c23 + (c17*44)) in (let t187 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t186]*buf_B1_Bfirst_props_r2_i[t187]) + (_src_psi_B2_i_b9[t186]*buf_B1_Bfirst_props_r2_r[t187])))))
                        buf_flip_B1_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t188 = (c23 + (c17*44)) in (let t189 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t188]*buf_B1_Bsecond_props_r2_r[t189]) - (_src_psi_B2_i_b9[t188]*buf_B1_Bsecond_props_r2_i[t189])))))
                        buf_flip_B1_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t190 = (c23 + (c17*44)) in (let t191 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t190]*buf_B1_Bsecond_props_r2_i[t191]) + (_src_psi_B2_i_b9[t190]*buf_B1_Bsecond_props_r2_r[t191])))))
                        buf_flip_B1_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t192 = (c23 + (c17*44)) in (let t193 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t192]*buf_B1_Bthird_props_r2_r[t193]) - (_src_psi_B2_i_b9[t192]*buf_B1_Bthird_props_r2_i[t193])))))
                        buf_flip_B1_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t194 = (c23 + (c17*44)) in (let t195 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B1_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t194]*buf_B1_Bthird_props_r2_i[t195]) + (_src_psi_B2_i_b9[t194]*buf_B1_Bthird_props_r2_r[t195])))))
                      }
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bfirst_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bfirst_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bsecond_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bsecond_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bthird_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bthird_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bfirst_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bfirst_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bsecond_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bsecond_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bthird_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bthird_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 4) {
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      buf_B2_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bfirst_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bfirst_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bsecond_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bsecond_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bthird_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bthird_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                    }
                  }
                  for (c19, 0, 12) {
                    let t1936 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1935 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1934 = _src_spin_weights_b25[(c19*3)]
                    let t1933 = _src_color_weights_b24[(c19*3)]
                    let t1932 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1931 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1930 = _src_spin_weights_b25[(c19*3)]
                    let t1929 = _src_color_weights_b24[(c19*3)]
                    buf_B2_Blocal_diquark_r1_r[0] = (let t196 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t196 + (t1930*16)) + (t1929*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t196 + (t1932*16)) + (t1931*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B2_prop_i_b5[((((t196 + (t1934*16)) + (t1933*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t196 + (t1936*16)) + (t1935*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19]))
                    let t1955 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1954 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1953 = _src_spin_weights_b25[(c19*3)]
                    let t1952 = _src_color_weights_b24[(c19*3)]
                    let t1951 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1950 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1949 = _src_spin_weights_b25[(c19*3)]
                    let t1948 = _src_color_weights_b24[(c19*3)]
                    buf_B2_Blocal_diquark_r1_i[0] = (let t197 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t197 + (t1949*16)) + (t1948*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t197 + (t1951*16)) + (t1950*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B2_prop_i_b5[((((t197 + (t1953*16)) + (t1952*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t197 + (t1955*16)) + (t1954*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19]))
                    let t1974 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1973 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1972 = _src_spin_weights_b25[(c19*3)]
                    let t1971 = _src_color_weights_b24[(c19*3)]
                    let t1970 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1969 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1968 = _src_spin_weights_b25[(c19*3)]
                    let t1967 = _src_color_weights_b24[(c19*3)]
                    buf_B2_Bfirst_diquark_r1_r[0] = (let t198 = (c17 + (((c3*2) + c5)*4)) in (let t199 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t198 + (t1968*16)) + (t1967*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t199 + (t1970*16)) + (t1969*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B2_prop_i_b5[((((t198 + (t1972*16)) + (t1971*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t199 + (t1974*16)) + (t1973*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    let t1993 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1992 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1991 = _src_spin_weights_b25[(c19*3)]
                    let t1990 = _src_color_weights_b24[(c19*3)]
                    let t1989 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t1988 = _src_color_weights_b24[((c19*3) + 2)]
                    let t1987 = _src_spin_weights_b25[(c19*3)]
                    let t1986 = _src_color_weights_b24[(c19*3)]
                    buf_B2_Bfirst_diquark_r1_i[0] = (let t200 = (c17 + (((c3*2) + c5)*4)) in (let t201 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t200 + (t1987*16)) + (t1986*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t201 + (t1989*16)) + (t1988*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B2_prop_i_b5[((((t200 + (t1991*16)) + (t1990*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t201 + (t1993*16)) + (t1992*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    let t2012 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t2011 = _src_color_weights_b24[((c19*3) + 2)]
                    let t2010 = _src_spin_weights_b25[(c19*3)]
                    let t2009 = _src_color_weights_b24[(c19*3)]
                    let t2008 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t2007 = _src_color_weights_b24[((c19*3) + 2)]
                    let t2006 = _src_spin_weights_b25[(c19*3)]
                    let t2005 = _src_color_weights_b24[(c19*3)]
                    buf_B2_Bthird_diquark_r1_r[0] = (let t202 = (c17 + (c7*4)) in (let t203 = (c17 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t202 + (t2006*16)) + (t2005*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t203 + (t2008*16)) + (t2007*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B2_prop_i_b5[((((t202 + (t2010*16)) + (t2009*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t203 + (t2012*16)) + (t2011*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    let t2031 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t2030 = _src_color_weights_b24[((c19*3) + 2)]
                    let t2029 = _src_spin_weights_b25[(c19*3)]
                    let t2028 = _src_color_weights_b24[(c19*3)]
                    let t2027 = _src_spin_weights_b25[((c19*3) + 2)]
                    let t2026 = _src_color_weights_b24[((c19*3) + 2)]
                    let t2025 = _src_spin_weights_b25[(c19*3)]
                    let t2024 = _src_color_weights_b24[(c19*3)]
                    buf_B2_Bthird_diquark_r1_i[0] = (let t204 = (c17 + (c7*4)) in (let t205 = (c17 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t204 + (t2025*16)) + (t2024*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t205 + (t2027*16)) + (t2026*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B2_prop_i_b5[((((t204 + (t2029*16)) + (t2028*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t205 + (t2031*16)) + (t2030*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[c19])))
                    for (c21, 0, 3) {
                      for (c23, 0, 2) {
                        let t2046 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t2045 = _src_color_weights_b24[((c19*3) + 1)]
                        let t2044 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t2043 = _src_color_weights_b24[((c19*3) + 1)]
                        buf_B2_Blocal_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t206 = (c17 + (c7*4)) in (buf_B2_Blocal_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t206 + (t2044*16)) + (t2043*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_r[0]) - (_B2_prop_i_b5[(((((t206 + (t2046*16)) + (t2045*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_i[0]))))
                        let t71 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t70 = _src_color_weights_b24[((c19*3) + 1)]
                        let t69 = _src_spin_weights_b25[((c19*3) + 1)]
                        let t68 = _src_color_weights_b24[((c19*3) + 1)]
                        buf_B2_Blocal_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t207 = (c17 + (c7*4)) in (buf_B2_Blocal_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t207 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_i[0]) + (_B2_prop_i_b5[(((((t207 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_r[0]))))
                        buf_B2_Bfirst_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t208 = (c17 + (c7*4)) in (buf_B2_Bfirst_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t208 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r1_r[0]) - (_B2_prop_i_b5[(((((t208 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r1_i[0]))))
                        buf_B2_Bfirst_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t209 = (c17 + (c7*4)) in (buf_B2_Bfirst_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t209 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r1_i[0]) + (_B2_prop_i_b5[(((((t209 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r1_r[0]))))
                        buf_B2_Bsecond_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t210 = (c17 + (((c3*2) + c5)*4)) in (buf_B2_Bsecond_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t210 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_r[0]) - (_B2_prop_i_b5[(((((t210 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_i[0]))))
                        buf_B2_Bsecond_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t211 = (c17 + (((c3*2) + c5)*4)) in (buf_B2_Bsecond_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t211 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_i[0]) + (_B2_prop_i_b5[(((((t211 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r1_r[0]))))
                        buf_B2_Bthird_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t212 = (c17 + (c7*4)) in (buf_B2_Bthird_props_r1_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t212 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r1_r[0]) - (_B2_prop_i_b5[(((((t212 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r1_i[0]))))
                        buf_B2_Bthird_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t213 = (c17 + (c7*4)) in (buf_B2_Bthird_props_r1_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t213 + (t69*16)) + (t68*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r1_i[0]) + (_B2_prop_i_b5[(((((t213 + (t71*16)) + (t70*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r1_r[0]))))
                      }
                    }
                  }
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      for (c23, 0, 44) {
                        buf_B2_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t214 = (c23 + (c17*44)) in (let t215 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t214]*buf_B2_Blocal_props_r1_r[t215]) - (_src_psi_B2_i_b9[t214]*buf_B2_Blocal_props_r1_i[t215])))))
                        buf_B2_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t216 = (c23 + (c17*44)) in (let t217 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t216]*buf_B2_Blocal_props_r1_i[t217]) + (_src_psi_B2_i_b9[t216]*buf_B2_Blocal_props_r1_r[t217])))))
                        buf_B2_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t218 = (c23 + (c17*44)) in (let t219 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t218]*buf_B2_Bfirst_props_r1_r[t219]) - (_src_psi_B2_i_b9[t218]*buf_B2_Bfirst_props_r1_i[t219])))))
                        buf_B2_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t220 = (c23 + (c17*44)) in (let t221 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t220]*buf_B2_Bfirst_props_r1_i[t221]) + (_src_psi_B2_i_b9[t220]*buf_B2_Bfirst_props_r1_r[t221])))))
                        buf_B2_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t222 = (c23 + (c17*44)) in (let t223 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t222]*buf_B2_Bsecond_props_r1_r[t223]) - (_src_psi_B2_i_b9[t222]*buf_B2_Bsecond_props_r1_i[t223])))))
                        buf_B2_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t224 = (c23 + (c17*44)) in (let t225 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t224]*buf_B2_Bsecond_props_r1_i[t225]) + (_src_psi_B2_i_b9[t224]*buf_B2_Bsecond_props_r1_r[t225])))))
                        buf_B2_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t226 = (c23 + (c17*44)) in (let t227 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t226]*buf_B2_Bthird_props_r1_r[t227]) - (_src_psi_B2_i_b9[t226]*buf_B2_Bthird_props_r1_i[t227])))))
                        buf_B2_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t228 = (c23 + (c17*44)) in (let t229 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t228]*buf_B2_Bthird_props_r1_i[t229]) + (_src_psi_B2_i_b9[t228]*buf_B2_Bthird_props_r1_r[t229])))))
                        buf_flip_B2_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t230 = (c23 + (c17*44)) in (let t231 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Blocal_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t230]*buf_B2_Blocal_props_r1_r[t231]) - (_src_psi_B1_i_b7[t230]*buf_B2_Blocal_props_r1_i[t231])))))
                        buf_flip_B2_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t232 = (c23 + (c17*44)) in (let t233 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Blocal_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t232]*buf_B2_Blocal_props_r1_i[t233]) + (_src_psi_B1_i_b7[t232]*buf_B2_Blocal_props_r1_r[t233])))))
                        buf_flip_B2_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t234 = (c23 + (c17*44)) in (let t235 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bfirst_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t234]*buf_B2_Bfirst_props_r1_r[t235]) - (_src_psi_B1_i_b7[t234]*buf_B2_Bfirst_props_r1_i[t235])))))
                        buf_flip_B2_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t236 = (c23 + (c17*44)) in (let t237 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bfirst_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t236]*buf_B2_Bfirst_props_r1_i[t237]) + (_src_psi_B1_i_b7[t236]*buf_B2_Bfirst_props_r1_r[t237])))))
                        buf_flip_B2_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t238 = (c23 + (c17*44)) in (let t239 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bsecond_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t238]*buf_B2_Bsecond_props_r1_r[t239]) - (_src_psi_B1_i_b7[t238]*buf_B2_Bsecond_props_r1_i[t239])))))
                        buf_flip_B2_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t240 = (c23 + (c17*44)) in (let t241 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bsecond_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t240]*buf_B2_Bsecond_props_r1_i[t241]) + (_src_psi_B1_i_b7[t240]*buf_B2_Bsecond_props_r1_r[t241])))))
                        buf_flip_B2_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t242 = (c23 + (c17*44)) in (let t243 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bthird_r1_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t242]*buf_B2_Bthird_props_r1_r[t243]) - (_src_psi_B1_i_b7[t242]*buf_B2_Bthird_props_r1_i[t243])))))
                        buf_flip_B2_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t244 = (c23 + (c17*44)) in (let t245 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bthird_r1_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t244]*buf_B2_Bthird_props_r1_i[t245]) + (_src_psi_B1_i_b7[t244]*buf_B2_Bthird_props_r1_r[t245])))))
                      }
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bfirst_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bfirst_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bsecond_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bsecond_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bthird_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_B2_Bthird_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bfirst_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bfirst_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bsecond_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bsecond_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bthird_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                      buf_flip_B2_Bthird_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = 0.000000
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 3) {
          for (c11, 0, 2) {
            for (c13, 0, 3) {
              for (c15, 0, 2) {
                for (c17, 0, 4) {
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      buf_B2_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bfirst_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bfirst_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bsecond_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bsecond_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bthird_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                      buf_B2_Bthird_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = 0.000000
                    }
                  }
                  for (c19, 0, 12) {
                    let t2682 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2681 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2680 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2679 = _src_color_weights_b24[((c19*3) + 36)]
                    let t2678 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2677 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2676 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2675 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B2_Blocal_diquark_r2_r[0] = (let t246 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t246 + (t2676*16)) + (t2675*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t246 + (t2678*16)) + (t2677*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B2_prop_i_b5[((((t246 + (t2680*16)) + (t2679*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t246 + (t2682*16)) + (t2681*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)]))
                    let t2701 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2700 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2699 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2698 = _src_color_weights_b24[((c19*3) + 36)]
                    let t2697 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2696 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2695 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2694 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B2_Blocal_diquark_r2_i[0] = (let t247 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t247 + (t2695*16)) + (t2694*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t247 + (t2697*16)) + (t2696*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B2_prop_i_b5[((((t247 + (t2699*16)) + (t2698*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t247 + (t2701*16)) + (t2700*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)]))
                    let t2720 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2719 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2718 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2717 = _src_color_weights_b24[((c19*3) + 36)]
                    let t2716 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2715 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2714 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2713 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B2_Bfirst_diquark_r2_r[0] = (let t248 = (c17 + (((c3*2) + c5)*4)) in (let t249 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t248 + (t2714*16)) + (t2713*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t249 + (t2716*16)) + (t2715*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B2_prop_i_b5[((((t248 + (t2718*16)) + (t2717*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t249 + (t2720*16)) + (t2719*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    let t2739 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2738 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2737 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2736 = _src_color_weights_b24[((c19*3) + 36)]
                    let t2735 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2734 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2733 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2732 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B2_Bfirst_diquark_r2_i[0] = (let t250 = (c17 + (((c3*2) + c5)*4)) in (let t251 = (c17 + (c7*4)) in (((_B2_prop_r_b4[((((t250 + (t2733*16)) + (t2732*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t251 + (t2735*16)) + (t2734*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B2_prop_i_b5[((((t250 + (t2737*16)) + (t2736*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t251 + (t2739*16)) + (t2738*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    let t2758 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2757 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2756 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2755 = _src_color_weights_b24[((c19*3) + 36)]
                    let t2754 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2753 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2752 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2751 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B2_Bthird_diquark_r2_r[0] = (let t252 = (c17 + (c7*4)) in (let t253 = (c17 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t252 + (t2752*16)) + (t2751*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t253 + (t2754*16)) + (t2753*32)) + (c15*96)) + (c13*192)) + 1152)]) - (_B2_prop_i_b5[((((t252 + (t2756*16)) + (t2755*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t253 + (t2758*16)) + (t2757*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    let t2777 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2776 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2775 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2774 = _src_color_weights_b24[((c19*3) + 36)]
                    let t2773 = _src_spin_weights_b25[((c19*3) + 38)]
                    let t2772 = _src_color_weights_b24[((c19*3) + 38)]
                    let t2771 = _src_spin_weights_b25[((c19*3) + 36)]
                    let t2770 = _src_color_weights_b24[((c19*3) + 36)]
                    buf_B2_Bthird_diquark_r2_i[0] = (let t254 = (c17 + (c7*4)) in (let t255 = (c17 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t254 + (t2771*16)) + (t2770*32)) + (c11*96)) + (c9*192))]*_B2_prop_i_b5[(((((t255 + (t2773*16)) + (t2772*32)) + (c15*96)) + (c13*192)) + 1152)]) + (_B2_prop_i_b5[((((t254 + (t2775*16)) + (t2774*32)) + (c11*96)) + (c9*192))]*_B2_prop_r_b4[(((((t255 + (t2777*16)) + (t2776*32)) + (c15*96)) + (c13*192)) + 1152)]))*_src_weights_b26[(c19 + 12)])))
                    for (c21, 0, 3) {
                      for (c23, 0, 2) {
                        let t2792 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t2791 = _src_color_weights_b24[((c19*3) + 37)]
                        let t2790 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t2789 = _src_color_weights_b24[((c19*3) + 37)]
                        buf_B2_Blocal_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t256 = (c17 + (c7*4)) in (buf_B2_Blocal_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t256 + (t2790*16)) + (t2789*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_r[0]) - (_B2_prop_i_b5[(((((t256 + (t2792*16)) + (t2791*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_i[0]))))
                        let t95 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t94 = _src_color_weights_b24[((c19*3) + 37)]
                        let t93 = _src_spin_weights_b25[((c19*3) + 37)]
                        let t92 = _src_color_weights_b24[((c19*3) + 37)]
                        buf_B2_Blocal_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t257 = (c17 + (c7*4)) in (buf_B2_Blocal_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t257 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_i[0]) + (_B2_prop_i_b5[(((((t257 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_r[0]))))
                        buf_B2_Bfirst_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t258 = (c17 + (c7*4)) in (buf_B2_Bfirst_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t258 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r2_r[0]) - (_B2_prop_i_b5[(((((t258 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r2_i[0]))))
                        buf_B2_Bfirst_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t259 = (c17 + (c7*4)) in (buf_B2_Bfirst_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t259 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r2_i[0]) + (_B2_prop_i_b5[(((((t259 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bfirst_diquark_r2_r[0]))))
                        buf_B2_Bsecond_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t260 = (c17 + (((c3*2) + c5)*4)) in (buf_B2_Bsecond_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t260 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_r[0]) - (_B2_prop_i_b5[(((((t260 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_i[0]))))
                        buf_B2_Bsecond_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t261 = (c17 + (((c3*2) + c5)*4)) in (buf_B2_Bsecond_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t261 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_i[0]) + (_B2_prop_i_b5[(((((t261 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Blocal_diquark_r2_r[0]))))
                        buf_B2_Bthird_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] = (let t262 = (c17 + (c7*4)) in (buf_B2_Bthird_props_r2_r[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t262 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r2_r[0]) - (_B2_prop_i_b5[(((((t262 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r2_i[0]))))
                        buf_B2_Bthird_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] = (let t263 = (c17 + (c7*4)) in (buf_B2_Bthird_props_r2_i[(c23 + int32((int64(c21)*(int64)2)))] + ((_B2_prop_r_b4[(((((t263 + (t93*16)) + (t92*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r2_i[0]) + (_B2_prop_i_b5[(((((t263 + (t95*16)) + (t94*32)) + (c23*96)) + (c21*192)) + 576)]*buf_B2_Bthird_diquark_r2_r[0]))))
                      }
                    }
                  }
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      for (c23, 0, 44) {
                        buf_B2_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t264 = (c23 + (c17*44)) in (let t265 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t264]*buf_B2_Blocal_props_r2_r[t265]) - (_src_psi_B2_i_b9[t264]*buf_B2_Blocal_props_r2_i[t265])))))
                        buf_B2_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t266 = (c23 + (c17*44)) in (let t267 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t266]*buf_B2_Blocal_props_r2_i[t267]) + (_src_psi_B2_i_b9[t266]*buf_B2_Blocal_props_r2_r[t267])))))
                        buf_B2_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t268 = (c23 + (c17*44)) in (let t269 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t268]*buf_B2_Bfirst_props_r2_r[t269]) - (_src_psi_B2_i_b9[t268]*buf_B2_Bfirst_props_r2_i[t269])))))
                        buf_B2_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t270 = (c23 + (c17*44)) in (let t271 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t270]*buf_B2_Bfirst_props_r2_i[t271]) + (_src_psi_B2_i_b9[t270]*buf_B2_Bfirst_props_r2_r[t271])))))
                        buf_B2_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t272 = (c23 + (c17*44)) in (let t273 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t272]*buf_B2_Bsecond_props_r2_r[t273]) - (_src_psi_B2_i_b9[t272]*buf_B2_Bsecond_props_r2_i[t273])))))
                        buf_B2_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t274 = (c23 + (c17*44)) in (let t275 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t274]*buf_B2_Bsecond_props_r2_i[t275]) + (_src_psi_B2_i_b9[t274]*buf_B2_Bsecond_props_r2_r[t275])))))
                        buf_B2_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t276 = (c23 + (c17*44)) in (let t277 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t276]*buf_B2_Bthird_props_r2_r[t277]) - (_src_psi_B2_i_b9[t276]*buf_B2_Bthird_props_r2_i[t277])))))
                        buf_B2_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t278 = (c23 + (c17*44)) in (let t279 = (c21 + int32((int64(c19)*(int64)2))) in (buf_B2_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B2_r_b8[t278]*buf_B2_Bthird_props_r2_i[t279]) + (_src_psi_B2_i_b9[t278]*buf_B2_Bthird_props_r2_r[t279])))))
                        buf_flip_B2_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t280 = (c23 + (c17*44)) in (let t281 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Blocal_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t280]*buf_B2_Blocal_props_r2_r[t281]) - (_src_psi_B1_i_b7[t280]*buf_B2_Blocal_props_r2_i[t281])))))
                        buf_flip_B2_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t282 = (c23 + (c17*44)) in (let t283 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Blocal_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t282]*buf_B2_Blocal_props_r2_i[t283]) + (_src_psi_B1_i_b7[t282]*buf_B2_Blocal_props_r2_r[t283])))))
                        buf_flip_B2_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t284 = (c23 + (c17*44)) in (let t285 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bfirst_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t284]*buf_B2_Bfirst_props_r2_r[t285]) - (_src_psi_B1_i_b7[t284]*buf_B2_Bfirst_props_r2_i[t285])))))
                        buf_flip_B2_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t286 = (c23 + (c17*44)) in (let t287 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bfirst_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t286]*buf_B2_Bfirst_props_r2_i[t287]) + (_src_psi_B1_i_b7[t286]*buf_B2_Bfirst_props_r2_r[t287])))))
                        buf_flip_B2_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t288 = (c23 + (c17*44)) in (let t289 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bsecond_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t288]*buf_B2_Bsecond_props_r2_r[t289]) - (_src_psi_B1_i_b7[t288]*buf_B2_Bsecond_props_r2_i[t289])))))
                        buf_flip_B2_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t290 = (c23 + (c17*44)) in (let t291 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bsecond_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t290]*buf_B2_Bsecond_props_r2_i[t291]) + (_src_psi_B1_i_b7[t290]*buf_B2_Bsecond_props_r2_r[t291])))))
                        buf_flip_B2_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t292 = (c23 + (c17*44)) in (let t293 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bthird_r2_r[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t292]*buf_B2_Bthird_props_r2_r[t293]) - (_src_psi_B1_i_b7[t292]*buf_B2_Bthird_props_r2_i[t293])))))
                        buf_flip_B2_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] = (let t294 = (c23 + (c17*44)) in (let t295 = (c21 + int32((int64(c19)*(int64)2))) in (buf_flip_B2_Bthird_r2_i[((((((c23 + int32((int64(c21)*(int64)44))) + int32((int64(c19)*(int64)88))) + int32((int64(c15)*(int64)264))) + int32((int64(c13)*(int64)528))) + int32((int64(c11)*(int64)1584))) + int32((int64(c9)*(int64)3168)))] + ((_src_psi_B1_r_b6[t294]*buf_B2_Bthird_props_r2_i[t295]) + (_src_psi_B1_i_b7[t294]*buf_B2_Bthird_props_r2_r[t295])))))
                      }
                    }
                  }
                }
              }
            }
          }
        }
        for (c9, 0, 4) {
          for (c11, 0, 44) {
            for (c13, 0, 4) {
              buf_C_BB_BB_prop_r[0] = 0.000000
              buf_C_BB_BB_prop_i[0] = 0.000000
              for (c15, 0, 2) {
                for (c17, 0, 36) {
                  for (c19, 0, 288) {
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4624 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4623 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4622 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4621 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4620 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4619 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Blocal_r1_r[((((((c11 + int32((int64(t4624)*(int64)44))) + int32((int64(t4623)*(int64)88))) + int32((int64(t4622)*(int64)264))) + int32((int64(t4621)*(int64)528))) + int32((int64(t4620)*(int64)1584))) + int32((int64(t4619)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4641 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4640 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4639 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4638 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4637 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4636 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Blocal_r1_i[((((((c11 + int32((int64(t4641)*(int64)44))) + int32((int64(t4640)*(int64)88))) + int32((int64(t4639)*(int64)264))) + int32((int64(t4638)*(int64)528))) + int32((int64(t4637)*(int64)1584))) + int32((int64(t4636)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4658 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4657 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4656 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4655 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4654 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4653 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Blocal_r1_r[((((((c11 + int32((int64(t4658)*(int64)44))) + int32((int64(t4657)*(int64)88))) + int32((int64(t4656)*(int64)264))) + int32((int64(t4655)*(int64)528))) + int32((int64(t4654)*(int64)1584))) + int32((int64(t4653)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4675 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4674 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4673 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4672 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4671 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4670 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Blocal_r1_i[((((((c11 + int32((int64(t4675)*(int64)44))) + int32((int64(t4674)*(int64)88))) + int32((int64(t4673)*(int64)264))) + int32((int64(t4672)*(int64)528))) + int32((int64(t4671)*(int64)1584))) + int32((int64(t4670)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4692 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4691 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4690 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4689 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4688 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4687 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Bfirst_r1_r[((((((c11 + int32((int64(t4692)*(int64)44))) + int32((int64(t4691)*(int64)88))) + int32((int64(t4690)*(int64)264))) + int32((int64(t4689)*(int64)528))) + int32((int64(t4688)*(int64)1584))) + int32((int64(t4687)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4709 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4708 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4707 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4706 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4705 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4704 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Bfirst_r1_i[((((((c11 + int32((int64(t4709)*(int64)44))) + int32((int64(t4708)*(int64)88))) + int32((int64(t4707)*(int64)264))) + int32((int64(t4706)*(int64)528))) + int32((int64(t4705)*(int64)1584))) + int32((int64(t4704)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4726 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4725 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4724 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4723 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4722 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4721 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Bfirst_r1_r[((((((c11 + int32((int64(t4726)*(int64)44))) + int32((int64(t4725)*(int64)88))) + int32((int64(t4724)*(int64)264))) + int32((int64(t4723)*(int64)528))) + int32((int64(t4722)*(int64)1584))) + int32((int64(t4721)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4743 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4742 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4741 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4740 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4739 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4738 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Bfirst_r1_i[((((((c11 + int32((int64(t4743)*(int64)44))) + int32((int64(t4742)*(int64)88))) + int32((int64(t4741)*(int64)264))) + int32((int64(t4740)*(int64)528))) + int32((int64(t4739)*(int64)1584))) + int32((int64(t4738)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4760 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4759 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4758 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4757 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4756 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4755 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Bsecond_r1_r[((((((c11 + int32((int64(t4760)*(int64)44))) + int32((int64(t4759)*(int64)88))) + int32((int64(t4758)*(int64)264))) + int32((int64(t4757)*(int64)528))) + int32((int64(t4756)*(int64)1584))) + int32((int64(t4755)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4777 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4776 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4775 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4774 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4773 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4772 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Bsecond_r1_i[((((((c11 + int32((int64(t4777)*(int64)44))) + int32((int64(t4776)*(int64)88))) + int32((int64(t4775)*(int64)264))) + int32((int64(t4774)*(int64)528))) + int32((int64(t4773)*(int64)1584))) + int32((int64(t4772)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4794 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4793 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4792 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4791 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4790 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4789 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Bsecond_r1_r[((((((c11 + int32((int64(t4794)*(int64)44))) + int32((int64(t4793)*(int64)88))) + int32((int64(t4792)*(int64)264))) + int32((int64(t4791)*(int64)528))) + int32((int64(t4790)*(int64)1584))) + int32((int64(t4789)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4811 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4810 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4809 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4808 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4807 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4806 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Bsecond_r1_i[((((((c11 + int32((int64(t4811)*(int64)44))) + int32((int64(t4810)*(int64)88))) + int32((int64(t4809)*(int64)264))) + int32((int64(t4808)*(int64)528))) + int32((int64(t4807)*(int64)1584))) + int32((int64(t4806)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4828 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4827 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4826 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4825 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4824 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4823 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Bthird_r1_r[((((((c11 + int32((int64(t4828)*(int64)44))) + int32((int64(t4827)*(int64)88))) + int32((int64(t4826)*(int64)264))) + int32((int64(t4825)*(int64)528))) + int32((int64(t4824)*(int64)1584))) + int32((int64(t4823)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4845 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4844 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4843 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4842 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4841 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4840 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Bthird_r1_i[((((((c11 + int32((int64(t4845)*(int64)44))) + int32((int64(t4844)*(int64)88))) + int32((int64(t4843)*(int64)264))) + int32((int64(t4842)*(int64)528))) + int32((int64(t4841)*(int64)1584))) + int32((int64(t4840)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4862 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4861 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4860 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4859 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4858 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4857 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Bthird_r1_r[((((((c11 + int32((int64(t4862)*(int64)44))) + int32((int64(t4861)*(int64)88))) + int32((int64(t4860)*(int64)264))) + int32((int64(t4859)*(int64)528))) + int32((int64(t4858)*(int64)1584))) + int32((int64(t4857)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4879 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4878 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4877 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4876 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4875 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4874 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Bthird_r1_i[((((((c11 + int32((int64(t4879)*(int64)44))) + int32((int64(t4878)*(int64)88))) + int32((int64(t4877)*(int64)264))) + int32((int64(t4876)*(int64)528))) + int32((int64(t4875)*(int64)1584))) + int32((int64(t4874)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4896 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4895 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4894 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4893 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4892 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4891 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Blocal_r2_r[((((((c11 + int32((int64(t4896)*(int64)44))) + int32((int64(t4895)*(int64)88))) + int32((int64(t4894)*(int64)264))) + int32((int64(t4893)*(int64)528))) + int32((int64(t4892)*(int64)1584))) + int32((int64(t4891)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4913 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4912 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4911 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4910 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4909 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4908 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Blocal_r2_i[((((((c11 + int32((int64(t4913)*(int64)44))) + int32((int64(t4912)*(int64)88))) + int32((int64(t4911)*(int64)264))) + int32((int64(t4910)*(int64)528))) + int32((int64(t4909)*(int64)1584))) + int32((int64(t4908)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4930 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4929 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4928 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4927 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4926 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4925 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Blocal_r2_r[((((((c11 + int32((int64(t4930)*(int64)44))) + int32((int64(t4929)*(int64)88))) + int32((int64(t4928)*(int64)264))) + int32((int64(t4927)*(int64)528))) + int32((int64(t4926)*(int64)1584))) + int32((int64(t4925)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4947 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4946 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4945 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4944 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4943 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4942 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Blocal_r2_i[((((((c11 + int32((int64(t4947)*(int64)44))) + int32((int64(t4946)*(int64)88))) + int32((int64(t4945)*(int64)264))) + int32((int64(t4944)*(int64)528))) + int32((int64(t4943)*(int64)1584))) + int32((int64(t4942)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4964 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4963 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4962 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4961 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4960 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4959 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Bfirst_r2_r[((((((c11 + int32((int64(t4964)*(int64)44))) + int32((int64(t4963)*(int64)88))) + int32((int64(t4962)*(int64)264))) + int32((int64(t4961)*(int64)528))) + int32((int64(t4960)*(int64)1584))) + int32((int64(t4959)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t4981 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4980 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4979 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4978 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4977 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4976 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Bfirst_r2_i[((((((c11 + int32((int64(t4981)*(int64)44))) + int32((int64(t4980)*(int64)88))) + int32((int64(t4979)*(int64)264))) + int32((int64(t4978)*(int64)528))) + int32((int64(t4977)*(int64)1584))) + int32((int64(t4976)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t4998 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4997 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t4996 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4995 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t4994 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t4993 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Bfirst_r2_r[((((((c11 + int32((int64(t4998)*(int64)44))) + int32((int64(t4997)*(int64)88))) + int32((int64(t4996)*(int64)264))) + int32((int64(t4995)*(int64)528))) + int32((int64(t4994)*(int64)1584))) + int32((int64(t4993)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5015 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5014 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5013 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5012 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5011 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5010 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Bfirst_r2_i[((((((c11 + int32((int64(t5015)*(int64)44))) + int32((int64(t5014)*(int64)88))) + int32((int64(t5013)*(int64)264))) + int32((int64(t5012)*(int64)528))) + int32((int64(t5011)*(int64)1584))) + int32((int64(t5010)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5032 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5031 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5030 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5029 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5028 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5027 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Bsecond_r2_r[((((((c11 + int32((int64(t5032)*(int64)44))) + int32((int64(t5031)*(int64)88))) + int32((int64(t5030)*(int64)264))) + int32((int64(t5029)*(int64)528))) + int32((int64(t5028)*(int64)1584))) + int32((int64(t5027)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5049 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5048 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5047 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5046 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5045 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5044 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Bsecond_r2_i[((((((c11 + int32((int64(t5049)*(int64)44))) + int32((int64(t5048)*(int64)88))) + int32((int64(t5047)*(int64)264))) + int32((int64(t5046)*(int64)528))) + int32((int64(t5045)*(int64)1584))) + int32((int64(t5044)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5066 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5065 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5064 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5063 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5062 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5061 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Bsecond_r2_r[((((((c11 + int32((int64(t5066)*(int64)44))) + int32((int64(t5065)*(int64)88))) + int32((int64(t5064)*(int64)264))) + int32((int64(t5063)*(int64)528))) + int32((int64(t5062)*(int64)1584))) + int32((int64(t5061)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5083 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5082 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5081 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5080 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5079 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5078 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Bsecond_r2_i[((((((c11 + int32((int64(t5083)*(int64)44))) + int32((int64(t5082)*(int64)88))) + int32((int64(t5081)*(int64)264))) + int32((int64(t5080)*(int64)528))) + int32((int64(t5079)*(int64)1584))) + int32((int64(t5078)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5100 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5099 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5098 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5097 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5096 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5095 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B1_Bthird_r2_r[((((((c11 + int32((int64(t5100)*(int64)44))) + int32((int64(t5099)*(int64)88))) + int32((int64(t5098)*(int64)264))) + int32((int64(t5097)*(int64)528))) + int32((int64(t5096)*(int64)1584))) + int32((int64(t5095)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5117 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5116 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5115 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5114 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5113 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5112 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B1_Bthird_r2_i[((((((c11 + int32((int64(t5117)*(int64)44))) + int32((int64(t5116)*(int64)88))) + int32((int64(t5115)*(int64)264))) + int32((int64(t5114)*(int64)528))) + int32((int64(t5113)*(int64)1584))) + int32((int64(t5112)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5134 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5133 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5132 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5131 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5130 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5129 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_r[0] = buf_B2_Bthird_r2_r[((((((c11 + int32((int64(t5134)*(int64)44))) + int32((int64(t5133)*(int64)88))) + int32((int64(t5132)*(int64)264))) + int32((int64(t5131)*(int64)528))) + int32((int64(t5130)*(int64)1584))) + int32((int64(t5129)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5151 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5150 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5149 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5148 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5147 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5146 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_BB_BB_new_term_b1_i[0] = buf_B2_Bthird_r2_i[((((((c11 + int32((int64(t5151)*(int64)44))) + int32((int64(t5150)*(int64)88))) + int32((int64(t5149)*(int64)264))) + int32((int64(t5148)*(int64)528))) + int32((int64(t5147)*(int64)1584))) + int32((int64(t5146)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5168 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5167 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5166 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5165 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5164 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5163 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Blocal_r1_r[((((((c11 + int32((int64(t5168)*(int64)44))) + int32((int64(t5167)*(int64)88))) + int32((int64(t5166)*(int64)264))) + int32((int64(t5165)*(int64)528))) + int32((int64(t5164)*(int64)1584))) + int32((int64(t5163)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5185 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5184 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5183 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5182 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5181 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5180 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Blocal_r1_i[((((((c11 + int32((int64(t5185)*(int64)44))) + int32((int64(t5184)*(int64)88))) + int32((int64(t5183)*(int64)264))) + int32((int64(t5182)*(int64)528))) + int32((int64(t5181)*(int64)1584))) + int32((int64(t5180)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5202 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5201 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5200 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5199 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5198 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5197 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Blocal_r1_r[((((((c11 + int32((int64(t5202)*(int64)44))) + int32((int64(t5201)*(int64)88))) + int32((int64(t5200)*(int64)264))) + int32((int64(t5199)*(int64)528))) + int32((int64(t5198)*(int64)1584))) + int32((int64(t5197)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5219 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5218 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5217 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5216 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5215 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5214 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Blocal_r1_i[((((((c11 + int32((int64(t5219)*(int64)44))) + int32((int64(t5218)*(int64)88))) + int32((int64(t5217)*(int64)264))) + int32((int64(t5216)*(int64)528))) + int32((int64(t5215)*(int64)1584))) + int32((int64(t5214)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5236 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5235 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5234 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5233 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5232 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5231 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Bfirst_r1_r[((((((c11 + int32((int64(t5236)*(int64)44))) + int32((int64(t5235)*(int64)88))) + int32((int64(t5234)*(int64)264))) + int32((int64(t5233)*(int64)528))) + int32((int64(t5232)*(int64)1584))) + int32((int64(t5231)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5253 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5252 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5251 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5250 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5249 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5248 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Bfirst_r1_i[((((((c11 + int32((int64(t5253)*(int64)44))) + int32((int64(t5252)*(int64)88))) + int32((int64(t5251)*(int64)264))) + int32((int64(t5250)*(int64)528))) + int32((int64(t5249)*(int64)1584))) + int32((int64(t5248)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5270 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5269 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5268 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5267 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5266 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5265 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Bfirst_r1_r[((((((c11 + int32((int64(t5270)*(int64)44))) + int32((int64(t5269)*(int64)88))) + int32((int64(t5268)*(int64)264))) + int32((int64(t5267)*(int64)528))) + int32((int64(t5266)*(int64)1584))) + int32((int64(t5265)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5287 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5286 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5285 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5284 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5283 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5282 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Bfirst_r1_i[((((((c11 + int32((int64(t5287)*(int64)44))) + int32((int64(t5286)*(int64)88))) + int32((int64(t5285)*(int64)264))) + int32((int64(t5284)*(int64)528))) + int32((int64(t5283)*(int64)1584))) + int32((int64(t5282)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5304 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5303 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5302 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5301 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5300 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5299 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Bsecond_r1_r[((((((c11 + int32((int64(t5304)*(int64)44))) + int32((int64(t5303)*(int64)88))) + int32((int64(t5302)*(int64)264))) + int32((int64(t5301)*(int64)528))) + int32((int64(t5300)*(int64)1584))) + int32((int64(t5299)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5321 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5320 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5319 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5318 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5317 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5316 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Bsecond_r1_i[((((((c11 + int32((int64(t5321)*(int64)44))) + int32((int64(t5320)*(int64)88))) + int32((int64(t5319)*(int64)264))) + int32((int64(t5318)*(int64)528))) + int32((int64(t5317)*(int64)1584))) + int32((int64(t5316)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5338 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5337 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5336 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5335 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5334 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5333 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Bsecond_r1_r[((((((c11 + int32((int64(t5338)*(int64)44))) + int32((int64(t5337)*(int64)88))) + int32((int64(t5336)*(int64)264))) + int32((int64(t5335)*(int64)528))) + int32((int64(t5334)*(int64)1584))) + int32((int64(t5333)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5355 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5354 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5353 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5352 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5351 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5350 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Bsecond_r1_i[((((((c11 + int32((int64(t5355)*(int64)44))) + int32((int64(t5354)*(int64)88))) + int32((int64(t5353)*(int64)264))) + int32((int64(t5352)*(int64)528))) + int32((int64(t5351)*(int64)1584))) + int32((int64(t5350)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5372 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5371 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5370 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5369 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5368 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5367 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Bthird_r1_r[((((((c11 + int32((int64(t5372)*(int64)44))) + int32((int64(t5371)*(int64)88))) + int32((int64(t5370)*(int64)264))) + int32((int64(t5369)*(int64)528))) + int32((int64(t5368)*(int64)1584))) + int32((int64(t5367)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5389 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5388 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5387 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5386 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5385 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5384 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Bthird_r1_i[((((((c11 + int32((int64(t5389)*(int64)44))) + int32((int64(t5388)*(int64)88))) + int32((int64(t5387)*(int64)264))) + int32((int64(t5386)*(int64)528))) + int32((int64(t5385)*(int64)1584))) + int32((int64(t5384)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5406 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5405 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5404 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5403 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5402 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5401 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Bthird_r1_r[((((((c11 + int32((int64(t5406)*(int64)44))) + int32((int64(t5405)*(int64)88))) + int32((int64(t5404)*(int64)264))) + int32((int64(t5403)*(int64)528))) + int32((int64(t5402)*(int64)1584))) + int32((int64(t5401)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5423 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5422 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5421 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5420 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5419 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5418 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Bthird_r1_i[((((((c11 + int32((int64(t5423)*(int64)44))) + int32((int64(t5422)*(int64)88))) + int32((int64(t5421)*(int64)264))) + int32((int64(t5420)*(int64)528))) + int32((int64(t5419)*(int64)1584))) + int32((int64(t5418)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5440 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5439 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5438 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5437 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5436 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5435 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Blocal_r2_r[((((((c11 + int32((int64(t5440)*(int64)44))) + int32((int64(t5439)*(int64)88))) + int32((int64(t5438)*(int64)264))) + int32((int64(t5437)*(int64)528))) + int32((int64(t5436)*(int64)1584))) + int32((int64(t5435)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5457 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5456 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5455 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5454 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5453 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5452 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Blocal_r2_i[((((((c11 + int32((int64(t5457)*(int64)44))) + int32((int64(t5456)*(int64)88))) + int32((int64(t5455)*(int64)264))) + int32((int64(t5454)*(int64)528))) + int32((int64(t5453)*(int64)1584))) + int32((int64(t5452)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5474 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5473 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5472 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5471 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5470 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5469 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Blocal_r2_r[((((((c11 + int32((int64(t5474)*(int64)44))) + int32((int64(t5473)*(int64)88))) + int32((int64(t5472)*(int64)264))) + int32((int64(t5471)*(int64)528))) + int32((int64(t5470)*(int64)1584))) + int32((int64(t5469)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5491 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5490 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5489 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5488 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5487 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5486 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Blocal_r2_i[((((((c11 + int32((int64(t5491)*(int64)44))) + int32((int64(t5490)*(int64)88))) + int32((int64(t5489)*(int64)264))) + int32((int64(t5488)*(int64)528))) + int32((int64(t5487)*(int64)1584))) + int32((int64(t5486)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5508 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5507 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5506 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5505 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5504 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5503 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Bfirst_r2_r[((((((c11 + int32((int64(t5508)*(int64)44))) + int32((int64(t5507)*(int64)88))) + int32((int64(t5506)*(int64)264))) + int32((int64(t5505)*(int64)528))) + int32((int64(t5504)*(int64)1584))) + int32((int64(t5503)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5525 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5524 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5523 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5522 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5521 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5520 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Bfirst_r2_i[((((((c11 + int32((int64(t5525)*(int64)44))) + int32((int64(t5524)*(int64)88))) + int32((int64(t5523)*(int64)264))) + int32((int64(t5522)*(int64)528))) + int32((int64(t5521)*(int64)1584))) + int32((int64(t5520)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5542 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5541 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5540 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5539 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5538 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5537 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Bfirst_r2_r[((((((c11 + int32((int64(t5542)*(int64)44))) + int32((int64(t5541)*(int64)88))) + int32((int64(t5540)*(int64)264))) + int32((int64(t5539)*(int64)528))) + int32((int64(t5538)*(int64)1584))) + int32((int64(t5537)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5559 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5558 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5557 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5556 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5555 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5554 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Bfirst_r2_i[((((((c11 + int32((int64(t5559)*(int64)44))) + int32((int64(t5558)*(int64)88))) + int32((int64(t5557)*(int64)264))) + int32((int64(t5556)*(int64)528))) + int32((int64(t5555)*(int64)1584))) + int32((int64(t5554)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5576 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5575 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5574 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5573 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5572 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5571 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Bsecond_r2_r[((((((c11 + int32((int64(t5576)*(int64)44))) + int32((int64(t5575)*(int64)88))) + int32((int64(t5574)*(int64)264))) + int32((int64(t5573)*(int64)528))) + int32((int64(t5572)*(int64)1584))) + int32((int64(t5571)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5593 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5592 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5591 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5590 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5589 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5588 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Bsecond_r2_i[((((((c11 + int32((int64(t5593)*(int64)44))) + int32((int64(t5592)*(int64)88))) + int32((int64(t5591)*(int64)264))) + int32((int64(t5590)*(int64)528))) + int32((int64(t5589)*(int64)1584))) + int32((int64(t5588)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5610 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5609 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5608 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5607 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5606 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5605 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Bsecond_r2_r[((((((c11 + int32((int64(t5610)*(int64)44))) + int32((int64(t5609)*(int64)88))) + int32((int64(t5608)*(int64)264))) + int32((int64(t5607)*(int64)528))) + int32((int64(t5606)*(int64)1584))) + int32((int64(t5605)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5627 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5626 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5625 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5624 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5623 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5622 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Bsecond_r2_i[((((((c11 + int32((int64(t5627)*(int64)44))) + int32((int64(t5626)*(int64)88))) + int32((int64(t5625)*(int64)264))) + int32((int64(t5624)*(int64)528))) + int32((int64(t5623)*(int64)1584))) + int32((int64(t5622)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5644 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5643 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5642 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5641 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5640 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5639 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B1_Bthird_r2_r[((((((c11 + int32((int64(t5644)*(int64)44))) + int32((int64(t5643)*(int64)88))) + int32((int64(t5642)*(int64)264))) + int32((int64(t5641)*(int64)528))) + int32((int64(t5640)*(int64)1584))) + int32((int64(t5639)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t5661 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5660 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5659 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5658 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5657 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5656 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B1_Bthird_r2_i[((((((c11 + int32((int64(t5661)*(int64)44))) + int32((int64(t5660)*(int64)88))) + int32((int64(t5659)*(int64)264))) + int32((int64(t5658)*(int64)528))) + int32((int64(t5657)*(int64)1584))) + int32((int64(t5656)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5678 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5677 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5676 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5675 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5674 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5673 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_r[0] = buf_B2_Bthird_r2_r[((((((c11 + int32((int64(t5678)*(int64)44))) + int32((int64(t5677)*(int64)88))) + int32((int64(t5676)*(int64)264))) + int32((int64(t5675)*(int64)528))) + int32((int64(t5674)*(int64)1584))) + int32((int64(t5673)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t5695 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5694 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t5693 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5692 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t5691 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t5690 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_BB_BB_new_term_b2_i[0] = buf_B2_Bthird_r2_i[((((((c11 + int32((int64(t5695)*(int64)44))) + int32((int64(t5694)*(int64)88))) + int32((int64(t5693)*(int64)264))) + int32((int64(t5692)*(int64)528))) + int32((int64(t5691)*(int64)1584))) + int32((int64(t5690)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5712 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5711 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5710 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5709 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5708 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5707 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Blocal_r1_r[((((((c11 + int32((int64(t5712)*(int64)44))) + int32((int64(t5711)*(int64)88))) + int32((int64(t5710)*(int64)264))) + int32((int64(t5709)*(int64)528))) + int32((int64(t5708)*(int64)1584))) + int32((int64(t5707)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5729 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5728 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5727 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5726 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5725 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5724 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Blocal_r1_i[((((((c11 + int32((int64(t5729)*(int64)44))) + int32((int64(t5728)*(int64)88))) + int32((int64(t5727)*(int64)264))) + int32((int64(t5726)*(int64)528))) + int32((int64(t5725)*(int64)1584))) + int32((int64(t5724)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5746 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5745 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5744 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5743 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5742 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5741 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Blocal_r1_r[((((((c11 + int32((int64(t5746)*(int64)44))) + int32((int64(t5745)*(int64)88))) + int32((int64(t5744)*(int64)264))) + int32((int64(t5743)*(int64)528))) + int32((int64(t5742)*(int64)1584))) + int32((int64(t5741)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5763 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5762 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5761 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5760 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5759 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5758 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Blocal_r1_i[((((((c11 + int32((int64(t5763)*(int64)44))) + int32((int64(t5762)*(int64)88))) + int32((int64(t5761)*(int64)264))) + int32((int64(t5760)*(int64)528))) + int32((int64(t5759)*(int64)1584))) + int32((int64(t5758)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5780 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5779 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5778 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5777 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5776 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5775 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Bfirst_r1_r[((((((c11 + int32((int64(t5780)*(int64)44))) + int32((int64(t5779)*(int64)88))) + int32((int64(t5778)*(int64)264))) + int32((int64(t5777)*(int64)528))) + int32((int64(t5776)*(int64)1584))) + int32((int64(t5775)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5797 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5796 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5795 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5794 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5793 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5792 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Bfirst_r1_i[((((((c11 + int32((int64(t5797)*(int64)44))) + int32((int64(t5796)*(int64)88))) + int32((int64(t5795)*(int64)264))) + int32((int64(t5794)*(int64)528))) + int32((int64(t5793)*(int64)1584))) + int32((int64(t5792)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5814 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5813 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5812 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5811 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5810 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5809 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Bfirst_r1_r[((((((c11 + int32((int64(t5814)*(int64)44))) + int32((int64(t5813)*(int64)88))) + int32((int64(t5812)*(int64)264))) + int32((int64(t5811)*(int64)528))) + int32((int64(t5810)*(int64)1584))) + int32((int64(t5809)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5831 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5830 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5829 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5828 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5827 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5826 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Bfirst_r1_i[((((((c11 + int32((int64(t5831)*(int64)44))) + int32((int64(t5830)*(int64)88))) + int32((int64(t5829)*(int64)264))) + int32((int64(t5828)*(int64)528))) + int32((int64(t5827)*(int64)1584))) + int32((int64(t5826)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5848 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5847 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5846 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5845 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5844 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5843 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Bsecond_r1_r[((((((c11 + int32((int64(t5848)*(int64)44))) + int32((int64(t5847)*(int64)88))) + int32((int64(t5846)*(int64)264))) + int32((int64(t5845)*(int64)528))) + int32((int64(t5844)*(int64)1584))) + int32((int64(t5843)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5865 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5864 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5863 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5862 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5861 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5860 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Bsecond_r1_i[((((((c11 + int32((int64(t5865)*(int64)44))) + int32((int64(t5864)*(int64)88))) + int32((int64(t5863)*(int64)264))) + int32((int64(t5862)*(int64)528))) + int32((int64(t5861)*(int64)1584))) + int32((int64(t5860)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5882 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5881 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5880 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5879 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5878 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5877 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Bsecond_r1_r[((((((c11 + int32((int64(t5882)*(int64)44))) + int32((int64(t5881)*(int64)88))) + int32((int64(t5880)*(int64)264))) + int32((int64(t5879)*(int64)528))) + int32((int64(t5878)*(int64)1584))) + int32((int64(t5877)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5899 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5898 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5897 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5896 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5895 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5894 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Bsecond_r1_i[((((((c11 + int32((int64(t5899)*(int64)44))) + int32((int64(t5898)*(int64)88))) + int32((int64(t5897)*(int64)264))) + int32((int64(t5896)*(int64)528))) + int32((int64(t5895)*(int64)1584))) + int32((int64(t5894)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5916 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5915 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5914 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5913 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5912 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5911 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Bthird_r1_r[((((((c11 + int32((int64(t5916)*(int64)44))) + int32((int64(t5915)*(int64)88))) + int32((int64(t5914)*(int64)264))) + int32((int64(t5913)*(int64)528))) + int32((int64(t5912)*(int64)1584))) + int32((int64(t5911)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t5933 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5932 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5931 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5930 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5929 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5928 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Bthird_r1_i[((((((c11 + int32((int64(t5933)*(int64)44))) + int32((int64(t5932)*(int64)88))) + int32((int64(t5931)*(int64)264))) + int32((int64(t5930)*(int64)528))) + int32((int64(t5929)*(int64)1584))) + int32((int64(t5928)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5950 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5949 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5948 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5947 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5946 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5945 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Bthird_r1_r[((((((c11 + int32((int64(t5950)*(int64)44))) + int32((int64(t5949)*(int64)88))) + int32((int64(t5948)*(int64)264))) + int32((int64(t5947)*(int64)528))) + int32((int64(t5946)*(int64)1584))) + int32((int64(t5945)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 1) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5967 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5966 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5965 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5964 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5963 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5962 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Bthird_r1_i[((((((c11 + int32((int64(t5967)*(int64)44))) + int32((int64(t5966)*(int64)88))) + int32((int64(t5965)*(int64)264))) + int32((int64(t5964)*(int64)528))) + int32((int64(t5963)*(int64)1584))) + int32((int64(t5962)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t5984 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5983 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5982 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5981 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5980 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5979 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Blocal_r2_r[((((((c11 + int32((int64(t5984)*(int64)44))) + int32((int64(t5983)*(int64)88))) + int32((int64(t5982)*(int64)264))) + int32((int64(t5981)*(int64)528))) + int32((int64(t5980)*(int64)1584))) + int32((int64(t5979)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6001 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6000 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t5999 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5998 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t5997 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t5996 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Blocal_r2_i[((((((c11 + int32((int64(t6001)*(int64)44))) + int32((int64(t6000)*(int64)88))) + int32((int64(t5999)*(int64)264))) + int32((int64(t5998)*(int64)528))) + int32((int64(t5997)*(int64)1584))) + int32((int64(t5996)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6018 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6017 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6016 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6015 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6014 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6013 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Blocal_r2_r[((((((c11 + int32((int64(t6018)*(int64)44))) + int32((int64(t6017)*(int64)88))) + int32((int64(t6016)*(int64)264))) + int32((int64(t6015)*(int64)528))) + int32((int64(t6014)*(int64)1584))) + int32((int64(t6013)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6035 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6034 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6033 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6032 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6031 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6030 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Blocal_r2_i[((((((c11 + int32((int64(t6035)*(int64)44))) + int32((int64(t6034)*(int64)88))) + int32((int64(t6033)*(int64)264))) + int32((int64(t6032)*(int64)528))) + int32((int64(t6031)*(int64)1584))) + int32((int64(t6030)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6052 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6051 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6050 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6049 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6048 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6047 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Bfirst_r2_r[((((((c11 + int32((int64(t6052)*(int64)44))) + int32((int64(t6051)*(int64)88))) + int32((int64(t6050)*(int64)264))) + int32((int64(t6049)*(int64)528))) + int32((int64(t6048)*(int64)1584))) + int32((int64(t6047)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6069 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6068 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6067 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6066 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6065 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6064 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Bfirst_r2_i[((((((c11 + int32((int64(t6069)*(int64)44))) + int32((int64(t6068)*(int64)88))) + int32((int64(t6067)*(int64)264))) + int32((int64(t6066)*(int64)528))) + int32((int64(t6065)*(int64)1584))) + int32((int64(t6064)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6086 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6085 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6084 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6083 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6082 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6081 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Bfirst_r2_r[((((((c11 + int32((int64(t6086)*(int64)44))) + int32((int64(t6085)*(int64)88))) + int32((int64(t6084)*(int64)264))) + int32((int64(t6083)*(int64)528))) + int32((int64(t6082)*(int64)1584))) + int32((int64(t6081)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6103 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6102 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6101 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6100 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6099 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6098 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Bfirst_r2_i[((((((c11 + int32((int64(t6103)*(int64)44))) + int32((int64(t6102)*(int64)88))) + int32((int64(t6101)*(int64)264))) + int32((int64(t6100)*(int64)528))) + int32((int64(t6099)*(int64)1584))) + int32((int64(t6098)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6120 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6119 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6118 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6117 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6116 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6115 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Bsecond_r2_r[((((((c11 + int32((int64(t6120)*(int64)44))) + int32((int64(t6119)*(int64)88))) + int32((int64(t6118)*(int64)264))) + int32((int64(t6117)*(int64)528))) + int32((int64(t6116)*(int64)1584))) + int32((int64(t6115)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6137 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6136 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6135 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6134 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6133 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6132 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Bsecond_r2_i[((((((c11 + int32((int64(t6137)*(int64)44))) + int32((int64(t6136)*(int64)88))) + int32((int64(t6135)*(int64)264))) + int32((int64(t6134)*(int64)528))) + int32((int64(t6133)*(int64)1584))) + int32((int64(t6132)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6154 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6153 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6152 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6151 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6150 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6149 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Bsecond_r2_r[((((((c11 + int32((int64(t6154)*(int64)44))) + int32((int64(t6153)*(int64)88))) + int32((int64(t6152)*(int64)264))) + int32((int64(t6151)*(int64)528))) + int32((int64(t6150)*(int64)1584))) + int32((int64(t6149)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6171 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6170 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6169 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6168 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6167 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6166 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Bsecond_r2_i[((((((c11 + int32((int64(t6171)*(int64)44))) + int32((int64(t6170)*(int64)88))) + int32((int64(t6169)*(int64)264))) + int32((int64(t6168)*(int64)528))) + int32((int64(t6167)*(int64)1584))) + int32((int64(t6166)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6188 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6187 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6186 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6185 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6184 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6183 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B1_Bthird_r2_r[((((((c11 + int32((int64(t6188)*(int64)44))) + int32((int64(t6187)*(int64)88))) + int32((int64(t6186)*(int64)264))) + int32((int64(t6185)*(int64)528))) + int32((int64(t6184)*(int64)1584))) + int32((int64(t6183)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 0) && (_snk_b_b23[((c17*6) + 2)] == 0)) && (_snk_b_b23[((c17*6) + 4)] == 1)))) {
                      let t6205 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6204 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6203 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6202 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6201 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6200 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B1_Bthird_r2_i[((((((c11 + int32((int64(t6205)*(int64)44))) + int32((int64(t6204)*(int64)88))) + int32((int64(t6203)*(int64)264))) + int32((int64(t6202)*(int64)528))) + int32((int64(t6201)*(int64)1584))) + int32((int64(t6200)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6222 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6221 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6220 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6219 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6218 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6217 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_r[0] = buf_flip_B2_Bthird_r2_r[((((((c11 + int32((int64(t6222)*(int64)44))) + int32((int64(t6221)*(int64)88))) + int32((int64(t6220)*(int64)264))) + int32((int64(t6219)*(int64)528))) + int32((int64(t6218)*(int64)1584))) + int32((int64(t6217)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[((c15*2) + (c9*4))] == 2) && (((_snk_b_b23[(c17*6)] == 1) && (_snk_b_b23[((c17*6) + 2)] == 1)) && (_snk_b_b23[((c17*6) + 4)] == 0)))) {
                      let t6239 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6238 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 2)]
                      let t6237 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6236 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 4)]
                      let t6235 = _snk_spin_weights_b28[(((c19*6) + (c17*1728)) + (c13*62208))]
                      let t6234 = _snk_color_weights_b27[(((c19*6) + (c17*1728)) + (c13*62208))]
                      buf_flip_BB_BB_new_term_b1_i[0] = buf_flip_B2_Bthird_r2_i[((((((c11 + int32((int64(t6239)*(int64)44))) + int32((int64(t6238)*(int64)88))) + int32((int64(t6237)*(int64)264))) + int32((int64(t6236)*(int64)528))) + int32((int64(t6235)*(int64)1584))) + int32((int64(t6234)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6256 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6255 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6254 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6253 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6252 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6251 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Blocal_r1_r[((((((c11 + int32((int64(t6256)*(int64)44))) + int32((int64(t6255)*(int64)88))) + int32((int64(t6254)*(int64)264))) + int32((int64(t6253)*(int64)528))) + int32((int64(t6252)*(int64)1584))) + int32((int64(t6251)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6273 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6272 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6271 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6270 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6269 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6268 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Blocal_r1_i[((((((c11 + int32((int64(t6273)*(int64)44))) + int32((int64(t6272)*(int64)88))) + int32((int64(t6271)*(int64)264))) + int32((int64(t6270)*(int64)528))) + int32((int64(t6269)*(int64)1584))) + int32((int64(t6268)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6290 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6289 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6288 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6287 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6286 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6285 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Blocal_r1_r[((((((c11 + int32((int64(t6290)*(int64)44))) + int32((int64(t6289)*(int64)88))) + int32((int64(t6288)*(int64)264))) + int32((int64(t6287)*(int64)528))) + int32((int64(t6286)*(int64)1584))) + int32((int64(t6285)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6307 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6306 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6305 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6304 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6303 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6302 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Blocal_r1_i[((((((c11 + int32((int64(t6307)*(int64)44))) + int32((int64(t6306)*(int64)88))) + int32((int64(t6305)*(int64)264))) + int32((int64(t6304)*(int64)528))) + int32((int64(t6303)*(int64)1584))) + int32((int64(t6302)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6324 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6323 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6322 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6321 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6320 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6319 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Bfirst_r1_r[((((((c11 + int32((int64(t6324)*(int64)44))) + int32((int64(t6323)*(int64)88))) + int32((int64(t6322)*(int64)264))) + int32((int64(t6321)*(int64)528))) + int32((int64(t6320)*(int64)1584))) + int32((int64(t6319)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6341 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6340 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6339 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6338 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6337 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6336 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Bfirst_r1_i[((((((c11 + int32((int64(t6341)*(int64)44))) + int32((int64(t6340)*(int64)88))) + int32((int64(t6339)*(int64)264))) + int32((int64(t6338)*(int64)528))) + int32((int64(t6337)*(int64)1584))) + int32((int64(t6336)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6358 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6357 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6356 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6355 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6354 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6353 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Bfirst_r1_r[((((((c11 + int32((int64(t6358)*(int64)44))) + int32((int64(t6357)*(int64)88))) + int32((int64(t6356)*(int64)264))) + int32((int64(t6355)*(int64)528))) + int32((int64(t6354)*(int64)1584))) + int32((int64(t6353)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6375 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6374 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6373 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6372 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6371 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6370 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Bfirst_r1_i[((((((c11 + int32((int64(t6375)*(int64)44))) + int32((int64(t6374)*(int64)88))) + int32((int64(t6373)*(int64)264))) + int32((int64(t6372)*(int64)528))) + int32((int64(t6371)*(int64)1584))) + int32((int64(t6370)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6392 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6391 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6390 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6389 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6388 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6387 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Bsecond_r1_r[((((((c11 + int32((int64(t6392)*(int64)44))) + int32((int64(t6391)*(int64)88))) + int32((int64(t6390)*(int64)264))) + int32((int64(t6389)*(int64)528))) + int32((int64(t6388)*(int64)1584))) + int32((int64(t6387)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6409 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6408 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6407 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6406 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6405 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6404 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Bsecond_r1_i[((((((c11 + int32((int64(t6409)*(int64)44))) + int32((int64(t6408)*(int64)88))) + int32((int64(t6407)*(int64)264))) + int32((int64(t6406)*(int64)528))) + int32((int64(t6405)*(int64)1584))) + int32((int64(t6404)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6426 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6425 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6424 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6423 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6422 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6421 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Bsecond_r1_r[((((((c11 + int32((int64(t6426)*(int64)44))) + int32((int64(t6425)*(int64)88))) + int32((int64(t6424)*(int64)264))) + int32((int64(t6423)*(int64)528))) + int32((int64(t6422)*(int64)1584))) + int32((int64(t6421)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6443 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6442 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6441 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6440 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6439 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6438 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Bsecond_r1_i[((((((c11 + int32((int64(t6443)*(int64)44))) + int32((int64(t6442)*(int64)88))) + int32((int64(t6441)*(int64)264))) + int32((int64(t6440)*(int64)528))) + int32((int64(t6439)*(int64)1584))) + int32((int64(t6438)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6460 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6459 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6458 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6457 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6456 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6455 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Bthird_r1_r[((((((c11 + int32((int64(t6460)*(int64)44))) + int32((int64(t6459)*(int64)88))) + int32((int64(t6458)*(int64)264))) + int32((int64(t6457)*(int64)528))) + int32((int64(t6456)*(int64)1584))) + int32((int64(t6455)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6477 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6476 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6475 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6474 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6473 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6472 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Bthird_r1_i[((((((c11 + int32((int64(t6477)*(int64)44))) + int32((int64(t6476)*(int64)88))) + int32((int64(t6475)*(int64)264))) + int32((int64(t6474)*(int64)528))) + int32((int64(t6473)*(int64)1584))) + int32((int64(t6472)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6494 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6493 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6492 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6491 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6490 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6489 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Bthird_r1_r[((((((c11 + int32((int64(t6494)*(int64)44))) + int32((int64(t6493)*(int64)88))) + int32((int64(t6492)*(int64)264))) + int32((int64(t6491)*(int64)528))) + int32((int64(t6490)*(int64)1584))) + int32((int64(t6489)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 1) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6511 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6510 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6509 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6508 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6507 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6506 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Bthird_r1_i[((((((c11 + int32((int64(t6511)*(int64)44))) + int32((int64(t6510)*(int64)88))) + int32((int64(t6509)*(int64)264))) + int32((int64(t6508)*(int64)528))) + int32((int64(t6507)*(int64)1584))) + int32((int64(t6506)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6528 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6527 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6526 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6525 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6524 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6523 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Blocal_r2_r[((((((c11 + int32((int64(t6528)*(int64)44))) + int32((int64(t6527)*(int64)88))) + int32((int64(t6526)*(int64)264))) + int32((int64(t6525)*(int64)528))) + int32((int64(t6524)*(int64)1584))) + int32((int64(t6523)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6545 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6544 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6543 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6542 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6541 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6540 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Blocal_r2_i[((((((c11 + int32((int64(t6545)*(int64)44))) + int32((int64(t6544)*(int64)88))) + int32((int64(t6543)*(int64)264))) + int32((int64(t6542)*(int64)528))) + int32((int64(t6541)*(int64)1584))) + int32((int64(t6540)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6562 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6561 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6560 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6559 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6558 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6557 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Blocal_r2_r[((((((c11 + int32((int64(t6562)*(int64)44))) + int32((int64(t6561)*(int64)88))) + int32((int64(t6560)*(int64)264))) + int32((int64(t6559)*(int64)528))) + int32((int64(t6558)*(int64)1584))) + int32((int64(t6557)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6579 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6578 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6577 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6576 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6575 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6574 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Blocal_r2_i[((((((c11 + int32((int64(t6579)*(int64)44))) + int32((int64(t6578)*(int64)88))) + int32((int64(t6577)*(int64)264))) + int32((int64(t6576)*(int64)528))) + int32((int64(t6575)*(int64)1584))) + int32((int64(t6574)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6596 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6595 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6594 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6593 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6592 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6591 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Bfirst_r2_r[((((((c11 + int32((int64(t6596)*(int64)44))) + int32((int64(t6595)*(int64)88))) + int32((int64(t6594)*(int64)264))) + int32((int64(t6593)*(int64)528))) + int32((int64(t6592)*(int64)1584))) + int32((int64(t6591)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6613 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6612 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6611 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6610 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6609 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6608 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Bfirst_r2_i[((((((c11 + int32((int64(t6613)*(int64)44))) + int32((int64(t6612)*(int64)88))) + int32((int64(t6611)*(int64)264))) + int32((int64(t6610)*(int64)528))) + int32((int64(t6609)*(int64)1584))) + int32((int64(t6608)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6630 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6629 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6628 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6627 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6626 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6625 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Bfirst_r2_r[((((((c11 + int32((int64(t6630)*(int64)44))) + int32((int64(t6629)*(int64)88))) + int32((int64(t6628)*(int64)264))) + int32((int64(t6627)*(int64)528))) + int32((int64(t6626)*(int64)1584))) + int32((int64(t6625)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6647 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6646 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6645 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6644 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6643 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6642 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Bfirst_r2_i[((((((c11 + int32((int64(t6647)*(int64)44))) + int32((int64(t6646)*(int64)88))) + int32((int64(t6645)*(int64)264))) + int32((int64(t6644)*(int64)528))) + int32((int64(t6643)*(int64)1584))) + int32((int64(t6642)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6664 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6663 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6662 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6661 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6660 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6659 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Bsecond_r2_r[((((((c11 + int32((int64(t6664)*(int64)44))) + int32((int64(t6663)*(int64)88))) + int32((int64(t6662)*(int64)264))) + int32((int64(t6661)*(int64)528))) + int32((int64(t6660)*(int64)1584))) + int32((int64(t6659)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6681 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6680 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6679 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6678 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6677 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6676 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Bsecond_r2_i[((((((c11 + int32((int64(t6681)*(int64)44))) + int32((int64(t6680)*(int64)88))) + int32((int64(t6679)*(int64)264))) + int32((int64(t6678)*(int64)528))) + int32((int64(t6677)*(int64)1584))) + int32((int64(t6676)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6698 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6697 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6696 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6695 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6694 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6693 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Bsecond_r2_r[((((((c11 + int32((int64(t6698)*(int64)44))) + int32((int64(t6697)*(int64)88))) + int32((int64(t6696)*(int64)264))) + int32((int64(t6695)*(int64)528))) + int32((int64(t6694)*(int64)1584))) + int32((int64(t6693)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6715 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6714 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6713 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6712 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6711 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6710 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Bsecond_r2_i[((((((c11 + int32((int64(t6715)*(int64)44))) + int32((int64(t6714)*(int64)88))) + int32((int64(t6713)*(int64)264))) + int32((int64(t6712)*(int64)528))) + int32((int64(t6711)*(int64)1584))) + int32((int64(t6710)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6732 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6731 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6730 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6729 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6728 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6727 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B1_Bthird_r2_r[((((((c11 + int32((int64(t6732)*(int64)44))) + int32((int64(t6731)*(int64)88))) + int32((int64(t6730)*(int64)264))) + int32((int64(t6729)*(int64)528))) + int32((int64(t6728)*(int64)1584))) + int32((int64(t6727)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 0) && (_snk_b_b23[((c17*6) + 3)] == 0)) && (_snk_b_b23[((c17*6) + 5)] == 1)))) {
                      let t6749 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6748 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6747 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6746 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6745 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6744 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B1_Bthird_r2_i[((((((c11 + int32((int64(t6749)*(int64)44))) + int32((int64(t6748)*(int64)88))) + int32((int64(t6747)*(int64)264))) + int32((int64(t6746)*(int64)528))) + int32((int64(t6745)*(int64)1584))) + int32((int64(t6744)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6766 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6765 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6764 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6763 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6762 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6761 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_r[0] = buf_flip_B2_Bthird_r2_r[((((((c11 + int32((int64(t6766)*(int64)44))) + int32((int64(t6765)*(int64)88))) + int32((int64(t6764)*(int64)264))) + int32((int64(t6763)*(int64)528))) + int32((int64(t6762)*(int64)1584))) + int32((int64(t6761)*(int64)3168)))]
                    }
                    if (((_src_spins_b20[(((c15*2) + (c9*4)) + 1)] == 2) && (((_snk_b_b23[((c17*6) + 1)] == 1) && (_snk_b_b23[((c17*6) + 3)] == 1)) && (_snk_b_b23[((c17*6) + 5)] == 0)))) {
                      let t6783 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6782 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 3)]
                      let t6781 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6780 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 5)]
                      let t6779 = _snk_spin_weights_b28[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      let t6778 = _snk_color_weights_b27[((((c19*6) + (c17*1728)) + (c13*62208)) + 1)]
                      buf_flip_BB_BB_new_term_b2_i[0] = buf_flip_B2_Bthird_r2_i[((((((c11 + int32((int64(t6783)*(int64)44))) + int32((int64(t6782)*(int64)88))) + int32((int64(t6781)*(int64)264))) + int32((int64(t6780)*(int64)528))) + int32((int64(t6779)*(int64)1584))) + int32((int64(t6778)*(int64)3168)))]
                    }
                    buf_C_BB_BB_prop_r[0] = (let t296 = ((float64(_sigs_b22[c17])*_snk_weights_b29[(c19 + (c13*288))])*_src_spin_block_weights_b21[(c15 + (c9*2))]) in (buf_C_BB_BB_prop_r[0] + (((((t296*buf_BB_BB_new_term_b1_r[0])*buf_BB_BB_new_term_b2_r[0]) - ((t296*buf_BB_BB_new_term_b1_i[0])*buf_BB_BB_new_term_b2_i[0])) + (((t296*buf_flip_BB_BB_new_term_b1_r[0])*buf_flip_BB_BB_new_term_b2_r[0]) - ((t296*buf_flip_BB_BB_new_term_b1_i[0])*buf_flip_BB_BB_new_term_b2_i[0])))*0.500000)))
                    buf_C_BB_BB_prop_i[0] = (let t297 = ((float64(_sigs_b22[c17])*_snk_weights_b29[(c19 + (c13*288))])*_src_spin_block_weights_b21[(c15 + (c9*2))]) in (buf_C_BB_BB_prop_i[0] + (((((t297*buf_BB_BB_new_term_b1_r[0])*buf_BB_BB_new_term_b2_i[0]) + ((t297*buf_BB_BB_new_term_b1_i[0])*buf_BB_BB_new_term_b2_r[0])) + (((t297*buf_flip_BB_BB_new_term_b1_r[0])*buf_flip_BB_BB_new_term_b2_i[0]) + ((t297*buf_flip_BB_BB_new_term_b1_i[0])*buf_flip_BB_BB_new_term_b2_r[0])))*0.500000)))
                  }
                }
              }
              for (c15, 0, 3) {
                buf_C_r[((((c15 + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] = (let t298 = ((c15 + (c7*3)) + (((c3*2) + c5)*12)) in (buf_C_r[((((c15 + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] + ((_snk_psi_r_b18[t298]*buf_C_BB_BB_prop_r[0]) - (_snk_psi_i_b19[t298]*buf_C_BB_BB_prop_i[0]))))
                buf_C_i[((((c15 + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] = (let t299 = ((c15 + (c7*3)) + (((c3*2) + c5)*12)) in (buf_C_i[((((c15 + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] + ((_snk_psi_r_b18[t299]*buf_C_BB_BB_prop_i[0]) + (_snk_psi_i_b19[t299]*buf_C_BB_BB_prop_r[0]))))
              }
              for (c15, 0, 41) {
                buf_C_r[((((int32((int64(c15) + (int64)3)) + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] = (let t300 = (c15 + (((c3*2) + c5)*44)) in (let t301 = _snk_psi_B1_r_b10[(t300 + 3)] in (let t302 = (c15 + (c7*44)) in (let t303 = _snk_psi_B2_r_b12[(t302 + 3)] in (let t304 = _snk_psi_B1_i_b11[(t300 + 3)] in (let t305 = _snk_psi_B2_i_b13[(t302 + 3)] in (let t306 = _snk_psi_B1_r_b10[(t302 + 3)] in (let t307 = _snk_psi_B2_r_b12[(t300 + 3)] in (let t308 = _snk_psi_B1_i_b11[(t302 + 3)] in (let t309 = _snk_psi_B2_i_b13[(t300 + 3)] in (buf_C_r[((((int32((int64(c15) + (int64)3)) + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] + (((((t301*t303) - (t304*t305)) + ((t306*t307) - (t308*t309)))*buf_C_BB_BB_prop_r[0]) - ((((t301*t305) + (t304*t303)) + ((t306*t309) + (t308*t307)))*buf_C_BB_BB_prop_i[0])))))))))))))
                buf_C_i[((((int32((int64(c15) + (int64)3)) + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] = (let t310 = (c15 + (((c3*2) + c5)*44)) in (let t311 = _snk_psi_B1_r_b10[(t310 + 3)] in (let t312 = (c15 + (c7*44)) in (let t313 = _snk_psi_B2_r_b12[(t312 + 3)] in (let t314 = _snk_psi_B1_i_b11[(t310 + 3)] in (let t315 = _snk_psi_B2_i_b13[(t312 + 3)] in (let t316 = _snk_psi_B1_r_b10[(t312 + 3)] in (let t317 = _snk_psi_B2_r_b12[(t310 + 3)] in (let t318 = _snk_psi_B1_i_b11[(t312 + 3)] in (let t319 = _snk_psi_B2_i_b13[(t310 + 3)] in (buf_C_i[((((int32((int64(c15) + (int64)3)) + int32((int64(c13)*(int64)45))) + int32((int64(c11)*(int64)180))) + int32((int64(c9)*(int64)8100))) + int32((int64(c3)*(int64)32400)))] + (((((t311*t313) - (t314*t315)) + ((t316*t317) - (t318*t319)))*buf_C_BB_BB_prop_i[0]) + ((((t311*t315) + (t314*t313)) + ((t316*t319) + (t318*t317)))*buf_C_BB_BB_prop_r[0])))))))))))))
              }
            }
          }
        }
      }
    }
  }
  free buf_flip_BB_BB_new_term_b2_r
  free buf_flip_BB_BB_new_term_b2_i
  free buf_flip_BB_BB_new_term_b1_r
  free buf_flip_BB_BB_new_term_b1_i
  free buf_flip_B2_Bthird_r2_r
  free buf_flip_B2_Bthird_r2_i
  free buf_flip_B2_Bthird_r1_r
  free buf_flip_B2_Bthird_r1_i
  free buf_flip_B2_Bsecond_r2_r
  free buf_flip_B2_Bsecond_r2_i
  free buf_flip_B2_Bsecond_r1_r
  free buf_flip_B2_Bsecond_r1_i
  free buf_flip_B2_Blocal_r2_r
  free buf_flip_B2_Blocal_r2_i
  free buf_flip_B2_Blocal_r1_r
  free buf_flip_B2_Blocal_r1_i
  free buf_flip_B2_Bfirst_r2_r
  free buf_flip_B2_Bfirst_r2_i
  free buf_flip_B2_Bfirst_r1_r
  free buf_flip_B2_Bfirst_r1_i
  free buf_flip_B1_Bthird_r2_r
  free buf_flip_B1_Bthird_r2_i
  free buf_flip_B1_Bthird_r1_r
  free buf_flip_B1_Bthird_r1_i
  free buf_flip_B1_Bsecond_r2_r
  free buf_flip_B1_Bsecond_r2_i
  free buf_flip_B1_Bsecond_r1_r
  free buf_flip_B1_Bsecond_r1_i
  free buf_flip_B1_Blocal_r2_r
  free buf_flip_B1_Blocal_r2_i
  free buf_flip_B1_Blocal_r1_r
  free buf_flip_B1_Blocal_r1_i
  free buf_flip_B1_Bfirst_r2_r
  free buf_flip_B1_Bfirst_r2_i
  free buf_flip_B1_Bfirst_r1_r
  free buf_flip_B1_Bfirst_r1_i
  free buf_C_BB_BB_prop_r
  free buf_C_BB_BB_prop_i
  free buf_BB_BB_new_term_b2_r
  free buf_BB_BB_new_term_b2_i
  free buf_BB_BB_new_term_b1_r
  free buf_BB_BB_new_term_b1_i
  free buf_B2_Bthird_r2_r
  free buf_B2_Bthird_r2_i
  free buf_B2_Bthird_r1_r
  free buf_B2_Bthird_r1_i
  free buf_B2_Bthird_props_r2_r
  free buf_B2_Bthird_props_r2_i
  free buf_B2_Bthird_props_r1_r
  free buf_B2_Bthird_props_r1_i
  free buf_B2_Bthird_diquark_r2_r
  free buf_B2_Bthird_diquark_r2_i
  free buf_B2_Bthird_diquark_r1_r
  free buf_B2_Bthird_diquark_r1_i
  free buf_B2_Bsecond_r2_r
  free buf_B2_Bsecond_r2_i
  free buf_B2_Bsecond_r1_r
  free buf_B2_Bsecond_r1_i
  free buf_B2_Bsecond_props_r2_r
  free buf_B2_Bsecond_props_r2_i
  free buf_B2_Bsecond_props_r1_r
  free buf_B2_Bsecond_props_r1_i
  free buf_B2_Blocal_r2_r
  free buf_B2_Blocal_r2_i
  free buf_B2_Blocal_r1_r
  free buf_B2_Blocal_r1_i
  free buf_B2_Blocal_props_r2_r
  free buf_B2_Blocal_props_r2_i
  free buf_B2_Blocal_props_r1_r
  free buf_B2_Blocal_props_r1_i
  free buf_B2_Blocal_diquark_r2_r
  free buf_B2_Blocal_diquark_r2_i
  free buf_B2_Blocal_diquark_r1_r
  free buf_B2_Blocal_diquark_r1_i
  free buf_B2_Bfirst_r2_r
  free buf_B2_Bfirst_r2_i
  free buf_B2_Bfirst_r1_r
  free buf_B2_Bfirst_r1_i
  free buf_B2_Bfirst_props_r2_r
  free buf_B2_Bfirst_props_r2_i
  free buf_B2_Bfirst_props_r1_r
  free buf_B2_Bfirst_props_r1_i
  free buf_B2_Bfirst_diquark_r2_r
  free buf_B2_Bfirst_diquark_r2_i
  free buf_B2_Bfirst_diquark_r1_r
  free buf_B2_Bfirst_diquark_r1_i
  free buf_B1_Bthird_r2_r
  free buf_B1_Bthird_r2_i
  free buf_B1_Bthird_r1_r
  free buf_B1_Bthird_r1_i
  free buf_B1_Bthird_props_r2_r
  free buf_B1_Bthird_props_r2_i
  free buf_B1_Bthird_props_r1_r
  free buf_B1_Bthird_props_r1_i
  free buf_B1_Bthird_diquark_r2_r
  free buf_B1_Bthird_diquark_r2_i
  free buf_B1_Bthird_diquark_r1_r
  free buf_B1_Bthird_diquark_r1_i
  free buf_B1_Bsecond_r2_r
  free buf_B1_Bsecond_r2_i
  free buf_B1_Bsecond_r1_r
  free buf_B1_Bsecond_r1_i
  free buf_B1_Bsecond_props_r2_r
  free buf_B1_Bsecond_props_r2_i
  free buf_B1_Bsecond_props_r1_r
  free buf_B1_Bsecond_props_r1_i
  free buf_B1_Blocal_r2_r
  free buf_B1_Blocal_r2_i
  free buf_B1_Blocal_r1_r
  free buf_B1_Blocal_r1_i
  free buf_B1_Blocal_props_r2_r
  free buf_B1_Blocal_props_r2_i
  free buf_B1_Blocal_props_r1_r
  free buf_B1_Blocal_props_r1_i
  free buf_B1_Blocal_diquark_r2_r
  free buf_B1_Blocal_diquark_r2_i
  free buf_B1_Blocal_diquark_r1_r
  free buf_B1_Blocal_diquark_r1_i
  free buf_B1_Bfirst_r2_r
  free buf_B1_Bfirst_r2_i
  free buf_B1_Bfirst_r1_r
  free buf_B1_Bfirst_r1_i
  free buf_B1_Bfirst_props_r2_r
  free buf_B1_Bfirst_props_r2_i
  free buf_B1_Bfirst_props_r1_r
  free buf_B1_Bfirst_props_r1_i
  free buf_B1_Bfirst_diquark_r2_r
  free buf_B1_Bfirst_diquark_r2_i
  free buf_B1_Bfirst_diquark_r1_r
  free buf_B1_Bfirst_diquark_r1_i
  parallel (c3, 0, 2) {
    for (c5, 0, 2) {
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_src_B1_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_src_B1_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B1_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B1_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_src_B1_Blocal_props_r1_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_src_B1_Blocal_props_r1_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t3206 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3205 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3204 = _src_spin_weights_b25[(c17*3)]
                  let t3203 = _src_color_weights_b24[(c17*3)]
                  let t3202 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3201 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3200 = _src_spin_weights_b25[(c17*3)]
                  let t3199 = _src_color_weights_b24[(c17*3)]
                  buf_src_B1_Blocal_diquark_r1_r[0] = (let t320 = (c15 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t320 + (t3200*16)) + (t3199*32)) + (c9*96)) + (c7*192))]*_B1_prop_r_b2[(((((t320 + (t3202*16)) + (t3201*32)) + (c13*96)) + (c11*192)) + 1152)]) - (_B1_prop_i_b3[((((t320 + (t3204*16)) + (t3203*32)) + (c9*96)) + (c7*192))]*_B1_prop_i_b3[(((((t320 + (t3206*16)) + (t3205*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[c17]))
                  let t3224 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3223 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3222 = _src_spin_weights_b25[(c17*3)]
                  let t3221 = _src_color_weights_b24[(c17*3)]
                  let t3220 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3219 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3218 = _src_spin_weights_b25[(c17*3)]
                  let t3217 = _src_color_weights_b24[(c17*3)]
                  buf_src_B1_Blocal_diquark_r1_i[0] = (let t321 = (c15 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t321 + (t3218*16)) + (t3217*32)) + (c9*96)) + (c7*192))]*_B1_prop_i_b3[(((((t321 + (t3220*16)) + (t3219*32)) + (c13*96)) + (c11*192)) + 1152)]) + (_B1_prop_i_b3[((((t321 + (t3222*16)) + (t3221*32)) + (c9*96)) + (c7*192))]*_B1_prop_r_b2[(((((t321 + (t3224*16)) + (t3223*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[c17]))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t3238 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3237 = _src_color_weights_b24[((c17*3) + 1)]
                      let t3236 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3235 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_src_B1_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t322 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B1_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((((t322 + (t3236*16)) + (t3235*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r1_r[0]) - (_B1_prop_i_b3[(((((t322 + (t3238*16)) + (t3237*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r1_i[0]))))
                      let t3254 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3253 = _src_color_weights_b24[((c17*3) + 1)]
                      let t3252 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3251 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_src_B1_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t323 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B1_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((((t323 + (t3252*16)) + (t3251*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r1_i[0]) + (_B1_prop_i_b3[(((((t323 + (t3254*16)) + (t3253*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r1_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_src_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t324 = (c21 + (c15*44)) in (let t325 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t324]*buf_src_B1_Blocal_props_r1_r[t325]) - (_src_psi_B1_i_b7[t324]*buf_src_B1_Blocal_props_r1_i[t325])))))
                      buf_src_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t326 = (c21 + (c15*44)) in (let t327 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t326]*buf_src_B1_Blocal_props_r1_i[t327]) + (_src_psi_B1_i_b7[t326]*buf_src_B1_Blocal_props_r1_r[t327])))))
                      buf_flip_src_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t328 = (c21 + (c15*44)) in (let t329 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t328]*buf_src_B1_Blocal_props_r1_r[t329]) - (_src_psi_B2_i_b9[t328]*buf_src_B1_Blocal_props_r1_i[t329])))))
                      buf_flip_src_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t330 = (c21 + (c15*44)) in (let t331 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t330]*buf_src_B1_Blocal_props_r1_i[t331]) + (_src_psi_B2_i_b9[t330]*buf_src_B1_Blocal_props_r1_r[t331])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_src_B1_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_src_B1_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B1_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B1_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_src_B1_Blocal_props_r2_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_src_B1_Blocal_props_r2_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t3388 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3387 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3386 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3385 = _src_color_weights_b24[((c17*3) + 36)]
                  let t3384 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3383 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3382 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3381 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_src_B1_Blocal_diquark_r2_r[0] = (let t332 = (c15 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t332 + (t3382*16)) + (t3381*32)) + (c9*96)) + (c7*192))]*_B1_prop_r_b2[(((((t332 + (t3384*16)) + (t3383*32)) + (c13*96)) + (c11*192)) + 1152)]) - (_B1_prop_i_b3[((((t332 + (t3386*16)) + (t3385*32)) + (c9*96)) + (c7*192))]*_B1_prop_i_b3[(((((t332 + (t3388*16)) + (t3387*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))
                  let t3406 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3405 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3404 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3403 = _src_color_weights_b24[((c17*3) + 36)]
                  let t3402 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3401 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3400 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3399 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_src_B1_Blocal_diquark_r2_i[0] = (let t333 = (c15 + (((c3*2) + c5)*4)) in (((_B1_prop_r_b2[((((t333 + (t3400*16)) + (t3399*32)) + (c9*96)) + (c7*192))]*_B1_prop_i_b3[(((((t333 + (t3402*16)) + (t3401*32)) + (c13*96)) + (c11*192)) + 1152)]) + (_B1_prop_i_b3[((((t333 + (t3404*16)) + (t3403*32)) + (c9*96)) + (c7*192))]*_B1_prop_r_b2[(((((t333 + (t3406*16)) + (t3405*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t3420 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3419 = _src_color_weights_b24[((c17*3) + 37)]
                      let t3418 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3417 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_src_B1_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t334 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B1_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((((t334 + (t3418*16)) + (t3417*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r2_r[0]) - (_B1_prop_i_b3[(((((t334 + (t3420*16)) + (t3419*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r2_i[0]))))
                      let t3436 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3435 = _src_color_weights_b24[((c17*3) + 37)]
                      let t3434 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3433 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_src_B1_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t335 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B1_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((((t335 + (t3434*16)) + (t3433*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r2_i[0]) + (_B1_prop_i_b3[(((((t335 + (t3436*16)) + (t3435*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B1_Blocal_diquark_r2_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_src_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t336 = (c21 + (c15*44)) in (let t337 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t336]*buf_src_B1_Blocal_props_r2_r[t337]) - (_src_psi_B1_i_b7[t336]*buf_src_B1_Blocal_props_r2_i[t337])))))
                      buf_src_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t338 = (c21 + (c15*44)) in (let t339 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t338]*buf_src_B1_Blocal_props_r2_i[t339]) + (_src_psi_B1_i_b7[t338]*buf_src_B1_Blocal_props_r2_r[t339])))))
                      buf_flip_src_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t340 = (c21 + (c15*44)) in (let t341 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t340]*buf_src_B1_Blocal_props_r2_r[t341]) - (_src_psi_B2_i_b9[t340]*buf_src_B1_Blocal_props_r2_i[t341])))))
                      buf_flip_src_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t342 = (c21 + (c15*44)) in (let t343 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t342]*buf_src_B1_Blocal_props_r2_i[t343]) + (_src_psi_B2_i_b9[t342]*buf_src_B1_Blocal_props_r2_r[t343])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_src_B2_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_src_B2_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B2_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B2_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_src_B2_Blocal_props_r1_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_src_B2_Blocal_props_r1_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t3570 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3569 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3568 = _src_spin_weights_b25[(c17*3)]
                  let t3567 = _src_color_weights_b24[(c17*3)]
                  let t3566 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3565 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3564 = _src_spin_weights_b25[(c17*3)]
                  let t3563 = _src_color_weights_b24[(c17*3)]
                  buf_src_B2_Blocal_diquark_r1_r[0] = (let t344 = (c15 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t344 + (t3564*16)) + (t3563*32)) + (c9*96)) + (c7*192))]*_B2_prop_r_b4[(((((t344 + (t3566*16)) + (t3565*32)) + (c13*96)) + (c11*192)) + 1152)]) - (_B2_prop_i_b5[((((t344 + (t3568*16)) + (t3567*32)) + (c9*96)) + (c7*192))]*_B2_prop_i_b5[(((((t344 + (t3570*16)) + (t3569*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[c17]))
                  let t3588 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3587 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3586 = _src_spin_weights_b25[(c17*3)]
                  let t3585 = _src_color_weights_b24[(c17*3)]
                  let t3584 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3583 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3582 = _src_spin_weights_b25[(c17*3)]
                  let t3581 = _src_color_weights_b24[(c17*3)]
                  buf_src_B2_Blocal_diquark_r1_i[0] = (let t345 = (c15 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t345 + (t3582*16)) + (t3581*32)) + (c9*96)) + (c7*192))]*_B2_prop_i_b5[(((((t345 + (t3584*16)) + (t3583*32)) + (c13*96)) + (c11*192)) + 1152)]) + (_B2_prop_i_b5[((((t345 + (t3586*16)) + (t3585*32)) + (c9*96)) + (c7*192))]*_B2_prop_r_b4[(((((t345 + (t3588*16)) + (t3587*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[c17]))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t3602 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3601 = _src_color_weights_b24[((c17*3) + 1)]
                      let t3600 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3599 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_src_B2_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t346 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B2_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((((t346 + (t3600*16)) + (t3599*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r1_r[0]) - (_B2_prop_i_b5[(((((t346 + (t3602*16)) + (t3601*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r1_i[0]))))
                      let t3618 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3617 = _src_color_weights_b24[((c17*3) + 1)]
                      let t3616 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3615 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_src_B2_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t347 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B2_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((((t347 + (t3616*16)) + (t3615*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r1_i[0]) + (_B2_prop_i_b5[(((((t347 + (t3618*16)) + (t3617*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r1_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_src_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t348 = (c21 + (c15*44)) in (let t349 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t348]*buf_src_B2_Blocal_props_r1_r[t349]) - (_src_psi_B2_i_b9[t348]*buf_src_B2_Blocal_props_r1_i[t349])))))
                      buf_src_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t350 = (c21 + (c15*44)) in (let t351 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t350]*buf_src_B2_Blocal_props_r1_i[t351]) + (_src_psi_B2_i_b9[t350]*buf_src_B2_Blocal_props_r1_r[t351])))))
                      buf_flip_src_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t352 = (c21 + (c15*44)) in (let t353 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t352]*buf_src_B2_Blocal_props_r1_r[t353]) - (_src_psi_B1_i_b7[t352]*buf_src_B2_Blocal_props_r1_i[t353])))))
                      buf_flip_src_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t354 = (c21 + (c15*44)) in (let t355 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t354]*buf_src_B2_Blocal_props_r1_i[t355]) + (_src_psi_B1_i_b7[t354]*buf_src_B2_Blocal_props_r1_r[t355])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_src_B2_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_src_B2_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B2_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_src_B2_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_src_B2_Blocal_props_r2_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_src_B2_Blocal_props_r2_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t3752 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3751 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3750 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3749 = _src_color_weights_b24[((c17*3) + 36)]
                  let t3748 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3747 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3746 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3745 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_src_B2_Blocal_diquark_r2_r[0] = (let t356 = (c15 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t356 + (t3746*16)) + (t3745*32)) + (c9*96)) + (c7*192))]*_B2_prop_r_b4[(((((t356 + (t3748*16)) + (t3747*32)) + (c13*96)) + (c11*192)) + 1152)]) - (_B2_prop_i_b5[((((t356 + (t3750*16)) + (t3749*32)) + (c9*96)) + (c7*192))]*_B2_prop_i_b5[(((((t356 + (t3752*16)) + (t3751*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))
                  let t3770 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3769 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3768 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3767 = _src_color_weights_b24[((c17*3) + 36)]
                  let t3766 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t3765 = _src_color_weights_b24[((c17*3) + 38)]
                  let t3764 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t3763 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_src_B2_Blocal_diquark_r2_i[0] = (let t357 = (c15 + (((c3*2) + c5)*4)) in (((_B2_prop_r_b4[((((t357 + (t3764*16)) + (t3763*32)) + (c9*96)) + (c7*192))]*_B2_prop_i_b5[(((((t357 + (t3766*16)) + (t3765*32)) + (c13*96)) + (c11*192)) + 1152)]) + (_B2_prop_i_b5[((((t357 + (t3768*16)) + (t3767*32)) + (c9*96)) + (c7*192))]*_B2_prop_r_b4[(((((t357 + (t3770*16)) + (t3769*32)) + (c13*96)) + (c11*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t3784 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3783 = _src_color_weights_b24[((c17*3) + 37)]
                      let t3782 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3781 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_src_B2_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t358 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B2_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((((t358 + (t3782*16)) + (t3781*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r2_r[0]) - (_B2_prop_i_b5[(((((t358 + (t3784*16)) + (t3783*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r2_i[0]))))
                      let t3800 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3799 = _src_color_weights_b24[((c17*3) + 37)]
                      let t3798 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t3797 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_src_B2_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t359 = (c15 + (((c3*2) + c5)*4)) in (buf_src_B2_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((((t359 + (t3798*16)) + (t3797*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r2_i[0]) + (_B2_prop_i_b5[(((((t359 + (t3800*16)) + (t3799*32)) + (c21*96)) + (c19*192)) + 576)]*buf_src_B2_Blocal_diquark_r2_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_src_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t360 = (c21 + (c15*44)) in (let t361 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t360]*buf_src_B2_Blocal_props_r2_r[t361]) - (_src_psi_B2_i_b9[t360]*buf_src_B2_Blocal_props_r2_i[t361])))))
                      buf_src_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t362 = (c21 + (c15*44)) in (let t363 = (c19 + int32((int64(c17)*(int64)2))) in (buf_src_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B2_r_b8[t362]*buf_src_B2_Blocal_props_r2_i[t363]) + (_src_psi_B2_i_b9[t362]*buf_src_B2_Blocal_props_r2_r[t363])))))
                      buf_flip_src_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t364 = (c21 + (c15*44)) in (let t365 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t364]*buf_src_B2_Blocal_props_r2_r[t365]) - (_src_psi_B1_i_b7[t364]*buf_src_B2_Blocal_props_r2_i[t365])))))
                      buf_flip_src_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t366 = (c21 + (c15*44)) in (let t367 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_src_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_src_psi_B1_r_b6[t366]*buf_src_B2_Blocal_props_r2_i[t367]) + (_src_psi_B1_i_b7[t366]*buf_src_B2_Blocal_props_r2_r[t367])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 4) {
        for (c9, 0, 44) {
          for (c11, 0, 4) {
            buf_C_BB_H_prop_r[0] = 0.000000
            buf_C_BB_H_prop_i[0] = 0.000000
            for (c13, 0, 2) {
              for (c15, 0, 36) {
                for (c17, 0, 32) {
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t6872 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6871 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6870 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6869 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6868 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t6867 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_BB_H_new_term_b1_r[0] = buf_src_B1_Blocal_r1_r[((((((c9 + int32((int64(t6872)*(int64)44))) + int32((int64(t6871)*(int64)88))) + int32((int64(t6870)*(int64)264))) + int32((int64(t6869)*(int64)528))) + int32((int64(t6868)*(int64)1584))) + int32((int64(t6867)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t6888 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6887 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6886 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6885 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6884 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t6883 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_BB_H_new_term_b1_i[0] = buf_src_B1_Blocal_r1_i[((((((c9 + int32((int64(t6888)*(int64)44))) + int32((int64(t6887)*(int64)88))) + int32((int64(t6886)*(int64)264))) + int32((int64(t6885)*(int64)528))) + int32((int64(t6884)*(int64)1584))) + int32((int64(t6883)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t6904 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6903 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6902 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6901 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6900 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t6899 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_BB_H_new_term_b1_r[0] = buf_src_B1_Blocal_r2_r[((((((c9 + int32((int64(t6904)*(int64)44))) + int32((int64(t6903)*(int64)88))) + int32((int64(t6902)*(int64)264))) + int32((int64(t6901)*(int64)528))) + int32((int64(t6900)*(int64)1584))) + int32((int64(t6899)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t6920 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6919 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6918 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6917 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6916 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t6915 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_BB_H_new_term_b1_i[0] = buf_src_B1_Blocal_r2_i[((((((c9 + int32((int64(t6920)*(int64)44))) + int32((int64(t6919)*(int64)88))) + int32((int64(t6918)*(int64)264))) + int32((int64(t6917)*(int64)528))) + int32((int64(t6916)*(int64)1584))) + int32((int64(t6915)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t6936 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6935 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6934 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6933 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6932 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t6931 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_BB_H_new_term_b2_r[0] = buf_src_B2_Blocal_r1_r[((((((c9 + int32((int64(t6936)*(int64)44))) + int32((int64(t6935)*(int64)88))) + int32((int64(t6934)*(int64)264))) + int32((int64(t6933)*(int64)528))) + int32((int64(t6932)*(int64)1584))) + int32((int64(t6931)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t6952 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6951 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6950 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6949 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6948 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t6947 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_BB_H_new_term_b2_i[0] = buf_src_B2_Blocal_r1_i[((((((c9 + int32((int64(t6952)*(int64)44))) + int32((int64(t6951)*(int64)88))) + int32((int64(t6950)*(int64)264))) + int32((int64(t6949)*(int64)528))) + int32((int64(t6948)*(int64)1584))) + int32((int64(t6947)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t6968 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6967 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6966 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6965 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6964 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t6963 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_BB_H_new_term_b2_r[0] = buf_src_B2_Blocal_r2_r[((((((c9 + int32((int64(t6968)*(int64)44))) + int32((int64(t6967)*(int64)88))) + int32((int64(t6966)*(int64)264))) + int32((int64(t6965)*(int64)528))) + int32((int64(t6964)*(int64)1584))) + int32((int64(t6963)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t6984 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6983 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t6982 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6981 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t6980 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t6979 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_BB_H_new_term_b2_i[0] = buf_src_B2_Blocal_r2_i[((((((c9 + int32((int64(t6984)*(int64)44))) + int32((int64(t6983)*(int64)88))) + int32((int64(t6982)*(int64)264))) + int32((int64(t6981)*(int64)528))) + int32((int64(t6980)*(int64)1584))) + int32((int64(t6979)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t7000 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6999 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t6998 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6997 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t6996 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t6995 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_BB_H_new_term_b1_r[0] = buf_flip_src_B1_Blocal_r1_r[((((((c9 + int32((int64(t7000)*(int64)44))) + int32((int64(t6999)*(int64)88))) + int32((int64(t6998)*(int64)264))) + int32((int64(t6997)*(int64)528))) + int32((int64(t6996)*(int64)1584))) + int32((int64(t6995)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t7016 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7015 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7014 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7013 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7012 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7011 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_BB_H_new_term_b1_i[0] = buf_flip_src_B1_Blocal_r1_i[((((((c9 + int32((int64(t7016)*(int64)44))) + int32((int64(t7015)*(int64)88))) + int32((int64(t7014)*(int64)264))) + int32((int64(t7013)*(int64)528))) + int32((int64(t7012)*(int64)1584))) + int32((int64(t7011)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t7032 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7031 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7030 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7029 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7028 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7027 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_BB_H_new_term_b1_r[0] = buf_flip_src_B1_Blocal_r2_r[((((((c9 + int32((int64(t7032)*(int64)44))) + int32((int64(t7031)*(int64)88))) + int32((int64(t7030)*(int64)264))) + int32((int64(t7029)*(int64)528))) + int32((int64(t7028)*(int64)1584))) + int32((int64(t7027)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t7048 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7047 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7046 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7045 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7044 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7043 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_BB_H_new_term_b1_i[0] = buf_flip_src_B1_Blocal_r2_i[((((((c9 + int32((int64(t7048)*(int64)44))) + int32((int64(t7047)*(int64)88))) + int32((int64(t7046)*(int64)264))) + int32((int64(t7045)*(int64)528))) + int32((int64(t7044)*(int64)1584))) + int32((int64(t7043)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t7064 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7063 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7062 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7061 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7060 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7059 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_BB_H_new_term_b2_r[0] = buf_flip_src_B2_Blocal_r1_r[((((((c9 + int32((int64(t7064)*(int64)44))) + int32((int64(t7063)*(int64)88))) + int32((int64(t7062)*(int64)264))) + int32((int64(t7061)*(int64)528))) + int32((int64(t7060)*(int64)1584))) + int32((int64(t7059)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t7080 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7079 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7078 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7077 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7076 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7075 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_BB_H_new_term_b2_i[0] = buf_flip_src_B2_Blocal_r1_i[((((((c9 + int32((int64(t7080)*(int64)44))) + int32((int64(t7079)*(int64)88))) + int32((int64(t7078)*(int64)264))) + int32((int64(t7077)*(int64)528))) + int32((int64(t7076)*(int64)1584))) + int32((int64(t7075)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t7096 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7095 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7094 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7093 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7092 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7091 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_BB_H_new_term_b2_r[0] = buf_flip_src_B2_Blocal_r2_r[((((((c9 + int32((int64(t7096)*(int64)44))) + int32((int64(t7095)*(int64)88))) + int32((int64(t7094)*(int64)264))) + int32((int64(t7093)*(int64)528))) + int32((int64(t7092)*(int64)1584))) + int32((int64(t7091)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t7112 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7111 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7110 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7109 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7108 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7107 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_BB_H_new_term_b2_i[0] = buf_flip_src_B2_Blocal_r2_i[((((((c9 + int32((int64(t7112)*(int64)44))) + int32((int64(t7111)*(int64)88))) + int32((int64(t7110)*(int64)264))) + int32((int64(t7109)*(int64)528))) + int32((int64(t7108)*(int64)1584))) + int32((int64(t7107)*(int64)3168)))]
                  }
                  buf_C_BB_H_prop_r[0] = (let t368 = ((float64(_sigs_b22[c15])*_hex_snk_weights_b32[(c17 + (c11*32))])*_src_spin_block_weights_b21[(c13 + (c7*2))]) in (buf_C_BB_H_prop_r[0] + (((((t368*buf_BB_H_new_term_b1_r[0])*buf_BB_H_new_term_b2_r[0]) - ((t368*buf_BB_H_new_term_b1_i[0])*buf_BB_H_new_term_b2_i[0])) + (((t368*buf_flip_BB_H_new_term_b1_r[0])*buf_flip_BB_H_new_term_b2_r[0]) - ((t368*buf_flip_BB_H_new_term_b1_i[0])*buf_flip_BB_H_new_term_b2_i[0])))*0.500000)))
                  buf_C_BB_H_prop_i[0] = (let t369 = ((float64(_sigs_b22[c15])*_hex_snk_weights_b32[(c17 + (c11*32))])*_src_spin_block_weights_b21[(c13 + (c7*2))]) in (buf_C_BB_H_prop_i[0] + (((((t369*buf_BB_H_new_term_b1_r[0])*buf_BB_H_new_term_b2_i[0]) + ((t369*buf_BB_H_new_term_b1_i[0])*buf_BB_H_new_term_b2_r[0])) + (((t369*buf_flip_BB_H_new_term_b1_r[0])*buf_flip_BB_H_new_term_b2_i[0]) + ((t369*buf_flip_BB_H_new_term_b1_i[0])*buf_flip_BB_H_new_term_b2_r[0])))*0.500000)))
                }
              }
            }
            buf_C_r[((((int32((int64(c11)*(int64)45)) + int32((int64(c9)*(int64)180))) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 44)] = (buf_C_r[((((int32((int64(c11)*(int64)45)) + int32((int64(c9)*(int64)180))) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 44)] + ((_hex_snk_psi_r_b16[((c3*2) + c5)]*buf_C_BB_H_prop_r[0]) - (_hex_snk_psi_i_b17[((c3*2) + c5)]*buf_C_BB_H_prop_i[0])))
            buf_C_i[((((int32((int64(c11)*(int64)45)) + int32((int64(c9)*(int64)180))) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 44)] = (buf_C_i[((((int32((int64(c11)*(int64)45)) + int32((int64(c9)*(int64)180))) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 44)] + ((_hex_snk_psi_r_b16[((c3*2) + c5)]*buf_C_BB_H_prop_i[0]) + (_hex_snk_psi_i_b17[((c3*2) + c5)]*buf_C_BB_H_prop_r[0])))
          }
        }
      }
    }
  }
  free buf_src_B2_Blocal_r2_r
  free buf_src_B2_Blocal_r2_i
  free buf_src_B2_Blocal_r1_r
  free buf_src_B2_Blocal_r1_i
  free buf_src_B2_Blocal_props_r2_r
  free buf_src_B2_Blocal_props_r2_i
  free buf_src_B2_Blocal_props_r1_r
  free buf_src_B2_Blocal_props_r1_i
  free buf_src_B2_Blocal_diquark_r2_r
  free buf_src_B2_Blocal_diquark_r2_i
  free buf_src_B2_Blocal_diquark_r1_r
  free buf_src_B2_Blocal_diquark_r1_i
  free buf_src_B1_Blocal_r2_r
  free buf_src_B1_Blocal_r2_i
  free buf_src_B1_Blocal_r1_r
  free buf_src_B1_Blocal_r1_i
  free buf_src_B1_Blocal_props_r2_r
  free buf_src_B1_Blocal_props_r2_i
  free buf_src_B1_Blocal_props_r1_r
  free buf_src_B1_Blocal_props_r1_i
  free buf_src_B1_Blocal_diquark_r2_r
  free buf_src_B1_Blocal_diquark_r2_i
  free buf_src_B1_Blocal_diquark_r1_r
  free buf_src_B1_Blocal_diquark_r1_i
  free buf_flip_src_B2_Blocal_r2_r
  free buf_flip_src_B2_Blocal_r2_i
  free buf_flip_src_B2_Blocal_r1_r
  free buf_flip_src_B2_Blocal_r1_i
  free buf_flip_src_B1_Blocal_r2_r
  free buf_flip_src_B1_Blocal_r2_i
  free buf_flip_src_B1_Blocal_r1_r
  free buf_flip_src_B1_Blocal_r1_i
  free buf_flip_BB_H_new_term_b2_r
  free buf_flip_BB_H_new_term_b2_i
  free buf_flip_BB_H_new_term_b1_r
  free buf_flip_BB_H_new_term_b1_i
  free buf_C_BB_H_prop_r
  free buf_C_BB_H_prop_i
  free buf_BB_H_new_term_b2_r
  free buf_BB_H_new_term_b2_i
  free buf_BB_H_new_term_b1_r
  free buf_BB_H_new_term_b1_i
  parallel (c3, 0, 2) {
    for (c5, 0, 2) {
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_snk_B1_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_snk_B1_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B1_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B1_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_snk_B1_Blocal_props_r1_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_snk_B1_Blocal_props_r1_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t3934 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3933 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3932 = _src_spin_weights_b25[(c17*3)]
                  let t3931 = _src_color_weights_b24[(c17*3)]
                  let t3930 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3929 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3928 = _src_spin_weights_b25[(c17*3)]
                  let t3927 = _src_color_weights_b24[(c17*3)]
                  buf_snk_B1_Blocal_diquark_r1_r[0] = (let t372 = (((c3*2) + c5) + (c15*4)) in (let t373 = ((t372 + (c9*16)) + (c7*32)) in (let t374 = ((t372 + (c13*16)) + (c11*32)) in (((_B1_prop_r_b2[((t373 + (t3928*96)) + (t3927*192))]*_B1_prop_r_b2[(((t374 + (t3930*96)) + (t3929*192)) + 1152)]) - (_B1_prop_i_b3[((t373 + (t3932*96)) + (t3931*192))]*_B1_prop_i_b3[(((t374 + (t3934*96)) + (t3933*192)) + 1152)]))*_src_weights_b26[c17]))))
                  let t3952 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3951 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3950 = _src_spin_weights_b25[(c17*3)]
                  let t3949 = _src_color_weights_b24[(c17*3)]
                  let t3948 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t3947 = _src_color_weights_b24[((c17*3) + 2)]
                  let t3946 = _src_spin_weights_b25[(c17*3)]
                  let t3945 = _src_color_weights_b24[(c17*3)]
                  buf_snk_B1_Blocal_diquark_r1_i[0] = (let t375 = (((c3*2) + c5) + (c15*4)) in (let t376 = ((t375 + (c9*16)) + (c7*32)) in (let t377 = ((t375 + (c13*16)) + (c11*32)) in (((_B1_prop_r_b2[((t376 + (t3946*96)) + (t3945*192))]*_B1_prop_i_b3[(((t377 + (t3948*96)) + (t3947*192)) + 1152)]) + (_B1_prop_i_b3[((t376 + (t3950*96)) + (t3949*192))]*_B1_prop_r_b2[(((t377 + (t3952*96)) + (t3951*192)) + 1152)]))*_src_weights_b26[c17]))))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t3966 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3965 = _src_color_weights_b24[((c17*3) + 1)]
                      let t3964 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3963 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_snk_B1_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t378 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B1_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((t378 + (t3964*96)) + (t3963*192)) + 576)]*buf_snk_B1_Blocal_diquark_r1_r[0]) - (_B1_prop_i_b3[(((t378 + (t3966*96)) + (t3965*192)) + 576)]*buf_snk_B1_Blocal_diquark_r1_i[0]))))
                      let t3982 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3981 = _src_color_weights_b24[((c17*3) + 1)]
                      let t3980 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t3979 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_snk_B1_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t379 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B1_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((t379 + (t3980*96)) + (t3979*192)) + 576)]*buf_snk_B1_Blocal_diquark_r1_i[0]) + (_B1_prop_i_b3[(((t379 + (t3982*96)) + (t3981*192)) + 576)]*buf_snk_B1_Blocal_diquark_r1_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_snk_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t380 = (c21 + (c15*44)) in (let t381 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t380]*buf_snk_B1_Blocal_props_r1_r[t381]) - (_snk_psi_B1_i_b11[t380]*buf_snk_B1_Blocal_props_r1_i[t381])))))
                      buf_snk_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t382 = (c21 + (c15*44)) in (let t383 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t382]*buf_snk_B1_Blocal_props_r1_i[t383]) + (_snk_psi_B1_i_b11[t382]*buf_snk_B1_Blocal_props_r1_r[t383])))))
                      buf_flip_snk_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t384 = (c21 + (c15*44)) in (let t385 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B1_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t384]*buf_snk_B1_Blocal_props_r1_r[t385]) - (_snk_psi_B2_i_b13[t384]*buf_snk_B1_Blocal_props_r1_i[t385])))))
                      buf_flip_snk_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t386 = (c21 + (c15*44)) in (let t387 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B1_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t386]*buf_snk_B1_Blocal_props_r1_i[t387]) + (_snk_psi_B2_i_b13[t386]*buf_snk_B1_Blocal_props_r1_r[t387])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_snk_B1_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_snk_B1_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B1_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B1_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_snk_B1_Blocal_props_r2_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_snk_B1_Blocal_props_r2_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t4116 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4115 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4114 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4113 = _src_color_weights_b24[((c17*3) + 36)]
                  let t4112 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4111 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4110 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4109 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_snk_B1_Blocal_diquark_r2_r[0] = (let t388 = (((c3*2) + c5) + (c15*4)) in (let t389 = ((t388 + (c9*16)) + (c7*32)) in (let t390 = ((t388 + (c13*16)) + (c11*32)) in (((_B1_prop_r_b2[((t389 + (t4110*96)) + (t4109*192))]*_B1_prop_r_b2[(((t390 + (t4112*96)) + (t4111*192)) + 1152)]) - (_B1_prop_i_b3[((t389 + (t4114*96)) + (t4113*192))]*_B1_prop_i_b3[(((t390 + (t4116*96)) + (t4115*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))))
                  let t4134 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4133 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4132 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4131 = _src_color_weights_b24[((c17*3) + 36)]
                  let t4130 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4129 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4128 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4127 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_snk_B1_Blocal_diquark_r2_i[0] = (let t391 = (((c3*2) + c5) + (c15*4)) in (let t392 = ((t391 + (c9*16)) + (c7*32)) in (let t393 = ((t391 + (c13*16)) + (c11*32)) in (((_B1_prop_r_b2[((t392 + (t4128*96)) + (t4127*192))]*_B1_prop_i_b3[(((t393 + (t4130*96)) + (t4129*192)) + 1152)]) + (_B1_prop_i_b3[((t392 + (t4132*96)) + (t4131*192))]*_B1_prop_r_b2[(((t393 + (t4134*96)) + (t4133*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t4148 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4147 = _src_color_weights_b24[((c17*3) + 37)]
                      let t4146 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4145 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_snk_B1_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t394 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B1_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((t394 + (t4146*96)) + (t4145*192)) + 576)]*buf_snk_B1_Blocal_diquark_r2_r[0]) - (_B1_prop_i_b3[(((t394 + (t4148*96)) + (t4147*192)) + 576)]*buf_snk_B1_Blocal_diquark_r2_i[0]))))
                      let t4164 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4163 = _src_color_weights_b24[((c17*3) + 37)]
                      let t4162 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4161 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_snk_B1_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t395 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B1_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B1_prop_r_b2[(((t395 + (t4162*96)) + (t4161*192)) + 576)]*buf_snk_B1_Blocal_diquark_r2_i[0]) + (_B1_prop_i_b3[(((t395 + (t4164*96)) + (t4163*192)) + 576)]*buf_snk_B1_Blocal_diquark_r2_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_snk_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t396 = (c21 + (c15*44)) in (let t397 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t396]*buf_snk_B1_Blocal_props_r2_r[t397]) - (_snk_psi_B1_i_b11[t396]*buf_snk_B1_Blocal_props_r2_i[t397])))))
                      buf_snk_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t398 = (c21 + (c15*44)) in (let t399 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t398]*buf_snk_B1_Blocal_props_r2_i[t399]) + (_snk_psi_B1_i_b11[t398]*buf_snk_B1_Blocal_props_r2_r[t399])))))
                      buf_flip_snk_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t400 = (c21 + (c15*44)) in (let t401 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B1_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t400]*buf_snk_B1_Blocal_props_r2_r[t401]) - (_snk_psi_B2_i_b13[t400]*buf_snk_B1_Blocal_props_r2_i[t401])))))
                      buf_flip_snk_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t402 = (c21 + (c15*44)) in (let t403 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B1_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t402]*buf_snk_B1_Blocal_props_r2_i[t403]) + (_snk_psi_B2_i_b13[t402]*buf_snk_B1_Blocal_props_r2_r[t403])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_snk_B2_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_snk_B2_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B2_Blocal_r1_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B2_Blocal_r1_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_snk_B2_Blocal_props_r1_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_snk_B2_Blocal_props_r1_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t4298 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t4297 = _src_color_weights_b24[((c17*3) + 2)]
                  let t4296 = _src_spin_weights_b25[(c17*3)]
                  let t4295 = _src_color_weights_b24[(c17*3)]
                  let t4294 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t4293 = _src_color_weights_b24[((c17*3) + 2)]
                  let t4292 = _src_spin_weights_b25[(c17*3)]
                  let t4291 = _src_color_weights_b24[(c17*3)]
                  buf_snk_B2_Blocal_diquark_r1_r[0] = (let t404 = (((c3*2) + c5) + (c15*4)) in (let t405 = ((t404 + (c9*16)) + (c7*32)) in (let t406 = ((t404 + (c13*16)) + (c11*32)) in (((_B2_prop_r_b4[((t405 + (t4292*96)) + (t4291*192))]*_B2_prop_r_b4[(((t406 + (t4294*96)) + (t4293*192)) + 1152)]) - (_B2_prop_i_b5[((t405 + (t4296*96)) + (t4295*192))]*_B2_prop_i_b5[(((t406 + (t4298*96)) + (t4297*192)) + 1152)]))*_src_weights_b26[c17]))))
                  let t4316 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t4315 = _src_color_weights_b24[((c17*3) + 2)]
                  let t4314 = _src_spin_weights_b25[(c17*3)]
                  let t4313 = _src_color_weights_b24[(c17*3)]
                  let t4312 = _src_spin_weights_b25[((c17*3) + 2)]
                  let t4311 = _src_color_weights_b24[((c17*3) + 2)]
                  let t4310 = _src_spin_weights_b25[(c17*3)]
                  let t4309 = _src_color_weights_b24[(c17*3)]
                  buf_snk_B2_Blocal_diquark_r1_i[0] = (let t407 = (((c3*2) + c5) + (c15*4)) in (let t408 = ((t407 + (c9*16)) + (c7*32)) in (let t409 = ((t407 + (c13*16)) + (c11*32)) in (((_B2_prop_r_b4[((t408 + (t4310*96)) + (t4309*192))]*_B2_prop_i_b5[(((t409 + (t4312*96)) + (t4311*192)) + 1152)]) + (_B2_prop_i_b5[((t408 + (t4314*96)) + (t4313*192))]*_B2_prop_r_b4[(((t409 + (t4316*96)) + (t4315*192)) + 1152)]))*_src_weights_b26[c17]))))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t4330 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t4329 = _src_color_weights_b24[((c17*3) + 1)]
                      let t4328 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t4327 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_snk_B2_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t410 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B2_Blocal_props_r1_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((t410 + (t4328*96)) + (t4327*192)) + 576)]*buf_snk_B2_Blocal_diquark_r1_r[0]) - (_B2_prop_i_b5[(((t410 + (t4330*96)) + (t4329*192)) + 576)]*buf_snk_B2_Blocal_diquark_r1_i[0]))))
                      let t4346 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t4345 = _src_color_weights_b24[((c17*3) + 1)]
                      let t4344 = _src_spin_weights_b25[((c17*3) + 1)]
                      let t4343 = _src_color_weights_b24[((c17*3) + 1)]
                      buf_snk_B2_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t411 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B2_Blocal_props_r1_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((t411 + (t4344*96)) + (t4343*192)) + 576)]*buf_snk_B2_Blocal_diquark_r1_i[0]) + (_B2_prop_i_b5[(((t411 + (t4346*96)) + (t4345*192)) + 576)]*buf_snk_B2_Blocal_diquark_r1_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_snk_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t412 = (c21 + (c15*44)) in (let t413 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t412]*buf_snk_B2_Blocal_props_r1_r[t413]) - (_snk_psi_B2_i_b13[t412]*buf_snk_B2_Blocal_props_r1_i[t413])))))
                      buf_snk_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t414 = (c21 + (c15*44)) in (let t415 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t414]*buf_snk_B2_Blocal_props_r1_i[t415]) + (_snk_psi_B2_i_b13[t414]*buf_snk_B2_Blocal_props_r1_r[t415])))))
                      buf_flip_snk_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t416 = (c21 + (c15*44)) in (let t417 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B2_Blocal_r1_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t416]*buf_snk_B2_Blocal_props_r1_r[t417]) - (_snk_psi_B1_i_b11[t416]*buf_snk_B2_Blocal_props_r1_i[t417])))))
                      buf_flip_snk_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t418 = (c21 + (c15*44)) in (let t419 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B2_Blocal_r1_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t418]*buf_snk_B2_Blocal_props_r1_i[t419]) + (_snk_psi_B1_i_b11[t418]*buf_snk_B2_Blocal_props_r1_r[t419])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 3) {
                for (c17, 0, 2) {
                  for (c19, 0, 44) {
                    buf_snk_B2_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_snk_B2_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B2_Blocal_r2_r[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                  for (c19, 0, 44) {
                    buf_flip_snk_B2_Blocal_r2_i[((((((c19 + int32((int64(c17)*(int64)44))) + int32((int64(c15)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = 0.000000
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 3) {
        for (c9, 0, 2) {
          for (c11, 0, 3) {
            for (c13, 0, 2) {
              for (c15, 0, 4) {
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    buf_snk_B2_Blocal_props_r2_r[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                    buf_snk_B2_Blocal_props_r2_i[(c19 + int32((int64(c17)*(int64)2)))] = 0.000000
                  }
                }
                for (c17, 0, 12) {
                  let t4480 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4479 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4478 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4477 = _src_color_weights_b24[((c17*3) + 36)]
                  let t4476 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4475 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4474 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4473 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_snk_B2_Blocal_diquark_r2_r[0] = (let t420 = (((c3*2) + c5) + (c15*4)) in (let t421 = ((t420 + (c9*16)) + (c7*32)) in (let t422 = ((t420 + (c13*16)) + (c11*32)) in (((_B2_prop_r_b4[((t421 + (t4474*96)) + (t4473*192))]*_B2_prop_r_b4[(((t422 + (t4476*96)) + (t4475*192)) + 1152)]) - (_B2_prop_i_b5[((t421 + (t4478*96)) + (t4477*192))]*_B2_prop_i_b5[(((t422 + (t4480*96)) + (t4479*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))))
                  let t4498 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4497 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4496 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4495 = _src_color_weights_b24[((c17*3) + 36)]
                  let t4494 = _src_spin_weights_b25[((c17*3) + 38)]
                  let t4493 = _src_color_weights_b24[((c17*3) + 38)]
                  let t4492 = _src_spin_weights_b25[((c17*3) + 36)]
                  let t4491 = _src_color_weights_b24[((c17*3) + 36)]
                  buf_snk_B2_Blocal_diquark_r2_i[0] = (let t423 = (((c3*2) + c5) + (c15*4)) in (let t424 = ((t423 + (c9*16)) + (c7*32)) in (let t425 = ((t423 + (c13*16)) + (c11*32)) in (((_B2_prop_r_b4[((t424 + (t4492*96)) + (t4491*192))]*_B2_prop_i_b5[(((t425 + (t4494*96)) + (t4493*192)) + 1152)]) + (_B2_prop_i_b5[((t424 + (t4496*96)) + (t4495*192))]*_B2_prop_r_b4[(((t425 + (t4498*96)) + (t4497*192)) + 1152)]))*_src_weights_b26[(c17 + 12)]))))
                  for (c19, 0, 3) {
                    for (c21, 0, 2) {
                      let t4512 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4511 = _src_color_weights_b24[((c17*3) + 37)]
                      let t4510 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4509 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_snk_B2_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] = (let t426 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B2_Blocal_props_r2_r[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((t426 + (t4510*96)) + (t4509*192)) + 576)]*buf_snk_B2_Blocal_diquark_r2_r[0]) - (_B2_prop_i_b5[(((t426 + (t4512*96)) + (t4511*192)) + 576)]*buf_snk_B2_Blocal_diquark_r2_i[0]))))
                      let t4528 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4527 = _src_color_weights_b24[((c17*3) + 37)]
                      let t4526 = _src_spin_weights_b25[((c17*3) + 37)]
                      let t4525 = _src_color_weights_b24[((c17*3) + 37)]
                      buf_snk_B2_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] = (let t427 = (((((c3*2) + c5) + (c15*4)) + (c21*16)) + (c19*32)) in (buf_snk_B2_Blocal_props_r2_i[(c21 + int32((int64(c19)*(int64)2)))] + ((_B2_prop_r_b4[(((t427 + (t4526*96)) + (t4525*192)) + 576)]*buf_snk_B2_Blocal_diquark_r2_i[0]) + (_B2_prop_i_b5[(((t427 + (t4528*96)) + (t4527*192)) + 576)]*buf_snk_B2_Blocal_diquark_r2_r[0]))))
                    }
                  }
                }
                for (c17, 0, 3) {
                  for (c19, 0, 2) {
                    for (c21, 0, 44) {
                      buf_snk_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t428 = (c21 + (c15*44)) in (let t429 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t428]*buf_snk_B2_Blocal_props_r2_r[t429]) - (_snk_psi_B2_i_b13[t428]*buf_snk_B2_Blocal_props_r2_i[t429])))))
                      buf_flip_snk_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t430 = (c21 + (c15*44)) in (let t431 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B2_Blocal_r2_r[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t430]*buf_snk_B2_Blocal_props_r2_r[t431]) - (_snk_psi_B1_i_b11[t430]*buf_snk_B2_Blocal_props_r2_i[t431])))))
                      buf_flip_snk_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t432 = (c21 + (c15*44)) in (let t433 = (c19 + int32((int64(c17)*(int64)2))) in (buf_flip_snk_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B1_r_b10[t432]*buf_snk_B2_Blocal_props_r2_i[t433]) + (_snk_psi_B1_i_b11[t432]*buf_snk_B2_Blocal_props_r2_r[t433])))))
                      buf_snk_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] = (let t434 = (c21 + (c15*44)) in (let t435 = (c19 + int32((int64(c17)*(int64)2))) in (buf_snk_B2_Blocal_r2_i[((((((c21 + int32((int64(c19)*(int64)44))) + int32((int64(c17)*(int64)88))) + int32((int64(c13)*(int64)264))) + int32((int64(c11)*(int64)528))) + int32((int64(c9)*(int64)1584))) + int32((int64(c7)*(int64)3168)))] + ((_snk_psi_B2_r_b12[t434]*buf_snk_B2_Blocal_props_r2_i[t435]) + (_snk_psi_B2_i_b13[t434]*buf_snk_B2_Blocal_props_r2_r[t435])))))
                    }
                  }
                }
              }
            }
          }
        }
      }
      for (c7, 0, 4) {
        for (c9, 0, 44) {
          for (c11, 0, 4) {
            buf_C_H_BB_prop_r[0] = 0.000000
            buf_C_H_BB_prop_i[0] = 0.000000
            for (c13, 0, 2) {
              for (c15, 0, 36) {
                for (c17, 0, 32) {
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t7178 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7177 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7176 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7175 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7174 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7173 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_H_BB_new_term_b1_r[0] = buf_snk_B1_Blocal_r1_r[((((((c9 + int32((int64(t7178)*(int64)44))) + int32((int64(t7177)*(int64)88))) + int32((int64(t7176)*(int64)264))) + int32((int64(t7175)*(int64)528))) + int32((int64(t7174)*(int64)1584))) + int32((int64(t7173)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t7194 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7193 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7192 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7191 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7190 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7189 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_H_BB_new_term_b1_i[0] = buf_snk_B1_Blocal_r1_i[((((((c9 + int32((int64(t7194)*(int64)44))) + int32((int64(t7193)*(int64)88))) + int32((int64(t7192)*(int64)264))) + int32((int64(t7191)*(int64)528))) + int32((int64(t7190)*(int64)1584))) + int32((int64(t7189)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t7210 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7209 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7208 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7207 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7206 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7205 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_H_BB_new_term_b1_r[0] = buf_snk_B1_Blocal_r2_r[((((((c9 + int32((int64(t7210)*(int64)44))) + int32((int64(t7209)*(int64)88))) + int32((int64(t7208)*(int64)264))) + int32((int64(t7207)*(int64)528))) + int32((int64(t7206)*(int64)1584))) + int32((int64(t7205)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t7226 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7225 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7224 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7223 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7222 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7221 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_H_BB_new_term_b1_i[0] = buf_snk_B1_Blocal_r2_i[((((((c9 + int32((int64(t7226)*(int64)44))) + int32((int64(t7225)*(int64)88))) + int32((int64(t7224)*(int64)264))) + int32((int64(t7223)*(int64)528))) + int32((int64(t7222)*(int64)1584))) + int32((int64(t7221)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t7242 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7241 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7240 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7239 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7238 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7237 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_H_BB_new_term_b2_r[0] = buf_snk_B2_Blocal_r1_r[((((((c9 + int32((int64(t7242)*(int64)44))) + int32((int64(t7241)*(int64)88))) + int32((int64(t7240)*(int64)264))) + int32((int64(t7239)*(int64)528))) + int32((int64(t7238)*(int64)1584))) + int32((int64(t7237)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t7258 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7257 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7256 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7255 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7254 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7253 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_H_BB_new_term_b2_i[0] = buf_snk_B2_Blocal_r1_i[((((((c9 + int32((int64(t7258)*(int64)44))) + int32((int64(t7257)*(int64)88))) + int32((int64(t7256)*(int64)264))) + int32((int64(t7255)*(int64)528))) + int32((int64(t7254)*(int64)1584))) + int32((int64(t7253)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t7274 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7273 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7272 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7271 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7270 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7269 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_H_BB_new_term_b2_r[0] = buf_snk_B2_Blocal_r2_r[((((((c9 + int32((int64(t7274)*(int64)44))) + int32((int64(t7273)*(int64)88))) + int32((int64(t7272)*(int64)264))) + int32((int64(t7271)*(int64)528))) + int32((int64(t7270)*(int64)1584))) + int32((int64(t7269)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t7290 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7289 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7288 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7287 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7286 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7285 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_H_BB_new_term_b2_i[0] = buf_snk_B2_Blocal_r2_i[((((((c9 + int32((int64(t7290)*(int64)44))) + int32((int64(t7289)*(int64)88))) + int32((int64(t7288)*(int64)264))) + int32((int64(t7287)*(int64)528))) + int32((int64(t7286)*(int64)1584))) + int32((int64(t7285)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t7306 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7305 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7304 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7303 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7302 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7301 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_H_BB_new_term_b1_r[0] = buf_flip_snk_B1_Blocal_r1_r[((((((c9 + int32((int64(t7306)*(int64)44))) + int32((int64(t7305)*(int64)88))) + int32((int64(t7304)*(int64)264))) + int32((int64(t7303)*(int64)528))) + int32((int64(t7302)*(int64)1584))) + int32((int64(t7301)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 1)) {
                    let t7322 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7321 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7320 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7319 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7318 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7317 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_H_BB_new_term_b1_i[0] = buf_flip_snk_B1_Blocal_r1_i[((((((c9 + int32((int64(t7322)*(int64)44))) + int32((int64(t7321)*(int64)88))) + int32((int64(t7320)*(int64)264))) + int32((int64(t7319)*(int64)528))) + int32((int64(t7318)*(int64)1584))) + int32((int64(t7317)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t7338 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7337 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7336 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7335 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7334 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7333 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_H_BB_new_term_b1_r[0] = buf_flip_snk_B1_Blocal_r2_r[((((((c9 + int32((int64(t7338)*(int64)44))) + int32((int64(t7337)*(int64)88))) + int32((int64(t7336)*(int64)264))) + int32((int64(t7335)*(int64)528))) + int32((int64(t7334)*(int64)1584))) + int32((int64(t7333)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[((c13*2) + (c7*4))] == 2)) {
                    let t7354 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7353 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 2)]
                    let t7352 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7351 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 4)]
                    let t7350 = _hex_snk_spin_weights_b31[(((c17*6) + (c15*192)) + (c11*6912))]
                    let t7349 = _hex_snk_color_weights_b30[(((c17*6) + (c15*192)) + (c11*6912))]
                    buf_flip_H_BB_new_term_b1_i[0] = buf_flip_snk_B1_Blocal_r2_i[((((((c9 + int32((int64(t7354)*(int64)44))) + int32((int64(t7353)*(int64)88))) + int32((int64(t7352)*(int64)264))) + int32((int64(t7351)*(int64)528))) + int32((int64(t7350)*(int64)1584))) + int32((int64(t7349)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t7370 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7369 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7368 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7367 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7366 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7365 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_H_BB_new_term_b2_r[0] = buf_flip_snk_B2_Blocal_r1_r[((((((c9 + int32((int64(t7370)*(int64)44))) + int32((int64(t7369)*(int64)88))) + int32((int64(t7368)*(int64)264))) + int32((int64(t7367)*(int64)528))) + int32((int64(t7366)*(int64)1584))) + int32((int64(t7365)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 1)) {
                    let t7386 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7385 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7384 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7383 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7382 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7381 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_H_BB_new_term_b2_i[0] = buf_flip_snk_B2_Blocal_r1_i[((((((c9 + int32((int64(t7386)*(int64)44))) + int32((int64(t7385)*(int64)88))) + int32((int64(t7384)*(int64)264))) + int32((int64(t7383)*(int64)528))) + int32((int64(t7382)*(int64)1584))) + int32((int64(t7381)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t7402 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7401 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7400 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7399 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7398 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7397 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_H_BB_new_term_b2_r[0] = buf_flip_snk_B2_Blocal_r2_r[((((((c9 + int32((int64(t7402)*(int64)44))) + int32((int64(t7401)*(int64)88))) + int32((int64(t7400)*(int64)264))) + int32((int64(t7399)*(int64)528))) + int32((int64(t7398)*(int64)1584))) + int32((int64(t7397)*(int64)3168)))]
                  }
                  if ((_src_spins_b20[(((c13*2) + (c7*4)) + 1)] == 2)) {
                    let t7418 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7417 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 3)]
                    let t7416 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7415 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 5)]
                    let t7414 = _hex_snk_spin_weights_b31[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    let t7413 = _hex_snk_color_weights_b30[((((c17*6) + (c15*192)) + (c11*6912)) + 1)]
                    buf_flip_H_BB_new_term_b2_i[0] = buf_flip_snk_B2_Blocal_r2_i[((((((c9 + int32((int64(t7418)*(int64)44))) + int32((int64(t7417)*(int64)88))) + int32((int64(t7416)*(int64)264))) + int32((int64(t7415)*(int64)528))) + int32((int64(t7414)*(int64)1584))) + int32((int64(t7413)*(int64)3168)))]
                  }
                  buf_C_H_BB_prop_r[0] = (let t436 = ((float64(_sigs_b22[c15])*_hex_snk_weights_b32[(c17 + (c11*32))])*_src_spin_block_weights_b21[(c13 + (c7*2))]) in (buf_C_H_BB_prop_r[0] + (((((t436*buf_H_BB_new_term_b1_r[0])*buf_H_BB_new_term_b2_r[0]) - ((t436*buf_H_BB_new_term_b1_i[0])*buf_H_BB_new_term_b2_i[0])) + (((t436*buf_flip_H_BB_new_term_b1_r[0])*buf_flip_H_BB_new_term_b2_r[0]) - ((t436*buf_flip_H_BB_new_term_b1_i[0])*buf_flip_H_BB_new_term_b2_i[0])))*0.500000)))
                  buf_C_H_BB_prop_i[0] = (let t437 = ((float64(_sigs_b22[c15])*_hex_snk_weights_b32[(c17 + (c11*32))])*_src_spin_block_weights_b21[(c13 + (c7*2))]) in (buf_C_H_BB_prop_i[0] + (((((t437*buf_H_BB_new_term_b1_r[0])*buf_H_BB_new_term_b2_i[0]) + ((t437*buf_H_BB_new_term_b1_i[0])*buf_H_BB_new_term_b2_r[0])) + (((t437*buf_flip_H_BB_new_term_b1_r[0])*buf_flip_H_BB_new_term_b2_i[0]) + ((t437*buf_flip_H_BB_new_term_b1_i[0])*buf_flip_H_BB_new_term_b2_r[0])))*0.500000)))
                }
              }
            }
            buf_C_r[((((c9 + int32((int64(c7)*(int64)45))) + int32((int64(c11)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7920)] = (buf_C_r[((((c9 + int32((int64(c7)*(int64)45))) + int32((int64(c11)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7920)] + ((_hex_src_psi_r_b14[((c3*2) + c5)]*buf_C_H_BB_prop_r[0]) - (_hex_src_psi_i_b15[((c3*2) + c5)]*buf_C_H_BB_prop_i[0])))
            buf_C_i[((((c9 + int32((int64(c7)*(int64)45))) + int32((int64(c11)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7920)] = (buf_C_i[((((c9 + int32((int64(c7)*(int64)45))) + int32((int64(c11)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7920)] + ((_hex_src_psi_r_b14[((c3*2) + c5)]*buf_C_H_BB_prop_i[0]) + (_hex_src_psi_i_b15[((c3*2) + c5)]*buf_C_H_BB_prop_r[0])))
          }
        }
      }
    }
  }
  free buf_snk_B2_Blocal_r2_r
  free buf_snk_B2_Blocal_r2_i
  free buf_snk_B2_Blocal_r1_r
  free buf_snk_B2_Blocal_r1_i
  free buf_snk_B2_Blocal_props_r2_r
  free buf_snk_B2_Blocal_props_r2_i
  free buf_snk_B2_Blocal_props_r1_r
  free buf_snk_B2_Blocal_props_r1_i
  free buf_snk_B2_Blocal_diquark_r2_r
  free buf_snk_B2_Blocal_diquark_r2_i
  free buf_snk_B2_Blocal_diquark_r1_r
  free buf_snk_B2_Blocal_diquark_r1_i
  free buf_snk_B1_Blocal_r2_r
  free buf_snk_B1_Blocal_r2_i
  free buf_snk_B1_Blocal_r1_r
  free buf_snk_B1_Blocal_r1_i
  free buf_snk_B1_Blocal_props_r2_r
  free buf_snk_B1_Blocal_props_r2_i
  free buf_snk_B1_Blocal_props_r1_r
  free buf_snk_B1_Blocal_props_r1_i
  free buf_snk_B1_Blocal_diquark_r2_r
  free buf_snk_B1_Blocal_diquark_r2_i
  free buf_snk_B1_Blocal_diquark_r1_r
  free buf_snk_B1_Blocal_diquark_r1_i
  free buf_flip_snk_B2_Blocal_r2_r
  free buf_flip_snk_B2_Blocal_r2_i
  free buf_flip_snk_B2_Blocal_r1_r
  free buf_flip_snk_B2_Blocal_r1_i
  free buf_flip_snk_B1_Blocal_r2_r
  free buf_flip_snk_B1_Blocal_r2_i
  free buf_flip_snk_B1_Blocal_r1_r
  free buf_flip_snk_B1_Blocal_r1_i
  free buf_flip_H_BB_new_term_b2_r
  free buf_flip_H_BB_new_term_b2_i
  free buf_flip_H_BB_new_term_b1_r
  free buf_flip_H_BB_new_term_b1_i
  free buf_H_BB_new_term_b2_r
  free buf_H_BB_new_term_b2_i
  free buf_H_BB_new_term_b1_r
  free buf_H_BB_new_term_b1_i
  free buf_C_H_BB_prop_r
  free buf_C_H_BB_prop_i
  parallel (c3, 0, 2) {
    for (c5, 0, 2) {
      for (c7, 0, 4) {
        for (c9, 0, 4) {
          for (c11, 0, 4) {
            buf_C_H_H_prop_r[0] = 0.000000
            buf_C_H_H_prop_i[0] = 0.000000
            for (c13, 0, 36) {
              for (c15, 0, 32) {
                for (c17, 0, 32) {
                  let t7718 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7717 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7716 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7715 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7714 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7713 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7712 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7711 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7710 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7709 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7708 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7707 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7706 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7705 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7704 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7703 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7702 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7701 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7700 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7699 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7698 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7697 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7696 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7695 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7694 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7693 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7692 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7691 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7690 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7689 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7688 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7687 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7686 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7685 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7684 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7683 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7682 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7681 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7680 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7679 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7638 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7637 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7636 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7635 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7634 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7633 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7632 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7631 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7630 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7629 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7628 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7627 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7626 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7625 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7624 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7623 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7622 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7621 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7620 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7619 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7618 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7617 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7616 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7615 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7614 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7613 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7612 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7611 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7610 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7609 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7608 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7607 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7606 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7605 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7604 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7603 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7602 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7601 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7600 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7599 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7598 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7597 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7596 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7595 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7594 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7593 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7592 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7591 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7590 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7589 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7588 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7587 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7586 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7585 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7584 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7583 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7582 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7581 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7580 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7579 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7578 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7577 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7576 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7575 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7574 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7573 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7572 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7571 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7570 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7569 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7568 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7567 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7566 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7565 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7564 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7563 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7562 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7561 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7560 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7559 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7518 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7517 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7516 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7515 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7514 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7513 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7512 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7511 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7510 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7509 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7508 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7507 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7506 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7505 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7504 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7503 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7502 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7501 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7500 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7499 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7498 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7497 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7496 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7495 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7494 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7493 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7492 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7491 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7490 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7489 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7488 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7487 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7486 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7485 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7484 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7483 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7482 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7481 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7480 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7479 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  buf_C_H_H_prop_r[0] = (let t440 = ((float64(_sigs_b22[c13])*_hex_snk_weights_b32[(c15 + (c9*32))])*_hex_snk_weights_b32[(c17 + (c7*32))]) in (let t441 = (c11 + (((c3*2) + c5)*4)) in (buf_C_H_H_prop_r[0] + (((t440*((((_B1_prop_r_b2[((((t441 + (t7482*16)) + (t7481*32)) + (t7480*96)) + (t7479*192))]*_B1_prop_r_b2[(((((t441 + (t7486*16)) + (t7485*32)) + (t7484*96)) + (t7483*192)) + 1152)]) - (_B1_prop_i_b3[((((t441 + (t7490*16)) + (t7489*32)) + (t7488*96)) + (t7487*192))]*_B1_prop_i_b3[(((((t441 + (t7494*16)) + (t7493*32)) + (t7492*96)) + (t7491*192)) + 1152)]))*_B1_prop_r_b2[(((((t441 + (t7498*16)) + (t7497*32)) + (t7496*96)) + (t7495*192)) + 576)]) - (((_B1_prop_r_b2[((((t441 + (t7502*16)) + (t7501*32)) + (t7500*96)) + (t7499*192))]*_B1_prop_i_b3[(((((t441 + (t7506*16)) + (t7505*32)) + (t7504*96)) + (t7503*192)) + 1152)]) + (_B1_prop_i_b3[((((t441 + (t7510*16)) + (t7509*32)) + (t7508*96)) + (t7507*192))]*_B1_prop_r_b2[(((((t441 + (t7514*16)) + (t7513*32)) + (t7512*96)) + (t7511*192)) + 1152)]))*_B1_prop_i_b3[(((((t441 + (t7518*16)) + (t7517*32)) + (t7516*96)) + (t7515*192)) + 576)])))*((((_B2_prop_r_b4[((((t441 + (t7562*16)) + (t7561*32)) + (t7560*96)) + (t7559*192))]*_B2_prop_r_b4[(((((t441 + (t7566*16)) + (t7565*32)) + (t7564*96)) + (t7563*192)) + 1152)]) - (_B2_prop_i_b5[((((t441 + (t7570*16)) + (t7569*32)) + (t7568*96)) + (t7567*192))]*_B2_prop_i_b5[(((((t441 + (t7574*16)) + (t7573*32)) + (t7572*96)) + (t7571*192)) + 1152)]))*_B2_prop_r_b4[(((((t441 + (t7578*16)) + (t7577*32)) + (t7576*96)) + (t7575*192)) + 576)]) - (((_B2_prop_r_b4[((((t441 + (t7582*16)) + (t7581*32)) + (t7580*96)) + (t7579*192))]*_B2_prop_i_b5[(((((t441 + (t7586*16)) + (t7585*32)) + (t7584*96)) + (t7583*192)) + 1152)]) + (_B2_prop_i_b5[((((t441 + (t7590*16)) + (t7589*32)) + (t7588*96)) + (t7587*192))]*_B2_prop_r_b4[(((((t441 + (t7594*16)) + (t7593*32)) + (t7592*96)) + (t7591*192)) + 1152)]))*_B2_prop_i_b5[(((((t441 + (t7598*16)) + (t7597*32)) + (t7596*96)) + (t7595*192)) + 576)]))) - ((t440*((((_B1_prop_r_b2[((((t441 + (t7602*16)) + (t7601*32)) + (t7600*96)) + (t7599*192))]*_B1_prop_r_b2[(((((t441 + (t7606*16)) + (t7605*32)) + (t7604*96)) + (t7603*192)) + 1152)]) - (_B1_prop_i_b3[((((t441 + (t7610*16)) + (t7609*32)) + (t7608*96)) + (t7607*192))]*_B1_prop_i_b3[(((((t441 + (t7614*16)) + (t7613*32)) + (t7612*96)) + (t7611*192)) + 1152)]))*_B1_prop_i_b3[(((((t441 + (t7618*16)) + (t7617*32)) + (t7616*96)) + (t7615*192)) + 576)]) + (((_B1_prop_r_b2[((((t441 + (t7622*16)) + (t7621*32)) + (t7620*96)) + (t7619*192))]*_B1_prop_i_b3[(((((t441 + (t7626*16)) + (t7625*32)) + (t7624*96)) + (t7623*192)) + 1152)]) + (_B1_prop_i_b3[((((t441 + (t7630*16)) + (t7629*32)) + (t7628*96)) + (t7627*192))]*_B1_prop_r_b2[(((((t441 + (t7634*16)) + (t7633*32)) + (t7632*96)) + (t7631*192)) + 1152)]))*_B1_prop_r_b2[(((((t441 + (t7638*16)) + (t7637*32)) + (t7636*96)) + (t7635*192)) + 576)])))*((((_B2_prop_r_b4[((((t441 + (t7682*16)) + (t7681*32)) + (t7680*96)) + (t7679*192))]*_B2_prop_r_b4[(((((t441 + (t7686*16)) + (t7685*32)) + (t7684*96)) + (t7683*192)) + 1152)]) - (_B2_prop_i_b5[((((t441 + (t7690*16)) + (t7689*32)) + (t7688*96)) + (t7687*192))]*_B2_prop_i_b5[(((((t441 + (t7694*16)) + (t7693*32)) + (t7692*96)) + (t7691*192)) + 1152)]))*_B2_prop_i_b5[(((((t441 + (t7698*16)) + (t7697*32)) + (t7696*96)) + (t7695*192)) + 576)]) + (((_B2_prop_r_b4[((((t441 + (t7702*16)) + (t7701*32)) + (t7700*96)) + (t7699*192))]*_B2_prop_i_b5[(((((t441 + (t7706*16)) + (t7705*32)) + (t7704*96)) + (t7703*192)) + 1152)]) + (_B2_prop_i_b5[((((t441 + (t7710*16)) + (t7709*32)) + (t7708*96)) + (t7707*192))]*_B2_prop_r_b4[(((((t441 + (t7714*16)) + (t7713*32)) + (t7712*96)) + (t7711*192)) + 1152)]))*_B2_prop_r_b4[(((((t441 + (t7718*16)) + (t7717*32)) + (t7716*96)) + (t7715*192)) + 576)])))))))
                  let t7968 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7967 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7966 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7965 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7964 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7963 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7962 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7961 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7960 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7959 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7958 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7957 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7956 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7955 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7954 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7953 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7952 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7951 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7950 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7949 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7948 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7947 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7946 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7945 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7944 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7943 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7942 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7941 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7940 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7939 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7938 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7937 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7936 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7935 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7934 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7933 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7932 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7931 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7930 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7929 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7888 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7887 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7886 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7885 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7884 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7883 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7882 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7881 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7880 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7879 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7878 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7877 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7876 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7875 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7874 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7873 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7872 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7871 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7870 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7869 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7868 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7867 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7866 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7865 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7864 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7863 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7862 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7861 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7860 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7859 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7858 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7857 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7856 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7855 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7854 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7853 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7852 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7851 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7850 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7849 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7848 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7847 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7846 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7845 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7844 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7843 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7842 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7841 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7840 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7839 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7838 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7837 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7836 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7835 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7834 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7833 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7832 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7831 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7830 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7829 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7828 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 3)]
                  let t7827 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 3)]
                  let t7826 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7825 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 3)]
                  let t7824 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7823 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7822 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7821 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7820 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7819 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7818 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7817 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7816 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 5)]
                  let t7815 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 5)]
                  let t7814 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7813 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 5)]
                  let t7812 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 1)]
                  let t7811 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 1)]
                  let t7810 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7809 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 1)]
                  let t7768 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7767 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7766 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7765 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7764 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7763 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7762 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7761 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7760 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7759 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7758 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7757 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7756 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7755 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7754 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7753 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7752 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7751 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7750 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7749 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7748 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 2)]
                  let t7747 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 2)]
                  let t7746 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7745 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 2)]
                  let t7744 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7743 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7742 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7741 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7740 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7739 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7738 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7737 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7736 = _hex_snk_spin_weights_b31[(((c17*6) + (c7*6912)) + 4)]
                  let t7735 = _hex_snk_color_weights_b30[(((c17*6) + (c7*6912)) + 4)]
                  let t7734 = _hex_snk_spin_weights_b31[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7733 = _hex_snk_color_weights_b30[((((c15*6) + (c13*192)) + (c9*6912)) + 4)]
                  let t7732 = _hex_snk_spin_weights_b31[((c17*6) + (c7*6912))]
                  let t7731 = _hex_snk_color_weights_b30[((c17*6) + (c7*6912))]
                  let t7730 = _hex_snk_spin_weights_b31[(((c15*6) + (c13*192)) + (c9*6912))]
                  let t7729 = _hex_snk_color_weights_b30[(((c15*6) + (c13*192)) + (c9*6912))]
                  buf_C_H_H_prop_i[0] = (let t442 = ((float64(_sigs_b22[c13])*_hex_snk_weights_b32[(c15 + (c9*32))])*_hex_snk_weights_b32[(c17 + (c7*32))]) in (let t443 = (c11 + (((c3*2) + c5)*4)) in (buf_C_H_H_prop_i[0] + (((t442*((((_B1_prop_r_b2[((((t443 + (t7732*16)) + (t7731*32)) + (t7730*96)) + (t7729*192))]*_B1_prop_r_b2[(((((t443 + (t7736*16)) + (t7735*32)) + (t7734*96)) + (t7733*192)) + 1152)]) - (_B1_prop_i_b3[((((t443 + (t7740*16)) + (t7739*32)) + (t7738*96)) + (t7737*192))]*_B1_prop_i_b3[(((((t443 + (t7744*16)) + (t7743*32)) + (t7742*96)) + (t7741*192)) + 1152)]))*_B1_prop_r_b2[(((((t443 + (t7748*16)) + (t7747*32)) + (t7746*96)) + (t7745*192)) + 576)]) - (((_B1_prop_r_b2[((((t443 + (t7752*16)) + (t7751*32)) + (t7750*96)) + (t7749*192))]*_B1_prop_i_b3[(((((t443 + (t7756*16)) + (t7755*32)) + (t7754*96)) + (t7753*192)) + 1152)]) + (_B1_prop_i_b3[((((t443 + (t7760*16)) + (t7759*32)) + (t7758*96)) + (t7757*192))]*_B1_prop_r_b2[(((((t443 + (t7764*16)) + (t7763*32)) + (t7762*96)) + (t7761*192)) + 1152)]))*_B1_prop_i_b3[(((((t443 + (t7768*16)) + (t7767*32)) + (t7766*96)) + (t7765*192)) + 576)])))*((((_B2_prop_r_b4[((((t443 + (t7812*16)) + (t7811*32)) + (t7810*96)) + (t7809*192))]*_B2_prop_r_b4[(((((t443 + (t7816*16)) + (t7815*32)) + (t7814*96)) + (t7813*192)) + 1152)]) - (_B2_prop_i_b5[((((t443 + (t7820*16)) + (t7819*32)) + (t7818*96)) + (t7817*192))]*_B2_prop_i_b5[(((((t443 + (t7824*16)) + (t7823*32)) + (t7822*96)) + (t7821*192)) + 1152)]))*_B2_prop_i_b5[(((((t443 + (t7828*16)) + (t7827*32)) + (t7826*96)) + (t7825*192)) + 576)]) + (((_B2_prop_r_b4[((((t443 + (t7832*16)) + (t7831*32)) + (t7830*96)) + (t7829*192))]*_B2_prop_i_b5[(((((t443 + (t7836*16)) + (t7835*32)) + (t7834*96)) + (t7833*192)) + 1152)]) + (_B2_prop_i_b5[((((t443 + (t7840*16)) + (t7839*32)) + (t7838*96)) + (t7837*192))]*_B2_prop_r_b4[(((((t443 + (t7844*16)) + (t7843*32)) + (t7842*96)) + (t7841*192)) + 1152)]))*_B2_prop_r_b4[(((((t443 + (t7848*16)) + (t7847*32)) + (t7846*96)) + (t7845*192)) + 576)]))) + ((t442*((((_B1_prop_r_b2[((((t443 + (t7852*16)) + (t7851*32)) + (t7850*96)) + (t7849*192))]*_B1_prop_r_b2[(((((t443 + (t7856*16)) + (t7855*32)) + (t7854*96)) + (t7853*192)) + 1152)]) - (_B1_prop_i_b3[((((t443 + (t7860*16)) + (t7859*32)) + (t7858*96)) + (t7857*192))]*_B1_prop_i_b3[(((((t443 + (t7864*16)) + (t7863*32)) + (t7862*96)) + (t7861*192)) + 1152)]))*_B1_prop_i_b3[(((((t443 + (t7868*16)) + (t7867*32)) + (t7866*96)) + (t7865*192)) + 576)]) + (((_B1_prop_r_b2[((((t443 + (t7872*16)) + (t7871*32)) + (t7870*96)) + (t7869*192))]*_B1_prop_i_b3[(((((t443 + (t7876*16)) + (t7875*32)) + (t7874*96)) + (t7873*192)) + 1152)]) + (_B1_prop_i_b3[((((t443 + (t7880*16)) + (t7879*32)) + (t7878*96)) + (t7877*192))]*_B1_prop_r_b2[(((((t443 + (t7884*16)) + (t7883*32)) + (t7882*96)) + (t7881*192)) + 1152)]))*_B1_prop_r_b2[(((((t443 + (t7888*16)) + (t7887*32)) + (t7886*96)) + (t7885*192)) + 576)])))*((((_B2_prop_r_b4[((((t443 + (t7932*16)) + (t7931*32)) + (t7930*96)) + (t7929*192))]*_B2_prop_r_b4[(((((t443 + (t7936*16)) + (t7935*32)) + (t7934*96)) + (t7933*192)) + 1152)]) - (_B2_prop_i_b5[((((t443 + (t7940*16)) + (t7939*32)) + (t7938*96)) + (t7937*192))]*_B2_prop_i_b5[(((((t443 + (t7944*16)) + (t7943*32)) + (t7942*96)) + (t7941*192)) + 1152)]))*_B2_prop_r_b4[(((((t443 + (t7948*16)) + (t7947*32)) + (t7946*96)) + (t7945*192)) + 576)]) - (((_B2_prop_r_b4[((((t443 + (t7952*16)) + (t7951*32)) + (t7950*96)) + (t7949*192))]*_B2_prop_i_b5[(((((t443 + (t7956*16)) + (t7955*32)) + (t7954*96)) + (t7953*192)) + 1152)]) + (_B2_prop_i_b5[((((t443 + (t7960*16)) + (t7959*32)) + (t7958*96)) + (t7957*192))]*_B2_prop_r_b4[(((((t443 + (t7964*16)) + (t7963*32)) + (t7962*96)) + (t7961*192)) + 1152)]))*_B2_prop_i_b5[(((((t443 + (t7968*16)) + (t7967*32)) + (t7966*96)) + (t7965*192)) + 576)])))))))
                }
              }
            }
            buf_C_r[(((int32((int64(c9)*(int64)45)) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7964)] = (let t444 = _hex_src_psi_r_b14[c11] in (let t446 = _hex_snk_psi_r_b16[((c3*2) + c5)] in (let t447 = _hex_src_psi_i_b15[c11] in (let t448 = _hex_snk_psi_i_b17[((c3*2) + c5)] in (buf_C_r[(((int32((int64(c9)*(int64)45)) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7964)] + ((((t444*t446) - (t447*t448))*buf_C_H_H_prop_r[0]) - (((t444*t448) + (t447*t446))*buf_C_H_H_prop_i[0])))))))
            buf_C_i[(((int32((int64(c9)*(int64)45)) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7964)] = (let t449 = _hex_src_psi_r_b14[c11] in (let t451 = _hex_snk_psi_r_b16[((c3*2) + c5)] in (let t452 = _hex_src_psi_i_b15[c11] in (let t453 = _hex_snk_psi_i_b17[((c3*2) + c5)] in (buf_C_i[(((int32((int64(c9)*(int64)45)) + int32((int64(c7)*(int64)8100))) + int32((int64(c3)*(int64)32400))) + 7964)] + ((((t449*t451) - (t452*t453))*buf_C_H_H_prop_i[0]) + (((t449*t453) + (t452*t451))*buf_C_H_H_prop_r[0])))))))
          }
        }
      }
    }
  }
  free buf_C_H_H_prop_r
  free buf_C_H_H_prop_i
}

