C like code:
for (int c1 = 0; c1 <= 1; c1 += 1) {
  for (int c3 = 0; c3 <= 1; c3 += 1)
    for (int c5 = 0; c5 <= 1; c5 += 1)
      for (int c7 = 0; c7 <= 3; c7 += 1)
        for (int c9 = 0; c9 <= 45; c9 += 1)
          for (int c11 = 0; c11 <= 3; c11 += 1)
            for (int c13 = 0; c13 <= 45; c13 += 1) {
              C_init_r(0, c1, 0, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
              C_init_i(0, c1, 0, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            }
  for (int c3 = 0; c3 <= 1; c3 += 1)
    for (int c5 = 0; c5 <= 1; c5 += 1)
      for (int c7 = 0; c7 <= 3; c7 += 1) {
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      B1_Blocal_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B1_Blocal_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B1_Bfirst_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B1_Bfirst_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B1_Bsecond_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B1_Bsecond_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B1_Bthird_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B1_Bthird_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                      flip_B1_Blocal_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 80, 0, 0);
                      flip_B1_Blocal_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 90, 0, 0);
                      flip_B1_Bfirst_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 100, 0, 0);
                      flip_B1_Bfirst_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 110, 0, 0);
                      flip_B1_Bsecond_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 120, 0, 0);
                      flip_B1_Bsecond_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 130, 0, 0);
                      flip_B1_Bthird_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 140, 0, 0);
                      flip_B1_Bthird_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 150, 0, 0);
                    }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 3; c17 += 1) {
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      B1_Blocal_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B1_Blocal_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B1_Bfirst_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B1_Bfirst_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B1_Bsecond_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B1_Bsecond_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B1_Bthird_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B1_Bthird_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                    }
                  for (int c19 = 0; c19 <= 11; c19 += 1) {
                    B1_Blocal_r1_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                    B1_Blocal_r1_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 10, 0, 0, 0, 0);
                    B1_Bfirst_r1_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 20, 0, 0, 0, 0);
                    B1_Bfirst_r1_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 30, 0, 0, 0, 0);
                    B1_Bthird_r1_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 40, 0, 0, 0, 0);
                    B1_Bthird_r1_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 50, 0, 0, 0, 0);
                    for (int c21 = 0; c21 <= 2; c21 += 1)
                      for (int c23 = 0; c23 <= 1; c23 += 1) {
                        B1_Blocal_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 0);
                        B1_Blocal_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 10);
                        B1_Bfirst_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 20);
                        B1_Bfirst_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 30);
                        B1_Bsecond_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 40);
                        B1_Bsecond_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 50);
                        B1_Bthird_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 60);
                        B1_Bthird_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 70);
                      }
                  }
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1)
                      for (int c23 = 0; c23 <= 43; c23 += 1) {
                        B1_Blocal_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 0);
                        B1_Blocal_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 10);
                        B1_Bfirst_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 20);
                        B1_Bfirst_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 30);
                        B1_Bsecond_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 40);
                        B1_Bsecond_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 50);
                        B1_Bthird_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 60);
                        B1_Bthird_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 70);
                        flip_B1_Blocal_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 80);
                        flip_B1_Blocal_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 90);
                        flip_B1_Bfirst_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 100);
                        flip_B1_Bfirst_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 110);
                        flip_B1_Bsecond_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 120);
                        flip_B1_Bsecond_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 130);
                        flip_B1_Bthird_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 140);
                        flip_B1_Bthird_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 10, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 150);
                      }
                }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      B1_Blocal_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B1_Blocal_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B1_Bfirst_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B1_Bfirst_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B1_Bsecond_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B1_Bsecond_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B1_Bthird_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B1_Bthird_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                      flip_B1_Blocal_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 80, 0, 0);
                      flip_B1_Blocal_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 90, 0, 0);
                      flip_B1_Bfirst_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 100, 0, 0);
                      flip_B1_Bfirst_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 110, 0, 0);
                      flip_B1_Bsecond_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 120, 0, 0);
                      flip_B1_Bsecond_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 130, 0, 0);
                      flip_B1_Bthird_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 140, 0, 0);
                      flip_B1_Bthird_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 20, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 150, 0, 0);
                    }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 3; c17 += 1) {
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      B1_Blocal_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B1_Blocal_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B1_Bfirst_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B1_Bfirst_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B1_Bsecond_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B1_Bsecond_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B1_Bthird_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B1_Bthird_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                    }
                  for (int c19 = 0; c19 <= 11; c19 += 1) {
                    B1_Blocal_r2_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                    B1_Blocal_r2_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 10, 0, 0, 0, 0);
                    B1_Bfirst_r2_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 20, 0, 0, 0, 0);
                    B1_Bfirst_r2_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 30, 0, 0, 0, 0);
                    B1_Bthird_r2_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 40, 0, 0, 0, 0);
                    B1_Bthird_r2_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 50, 0, 0, 0, 0);
                    for (int c21 = 0; c21 <= 2; c21 += 1)
                      for (int c23 = 0; c23 <= 1; c23 += 1) {
                        B1_Blocal_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 0);
                        B1_Blocal_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 10);
                        B1_Bfirst_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 20);
                        B1_Bfirst_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 30);
                        B1_Bsecond_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 40);
                        B1_Bsecond_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 50);
                        B1_Bthird_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 60);
                        B1_Bthird_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 70);
                      }
                  }
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1)
                      for (int c23 = 0; c23 <= 43; c23 += 1) {
                        B1_Blocal_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 0);
                        B1_Blocal_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 10);
                        B1_Bfirst_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 20);
                        B1_Bfirst_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 30);
                        B1_Bsecond_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 40);
                        B1_Bsecond_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 50);
                        B1_Bthird_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 60);
                        B1_Bthird_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 70);
                        flip_B1_Blocal_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 80);
                        flip_B1_Blocal_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 90);
                        flip_B1_Bfirst_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 100);
                        flip_B1_Bfirst_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 110);
                        flip_B1_Bsecond_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 120);
                        flip_B1_Bsecond_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 130);
                        flip_B1_Bthird_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 140);
                        flip_B1_Bthird_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 30, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 150);
                      }
                }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      B2_Blocal_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B2_Blocal_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B2_Bfirst_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B2_Bfirst_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B2_Bsecond_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B2_Bsecond_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B2_Bthird_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B2_Bthird_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                      flip_B2_Blocal_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 80, 0, 0);
                      flip_B2_Blocal_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 90, 0, 0);
                      flip_B2_Bfirst_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 100, 0, 0);
                      flip_B2_Bfirst_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 110, 0, 0);
                      flip_B2_Bsecond_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 120, 0, 0);
                      flip_B2_Bsecond_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 130, 0, 0);
                      flip_B2_Bthird_r1_r_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 140, 0, 0);
                      flip_B2_Bthird_r1_i_init(0, c1, 10, c3, 0, c5, 0, c7, 40, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 150, 0, 0);
                    }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 3; c17 += 1) {
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      B2_Blocal_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B2_Blocal_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B2_Bfirst_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B2_Bfirst_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B2_Bsecond_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B2_Bsecond_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B2_Bthird_r1_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B2_Bthird_r1_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                    }
                  for (int c19 = 0; c19 <= 11; c19 += 1) {
                    B2_Blocal_r1_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                    B2_Blocal_r1_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 10, 0, 0, 0, 0);
                    B2_Bfirst_r1_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 20, 0, 0, 0, 0);
                    B2_Bfirst_r1_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 30, 0, 0, 0, 0);
                    B2_Bthird_r1_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 40, 0, 0, 0, 0);
                    B2_Bthird_r1_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 50, 0, 0, 0, 0);
                    for (int c21 = 0; c21 <= 2; c21 += 1)
                      for (int c23 = 0; c23 <= 1; c23 += 1) {
                        B2_Blocal_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 0);
                        B2_Blocal_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 10);
                        B2_Bfirst_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 20);
                        B2_Bfirst_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 30);
                        B2_Bsecond_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 40);
                        B2_Bsecond_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 50);
                        B2_Bthird_r1_r_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 60);
                        B2_Bthird_r1_i_props(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 70);
                      }
                  }
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1)
                      for (int c23 = 0; c23 <= 43; c23 += 1) {
                        B2_Blocal_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 0);
                        B2_Blocal_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 10);
                        B2_Bfirst_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 20);
                        B2_Bfirst_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 30);
                        B2_Bsecond_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 40);
                        B2_Bsecond_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 50);
                        B2_Bthird_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 60);
                        B2_Bthird_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 70);
                        flip_B2_Blocal_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 80);
                        flip_B2_Blocal_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 90);
                        flip_B2_Bfirst_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 100);
                        flip_B2_Bfirst_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 110);
                        flip_B2_Bsecond_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 120);
                        flip_B2_Bsecond_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 130);
                        flip_B2_Bthird_r1_r_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 140);
                        flip_B2_Bthird_r1_i_update(0, c1, 10, c3, 0, c5, 0, c7, 50, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 150);
                      }
                }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      B2_Blocal_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B2_Blocal_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B2_Bfirst_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B2_Bfirst_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B2_Bsecond_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B2_Bsecond_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B2_Bthird_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B2_Bthird_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                      flip_B2_Blocal_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 80, 0, 0);
                      flip_B2_Blocal_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 90, 0, 0);
                      flip_B2_Bfirst_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 100, 0, 0);
                      flip_B2_Bfirst_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 110, 0, 0);
                      flip_B2_Bsecond_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 120, 0, 0);
                      flip_B2_Bsecond_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 130, 0, 0);
                      flip_B2_Bthird_r2_r_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 140, 0, 0);
                      flip_B2_Bthird_r2_i_init(0, c1, 10, c3, 0, c5, 0, c7, 60, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 150, 0, 0);
                    }
        for (int c9 = 0; c9 <= 2; c9 += 1)
          for (int c11 = 0; c11 <= 1; c11 += 1)
            for (int c13 = 0; c13 <= 2; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 3; c17 += 1) {
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      B2_Blocal_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 0, 0, 0);
                      B2_Blocal_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 10, 0, 0);
                      B2_Bfirst_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 20, 0, 0);
                      B2_Bfirst_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 30, 0, 0);
                      B2_Bsecond_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 40, 0, 0);
                      B2_Bsecond_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 50, 0, 0);
                      B2_Bthird_r2_r_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 60, 0, 0);
                      B2_Bthird_r2_i_props_init(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, c21, 70, 0, 0);
                    }
                  for (int c19 = 0; c19 <= 11; c19 += 1) {
                    B2_Blocal_r2_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                    B2_Blocal_r2_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 10, 0, 0, 0, 0);
                    B2_Bfirst_r2_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 20, 0, 0, 0, 0);
                    B2_Bfirst_r2_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 30, 0, 0, 0, 0);
                    B2_Bthird_r2_r_diquark(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 40, 0, 0, 0, 0);
                    B2_Bthird_r2_i_diquark(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 50, 0, 0, 0, 0);
                    for (int c21 = 0; c21 <= 2; c21 += 1)
                      for (int c23 = 0; c23 <= 1; c23 += 1) {
                        B2_Blocal_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 0);
                        B2_Blocal_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 10);
                        B2_Bfirst_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 20);
                        B2_Bfirst_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 30);
                        B2_Bsecond_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 40);
                        B2_Bsecond_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 50);
                        B2_Bthird_r2_r_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 60);
                        B2_Bthird_r2_i_props(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 60, c21, 0, c23, 70);
                      }
                  }
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1)
                      for (int c23 = 0; c23 <= 43; c23 += 1) {
                        B2_Blocal_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 0);
                        B2_Blocal_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 10);
                        B2_Bfirst_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 20);
                        B2_Bfirst_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 30);
                        B2_Bsecond_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 40);
                        B2_Bsecond_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 50);
                        B2_Bthird_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 60);
                        B2_Bthird_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 70);
                        flip_B2_Blocal_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 80);
                        flip_B2_Blocal_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 90);
                        flip_B2_Bfirst_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 100);
                        flip_B2_Bfirst_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 110);
                        flip_B2_Bsecond_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 120);
                        flip_B2_Bsecond_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 130);
                        flip_B2_Bthird_r2_r_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 140);
                        flip_B2_Bthird_r2_i_update(0, c1, 10, c3, 0, c5, 0, c7, 70, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, c21, 0, c23, 150);
                      }
                }
        for (int c9 = 0; c9 <= 3; c9 += 1)
          for (int c11 = 0; c11 <= 43; c11 += 1)
            for (int c13 = 0; c13 <= 3; c13 += 1) {
              C_BB_BB_prop_init_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
              C_BB_BB_prop_init_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
              for (int c15 = 0; c15 <= 1; c15 += 1)
                for (int c17 = 0; c17 <= 35; c17 += 1)
                  for (int c19 = 0; c19 <= 287; c19 += 1) {
                    BB_BB_new_term_0_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    BB_BB_new_term_0_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                    BB_BB_new_term_1_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 20, 0, 0, 0, 0);
                    BB_BB_new_term_1_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 30, 0, 0, 0, 0);
                    BB_BB_new_term_2_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 40, 0, 0, 0, 0);
                    BB_BB_new_term_2_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 50, 0, 0, 0, 0);
                    BB_BB_new_term_3_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 60, 0, 0, 0, 0);
                    BB_BB_new_term_3_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 70, 0, 0, 0, 0);
                    BB_BB_new_term_4_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 80, 0, 0, 0, 0);
                    BB_BB_new_term_4_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 90, 0, 0, 0, 0);
                    BB_BB_new_term_5_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 100, 0, 0, 0, 0);
                    BB_BB_new_term_5_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 110, 0, 0, 0, 0);
                    BB_BB_new_term_6_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 120, 0, 0, 0, 0);
                    BB_BB_new_term_6_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 130, 0, 0, 0, 0);
                    BB_BB_new_term_7_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 140, 0, 0, 0, 0);
                    BB_BB_new_term_7_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 150, 0, 0, 0, 0);
                    BB_BB_new_term_0_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 160, 0, 0, 0, 0);
                    BB_BB_new_term_0_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 170, 0, 0, 0, 0);
                    BB_BB_new_term_1_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 180, 0, 0, 0, 0);
                    BB_BB_new_term_1_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 190, 0, 0, 0, 0);
                    BB_BB_new_term_2_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 200, 0, 0, 0, 0);
                    BB_BB_new_term_2_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 210, 0, 0, 0, 0);
                    BB_BB_new_term_3_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 220, 0, 0, 0, 0);
                    BB_BB_new_term_3_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 230, 0, 0, 0, 0);
                    BB_BB_new_term_4_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 240, 0, 0, 0, 0);
                    BB_BB_new_term_4_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 250, 0, 0, 0, 0);
                    BB_BB_new_term_5_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 260, 0, 0, 0, 0);
                    BB_BB_new_term_5_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 270, 0, 0, 0, 0);
                    BB_BB_new_term_6_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 280, 0, 0, 0, 0);
                    BB_BB_new_term_6_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 290, 0, 0, 0, 0);
                    BB_BB_new_term_7_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 300, 0, 0, 0, 0);
                    BB_BB_new_term_7_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 310, 0, 0, 0, 0);
                    BB_BB_new_term_0_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 320, 0, 0, 0, 0);
                    BB_BB_new_term_0_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 330, 0, 0, 0, 0);
                    BB_BB_new_term_1_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 340, 0, 0, 0, 0);
                    BB_BB_new_term_1_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 350, 0, 0, 0, 0);
                    BB_BB_new_term_2_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 360, 0, 0, 0, 0);
                    BB_BB_new_term_2_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 370, 0, 0, 0, 0);
                    BB_BB_new_term_3_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 380, 0, 0, 0, 0);
                    BB_BB_new_term_3_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 390, 0, 0, 0, 0);
                    BB_BB_new_term_4_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 400, 0, 0, 0, 0);
                    BB_BB_new_term_4_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 410, 0, 0, 0, 0);
                    BB_BB_new_term_5_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 420, 0, 0, 0, 0);
                    BB_BB_new_term_5_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 430, 0, 0, 0, 0);
                    BB_BB_new_term_6_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 440, 0, 0, 0, 0);
                    BB_BB_new_term_6_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 450, 0, 0, 0, 0);
                    BB_BB_new_term_7_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 460, 0, 0, 0, 0);
                    BB_BB_new_term_7_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 470, 0, 0, 0, 0);
                    BB_BB_new_term_0_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 480, 0, 0, 0, 0);
                    BB_BB_new_term_0_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 490, 0, 0, 0, 0);
                    BB_BB_new_term_1_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 500, 0, 0, 0, 0);
                    BB_BB_new_term_1_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 510, 0, 0, 0, 0);
                    BB_BB_new_term_2_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 520, 0, 0, 0, 0);
                    BB_BB_new_term_2_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 530, 0, 0, 0, 0);
                    BB_BB_new_term_3_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 540, 0, 0, 0, 0);
                    BB_BB_new_term_3_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 550, 0, 0, 0, 0);
                    BB_BB_new_term_4_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 560, 0, 0, 0, 0);
                    BB_BB_new_term_4_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 570, 0, 0, 0, 0);
                    BB_BB_new_term_5_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 580, 0, 0, 0, 0);
                    BB_BB_new_term_5_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 590, 0, 0, 0, 0);
                    BB_BB_new_term_6_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 600, 0, 0, 0, 0);
                    BB_BB_new_term_6_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 610, 0, 0, 0, 0);
                    BB_BB_new_term_7_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 620, 0, 0, 0, 0);
                    BB_BB_new_term_7_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 630, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 640, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 650, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 660, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 670, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 680, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 690, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 700, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 710, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 720, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 730, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 740, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 750, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 760, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 770, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r1_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 780, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r1_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 790, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 800, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 810, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 820, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 830, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 840, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 850, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 860, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 870, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 880, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 890, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 900, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 910, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 920, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 930, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r2_b1_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 940, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r2_b1_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 950, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 960, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 970, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 980, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 990, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1000, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1010, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1020, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1030, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1040, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1050, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1060, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1070, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1080, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1090, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r1_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1100, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r1_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1110, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1120, 0, 0, 0, 0);
                    flip_BB_BB_new_term_0_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1130, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1140, 0, 0, 0, 0);
                    flip_BB_BB_new_term_1_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1150, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1160, 0, 0, 0, 0);
                    flip_BB_BB_new_term_2_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1170, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1180, 0, 0, 0, 0);
                    flip_BB_BB_new_term_3_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1190, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1200, 0, 0, 0, 0);
                    flip_BB_BB_new_term_4_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1210, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1220, 0, 0, 0, 0);
                    flip_BB_BB_new_term_5_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1230, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1240, 0, 0, 0, 0);
                    flip_BB_BB_new_term_6_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1250, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r2_b2_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1260, 0, 0, 0, 0);
                    flip_BB_BB_new_term_7_r2_b2_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1270, 0, 0, 0, 0);
                    C_BB_BB_prop_update_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1280, 0, 0, 0, 0);
                    C_BB_BB_prop_update_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 20, c15, 0, c17, 0, c19, 1290, 0, 0, 0, 0);
                  }
              for (int c15 = 0; c15 <= 2; c15 += 1) {
                C_BB_BB_update_b_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 30, c15, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                C_BB_BB_update_b_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 30, c15, 10, 0, 0, 0, 0, 0, 0, 0, 0);
              }
              for (int c15 = 0; c15 <= 40; c15 += 1) {
                C_BB_BB_update_s_r(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 40, c15, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                C_BB_BB_update_s_i(0, c1, 10, c3, 0, c5, 0, c7, 80, c9, 0, c11, 0, c13, 40, c15, 10, 0, 0, 0, 0, 0, 0, 0, 0);
              }
            }
      }
  for (int c3 = 0; c3 <= 1; c3 += 1)
    for (int c5 = 0; c5 <= 1; c5 += 1) {
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B1_Blocal_r1_r_init(0, c1, 20, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B1_Blocal_r1_i_init(0, c1, 20, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B1_Blocal_r1_r_init(0, c1, 20, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B1_Blocal_r1_i_init(0, c1, 20, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    src_B1_Blocal_r1_r_props_init(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    src_B1_Blocal_r1_i_props_init(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  src_B1_Blocal_r1_r_diquark(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  src_B1_Blocal_r1_i_diquark(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      src_B1_Blocal_r1_r_props(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      src_B1_Blocal_r1_i_props(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      src_B1_Blocal_r1_r_update(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      src_B1_Blocal_r1_i_update(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_src_B1_Blocal_r1_r_update(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_src_B1_Blocal_r1_i_update(0, c1, 20, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B1_Blocal_r2_r_init(0, c1, 20, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B1_Blocal_r2_i_init(0, c1, 20, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B1_Blocal_r2_r_init(0, c1, 20, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B1_Blocal_r2_i_init(0, c1, 20, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    src_B1_Blocal_r2_r_props_init(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    src_B1_Blocal_r2_i_props_init(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  src_B1_Blocal_r2_r_diquark(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  src_B1_Blocal_r2_i_diquark(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      src_B1_Blocal_r2_r_props(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      src_B1_Blocal_r2_i_props(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      src_B1_Blocal_r2_r_update(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      src_B1_Blocal_r2_i_update(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_src_B1_Blocal_r2_r_update(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_src_B1_Blocal_r2_i_update(0, c1, 20, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B2_Blocal_r1_r_init(0, c1, 20, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B2_Blocal_r1_i_init(0, c1, 20, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B2_Blocal_r1_r_init(0, c1, 20, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B2_Blocal_r1_i_init(0, c1, 20, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    src_B2_Blocal_r1_r_props_init(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    src_B2_Blocal_r1_i_props_init(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  src_B2_Blocal_r1_r_diquark(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  src_B2_Blocal_r1_i_diquark(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      src_B2_Blocal_r1_r_props(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      src_B2_Blocal_r1_i_props(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      src_B2_Blocal_r1_r_update(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      src_B2_Blocal_r1_i_update(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_src_B2_Blocal_r1_r_update(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_src_B2_Blocal_r1_i_update(0, c1, 20, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B2_Blocal_r2_r_init(0, c1, 20, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    src_B2_Blocal_r2_i_init(0, c1, 20, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B2_Blocal_r2_r_init(0, c1, 20, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_src_B2_Blocal_r2_i_init(0, c1, 20, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    src_B2_Blocal_r2_r_props_init(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    src_B2_Blocal_r2_i_props_init(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  src_B2_Blocal_r2_r_diquark(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  src_B2_Blocal_r2_i_diquark(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      src_B2_Blocal_r2_r_props(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      src_B2_Blocal_r2_i_props(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      src_B2_Blocal_r2_r_update(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      src_B2_Blocal_r2_i_update(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_src_B2_Blocal_r2_r_update(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_src_B2_Blocal_r2_i_update(0, c1, 20, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 3; c7 += 1)
        for (int c9 = 0; c9 <= 43; c9 += 1)
          for (int c11 = 0; c11 <= 3; c11 += 1) {
            C_BB_H_prop_init_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            C_BB_H_prop_init_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 35; c15 += 1)
                for (int c17 = 0; c17 <= 31; c17 += 1) {
                  BB_H_new_term_0_r1_b1_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 0, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r1_b1_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 10, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r2_b1_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 20, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r2_b1_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 30, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r1_b2_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 40, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r1_b2_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 50, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r2_b2_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 60, 0, 0, 0, 0, 0, 0);
                  BB_H_new_term_0_r2_b2_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 70, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r1_b1_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 80, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r1_b1_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 90, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r2_b1_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 100, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r2_b1_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 110, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r1_b2_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 120, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r1_b2_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 130, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r2_b2_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 140, 0, 0, 0, 0, 0, 0);
                  flip_BB_H_new_term_0_r2_b2_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 150, 0, 0, 0, 0, 0, 0);
                  C_BB_H_prop_update_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 160, 0, 0, 0, 0, 0, 0);
                  C_BB_H_prop_update_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 170, 0, 0, 0, 0, 0, 0);
                }
            for (int c13 = 0; c13 <= 1; c13 += 1) {
              C_BB_H_update_r(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 30, c13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
              C_BB_H_update_i(0, c1, 20, c3, 0, c5, 80, c7, 0, c9, 0, c11, 30, c13, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            }
          }
    }
  for (int c3 = 0; c3 <= 1; c3 += 1)
    for (int c5 = 0; c5 <= 1; c5 += 1) {
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B1_Blocal_r1_r_init(0, c1, 30, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B1_Blocal_r1_i_init(0, c1, 30, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B1_Blocal_r1_r_init(0, c1, 30, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B1_Blocal_r1_i_init(0, c1, 30, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    snk_B1_Blocal_r1_r_props_init(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    snk_B1_Blocal_r1_i_props_init(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  snk_B1_Blocal_r1_r_diquark(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  snk_B1_Blocal_r1_i_diquark(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      snk_B1_Blocal_r1_r_props(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      snk_B1_Blocal_r1_i_props(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      snk_B1_Blocal_r1_r_update(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      snk_B1_Blocal_r1_i_update(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_snk_B1_Blocal_r1_r_update(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_snk_B1_Blocal_r1_i_update(0, c1, 30, c3, 0, c5, 10, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B1_Blocal_r2_r_init(0, c1, 30, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B1_Blocal_r2_i_init(0, c1, 30, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B1_Blocal_r2_r_init(0, c1, 30, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B1_Blocal_r2_i_init(0, c1, 30, c3, 0, c5, 20, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    snk_B1_Blocal_r2_r_props_init(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    snk_B1_Blocal_r2_i_props_init(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  snk_B1_Blocal_r2_r_diquark(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  snk_B1_Blocal_r2_i_diquark(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      snk_B1_Blocal_r2_r_props(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      snk_B1_Blocal_r2_i_props(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      snk_B1_Blocal_r2_r_update(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      snk_B1_Blocal_r2_i_update(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_snk_B1_Blocal_r2_r_update(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_snk_B1_Blocal_r2_i_update(0, c1, 30, c3, 0, c5, 30, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B2_Blocal_r1_r_init(0, c1, 30, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B2_Blocal_r1_i_init(0, c1, 30, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B2_Blocal_r1_r_init(0, c1, 30, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B2_Blocal_r1_i_init(0, c1, 30, c3, 0, c5, 40, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    snk_B2_Blocal_r1_r_props_init(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    snk_B2_Blocal_r1_i_props_init(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  snk_B2_Blocal_r1_r_diquark(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  snk_B2_Blocal_r1_i_diquark(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      snk_B2_Blocal_r1_r_props(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      snk_B2_Blocal_r1_i_props(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      snk_B2_Blocal_r1_r_update(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      snk_B2_Blocal_r1_i_update(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_snk_B2_Blocal_r1_r_update(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      flip_snk_B2_Blocal_r1_i_update(0, c1, 30, c3, 0, c5, 50, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 2; c15 += 1)
                for (int c17 = 0; c17 <= 1; c17 += 1) {
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B2_Blocal_r2_r_init(0, c1, 30, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    snk_B2_Blocal_r2_i_init(0, c1, 30, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 10, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B2_Blocal_r2_r_init(0, c1, 30, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 20, c19, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 43; c19 += 1)
                    flip_snk_B2_Blocal_r2_i_init(0, c1, 30, c3, 0, c5, 60, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 30, c19, 0, 0, 0, 0, 0);
                }
      for (int c7 = 0; c7 <= 2; c7 += 1)
        for (int c9 = 0; c9 <= 1; c9 += 1)
          for (int c11 = 0; c11 <= 2; c11 += 1)
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 3; c15 += 1) {
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1) {
                    snk_B2_Blocal_r2_r_props_init(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 0, 0, 0, 0, 0);
                    snk_B2_Blocal_r2_i_props_init(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 0, c17, 0, c19, 10, 0, 0, 0, 0);
                  }
                for (int c17 = 0; c17 <= 11; c17 += 1) {
                  snk_B2_Blocal_r2_r_diquark(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 0, 0, 0, 0, 0, 0, 0);
                  snk_B2_Blocal_r2_i_diquark(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 10, 0, 0, 0, 0, 0, 0);
                  for (int c19 = 0; c19 <= 2; c19 += 1)
                    for (int c21 = 0; c21 <= 1; c21 += 1) {
                      snk_B2_Blocal_r2_r_props(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 0, 0, 0);
                      snk_B2_Blocal_r2_i_props(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 10, c17, 20, c19, 0, c21, 10, 0, 0);
                    }
                }
                for (int c17 = 0; c17 <= 2; c17 += 1)
                  for (int c19 = 0; c19 <= 1; c19 += 1)
                    for (int c21 = 0; c21 <= 43; c21 += 1) {
                      snk_B2_Blocal_r2_r_update(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 0, 0, 0);
                      flip_snk_B2_Blocal_r2_r_update(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 10, 0, 0);
                      flip_snk_B2_Blocal_r2_i_update(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 20, 0, 0);
                      snk_B2_Blocal_r2_i_update(0, c1, 30, c3, 0, c5, 70, c7, 0, c9, 0, c11, 0, c13, 0, c15, 20, c17, 0, c19, 0, c21, 30, 0, 0);
                    }
              }
      for (int c7 = 0; c7 <= 3; c7 += 1)
        for (int c9 = 0; c9 <= 43; c9 += 1)
          for (int c11 = 0; c11 <= 3; c11 += 1) {
            C_H_BB_prop_init_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            C_H_BB_prop_init_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 35; c15 += 1)
                for (int c17 = 0; c17 <= 31; c17 += 1) {
                  H_BB_new_term_0_r1_b1_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 0, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r1_b1_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 10, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r2_b1_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 20, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r2_b1_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 30, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r1_b2_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 40, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r1_b2_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 50, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r2_b2_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 60, 0, 0, 0, 0, 0, 0);
                  H_BB_new_term_0_r2_b2_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 70, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r1_b1_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 80, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r1_b1_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 90, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r2_b1_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 100, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r2_b1_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 110, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r1_b2_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 120, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r1_b2_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 130, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r2_b2_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 140, 0, 0, 0, 0, 0, 0);
                  flip_H_BB_new_term_0_r2_b2_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 150, 0, 0, 0, 0, 0, 0);
                  C_H_BB_prop_update_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 160, 0, 0, 0, 0, 0, 0);
                  C_H_BB_prop_update_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 170, 0, 0, 0, 0, 0, 0);
                }
            for (int c13 = 0; c13 <= 1; c13 += 1) {
              C_H_BB_update_r(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 30, c13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
              C_H_BB_update_i(0, c1, 30, c3, 0, c5, 80, c7, 0, c9, 0, c11, 30, c13, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            }
          }
    }
  for (int c3 = 0; c3 <= 1; c3 += 1)
    for (int c5 = 0; c5 <= 1; c5 += 1)
      for (int c7 = 0; c7 <= 3; c7 += 1)
        for (int c9 = 0; c9 <= 3; c9 += 1)
          for (int c11 = 0; c11 <= 3; c11 += 1) {
            C_H_H_prop_init_r(0, c1, 40, c3, 0, c5, 0, c7, 0, c9, 0, c11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            C_H_H_prop_init_i(0, c1, 40, c3, 0, c5, 0, c7, 0, c9, 0, c11, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            for (int c13 = 0; c13 <= 35; c13 += 1)
              for (int c15 = 0; c15 <= 31; c15 += 1)
                for (int c17 = 0; c17 <= 31; c17 += 1) {
                  C_H_H_prop_update_r(0, c1, 40, c3, 0, c5, 0, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 0, 0, 0, 0, 0, 0, 0);
                  C_H_H_prop_update_i(0, c1, 40, c3, 0, c5, 0, c7, 0, c9, 0, c11, 20, c13, 0, c15, 0, c17, 10, 0, 0, 0, 0, 0, 0);
                }
            for (int c13 = 0; c13 <= 1; c13 += 1)
              for (int c15 = 0; c15 <= 1; c15 += 1) {
                C_H_H_update_r(0, c1, 40, c3, 0, c5, 0, c7, 0, c9, 0, c11, 30, c13, 0, c15, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                C_H_H_update_i(0, c1, 40, c3, 0, c5, 0, c7, 0, c9, 0, c11, 30, c13, 0, c15, 10, 0, 0, 0, 0, 0, 0, 0, 0);
              }
          }
}